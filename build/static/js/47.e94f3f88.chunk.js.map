{"version":3,"sources":["views/ui-elements/cards/analytics/Sales2.js","views/ui-elements/cards/analytics/Revenue.js","views/ui-elements/cards/analytics/AvgSessions.js","views/ui-elements/cards/analytics/ProductOrders.js","views/ui-elements/cards/analytics/SupportTracker.js","views/ui-elements/cards/analytics/SessionByDevice.js","views/ui-elements/cards/analytics/index.js","views/ui-elements/cards/analytics/Customers.js","views/ui-elements/cards/analytics/Sales.js","views/ui-elements/cards/analytics/Earnings.js","views/ui-elements/cards/analytics/GoalOverview.js","views/ui-elements/cards/analytics/RevenueReport.js"],"names":["Sales2","props","options","chart","toolbar","show","zoom","enabled","type","dropShadow","top","left","blur","opacity","offsetX","stroke","curve","width","grid","borderColor","padding","bottom","legend","colors","fill","gradient","shade","inverseColors","gradientToColors","primary","shadeIntensity","opacityFrom","opacityTo","stops","markers","size","hover","xaxis","labels","offsetY","style","fontSize","fontFamily","axisTicks","categories","axisBorder","tickPlacement","yaxis","tickAmount","formatter","val","toFixed","tooltip","x","className","tag","series","name","data","height","Revenue","useState","setData","useEffect","axios","get","then","res","dashArray","AvgSessions","sparkline","right","states","filter","plotOptions","bar","columnWidth","distributed","borderRadius","sm","order","xs","kFormatter","sessions","growth","color","end","last_days","map","item","md","goal","value","users","retention","duration","ProductOrders","radialBar","hollow","track","strokeWidth","margin","dataLabels","fontWeight","total","label","warning","danger","lineCap","chart_info","finished","pending","rejected","SupportTracker","startAngle","endAngle","background","title","totalTicket","id","newTicket","openTicket","responseTime","SessionByDevice","comparedResult","index","IconTag","Icon","icon","classnames","length","iconColor","usage","upDown","AnalyticsCards","context","useContext","ThemeColors","lg","main","RevenueReport","GoalOverview","success","Sales","info","Customers","Earnings","colorsData","secondary","dark","cdata","text","result","count","pluck","arr","key","i","foreColor","radar","polygons","strokeColors","connectorColors","pie","donut","parseInt","responsive","breakpoint","completed","inProgress","revenueOptions","stacked","lines","budgetOptions","outline","caret","years","price","budget"],"mappings":"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","file":"static/js/47.e94f3f88.chunk.js","sourcesContent":["// ** Third Party Components\nimport Chart from 'react-apexcharts'\nimport { Settings } from 'react-feather'\n\n// ** Reactstrap Imports\nimport { Card, CardHeader, CardTitle, CardBody, CardText } from 'reactstrap'\n\nconst Sales2 = props => {\n  const options = {\n      chart: {\n        toolbar: { show: false },\n        zoom: { enabled: false },\n        type: 'line',\n        dropShadow: {\n          enabled: true,\n          top: 18,\n          left: 2,\n          blur: 5,\n          opacity: 0.2\n        },\n        offsetX: -10\n      },\n      stroke: {\n        curve: 'smooth',\n        width: 4\n      },\n      grid: {\n        borderColor: '#ebe9f1',\n        padding: {\n          top: -20,\n          bottom: 5,\n          left: 20\n        }\n      },\n      legend: {\n        show: false\n      },\n      colors: ['#df87f2'],\n      fill: {\n        type: 'gradient',\n        gradient: {\n          shade: 'dark',\n          inverseColors: false,\n          gradientToColors: [props.primary],\n          shadeIntensity: 1,\n          type: 'horizontal',\n          opacityFrom: 1,\n          opacityTo: 1,\n          stops: [0, 100, 100, 100]\n        }\n      },\n      markers: {\n        size: 0,\n        hover: {\n          size: 5\n        }\n      },\n      xaxis: {\n        labels: {\n          offsetY: 5,\n          style: {\n            colors: '#b9b9c3',\n            fontSize: '0.857rem',\n            fontFamily: 'Montserrat'\n          }\n        },\n        axisTicks: {\n          show: false\n        },\n        categories: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'July', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n        axisBorder: {\n          show: false\n        },\n        tickPlacement: 'on'\n      },\n      yaxis: {\n        tickAmount: 5,\n        labels: {\n          style: {\n            colors: '#b9b9c3',\n            fontSize: '0.857rem',\n            fontFamily: 'Montserrat'\n          },\n          formatter(val) {\n            return val > 999 ? `${(val / 1000).toFixed(1)}k` : val\n          }\n        }\n      },\n      tooltip: {\n        x: { show: false }\n      }\n    },\n    series = [\n      {\n        name: 'Sales',\n        data: [140, 180, 150, 205, 160, 295, 125, 255, 205, 305, 240, 295]\n      }\n    ]\n  return (\n    <Card>\n      <CardHeader className='align-items-start'>\n        <div>\n          <CardTitle className='mb-25' tag='h4'>\n            Sales\n          </CardTitle>\n          <CardText className='mb-0'>2020 Total Sales: 12.84k</CardText>\n        </div>\n        <Settings size={18} className='text-muted cursor-pointer' />\n      </CardHeader>\n      <CardBody className='pb-0'>\n        <Chart options={options} series={series} type='line' height={240} />\n      </CardBody>\n    </Card>\n  )\n}\nexport default Sales2\n","// ** React Imports\nimport { useEffect, useState } from 'react'\n\n// ** Third Party Components\nimport axios from 'axios'\nimport Chart from 'react-apexcharts'\nimport { Settings } from 'react-feather'\n\n// ** Reactstrap Imports\nimport { Card, CardHeader, CardTitle, CardBody, CardText } from 'reactstrap'\n\nconst Revenue = props => {\n  // ** State\n  const [data, setData] = useState(null)\n\n  useEffect(() => {\n    axios.get('/card/card-analytics/revenue').then(res => setData(res.data))\n  }, [])\n\n  const options = {\n      chart: {\n        toolbar: { show: false },\n        zoom: { enabled: false },\n        type: 'line',\n        offsetX: -10\n      },\n      stroke: {\n        curve: 'smooth',\n        dashArray: [0, 12],\n        width: [4, 3]\n      },\n      legend: {\n        show: false\n      },\n      colors: ['#d0ccff', '#ebe9f1'],\n      fill: {\n        type: 'gradient',\n        gradient: {\n          shade: 'dark',\n          inverseColors: false,\n          gradientToColors: [props.primary, '#ebe9f1'],\n          shadeIntensity: 1,\n          type: 'horizontal',\n          opacityFrom: 1,\n          opacityTo: 1,\n          stops: [0, 100, 100, 100]\n        }\n      },\n      markers: {\n        size: 0,\n        hover: {\n          size: 5\n        }\n      },\n      xaxis: {\n        labels: {\n          style: {\n            colors: '#b9b9c3',\n            fontSize: '1rem'\n          }\n        },\n        axisTicks: {\n          show: false\n        },\n        categories: ['01', '05', '09', '13', '17', '21', '26', '31'],\n        axisBorder: {\n          show: false\n        },\n        tickPlacement: 'on'\n      },\n      yaxis: {\n        tickAmount: 5,\n        labels: {\n          style: {\n            colors: '#b9b9c3',\n            fontSize: '1rem'\n          },\n          formatter(val) {\n            return val > 999 ? `${(val / 1000).toFixed(0)}k` : val\n          }\n        }\n      },\n      grid: {\n        borderColor: '#e7eef7',\n        padding: {\n          top: -20,\n          bottom: -10,\n          left: 20\n        }\n      },\n      tooltip: {\n        x: { show: false }\n      }\n    },\n    series = [\n      {\n        name: 'This Month',\n        data: [45000, 47000, 44800, 47500, 45500, 48000, 46500, 48600]\n      },\n      {\n        name: 'Last Month',\n        data: [46000, 48000, 45500, 46600, 44500, 46500, 45000, 47000]\n      }\n    ]\n  return data !== null ? (\n    <Card>\n      <CardHeader>\n        <CardTitle tag='h4'>Revenue</CardTitle>\n        <Settings size={18} className='text-muted cursor-pointer' />\n      </CardHeader>\n      <CardBody>\n        <div className='d-flex justify-content-start mb-3'>\n          <div className='me-2'>\n            <CardText className='mb-50'>This Month</CardText>\n            <h3 className='fw-bolder'>\n              <sup className='font-medium-1 fw-bold me-25'>$</sup>\n              <span className='text-primary'>86,589</span>\n            </h3>\n          </div>\n          <div>\n            <CardText className='mb-50'>Last Month</CardText>\n            <h3 className='fw-bolder'>\n              <sup className='font-medium-1 fw-bold me-25'>$</sup>\n              <span>73,683</span>\n            </h3>\n          </div>\n        </div>\n        <Chart options={options} series={series} type='line' height={240} />\n      </CardBody>\n    </Card>\n  ) : null\n}\nexport default Revenue\n","// ** React Imports\nimport { useEffect, useState } from 'react'\n\n// ** Third Party Components\nimport axios from 'axios'\nimport Chart from 'react-apexcharts'\n\n// ** Utils\nimport { kFormatter } from '@utils'\n\n// ** Reactstrap Imports\nimport {\n  Row,\n  Col,\n  Card,\n  Button,\n  CardBody,\n  CardText,\n  Progress,\n  DropdownMenu,\n  DropdownItem,\n  DropdownToggle,\n  UncontrolledDropdown\n} from 'reactstrap'\n\nconst AvgSessions = props => {\n  // ** States\n  const [data, setData] = useState(null)\n\n  useEffect(() => {\n    axios.get('/card/card-analytics/avg-sessions').then(res => setData(res.data))\n    return () => setData(null)\n  }, [])\n\n  const options = {\n      chart: {\n        sparkline: { enabled: true },\n        toolbar: { show: false }\n      },\n      grid: {\n        show: false,\n        padding: {\n          left: 0,\n          right: 0\n        }\n      },\n      states: {\n        hover: {\n          filter: 'none'\n        }\n      },\n      colors: ['#ebf0f7', '#ebf0f7', props.primary, '#ebf0f7', '#ebf0f7', '#ebf0f7'],\n      plotOptions: {\n        bar: {\n          columnWidth: '45%',\n          distributed: true,\n          borderRadius: [10]\n        }\n      },\n      tooltip: {\n        x: { show: false }\n      },\n      xaxis: {\n        type: 'numeric'\n      }\n    },\n    series = [\n      {\n        name: 'Sessions',\n        data: [75, 125, 225, 175, 125, 75, 25]\n      }\n    ]\n\n  return data !== null ? (\n    <Card>\n      <CardBody>\n        <Row className='pb-50'>\n          <Col\n            sm={{ size: 6, order: 1 }}\n            xs={{ order: 2 }}\n            className='d-flex justify-content-between flex-column mt-lg-0 mt-2'\n          >\n            <div className='session-info mb-1 mb-lg-0'>\n              <h2 className='fw-bold mb-25'>{kFormatter(data.sessions)}</h2>\n              <CardText className='fw-bold mb-2'>Avg Sessions</CardText>\n              <h5 className='font-medium-2'>\n                <span className='text-success me-50'>{data.growth}</span>\n                <span className='fw-normal'>vs last 7 days</span>\n              </h5>\n            </div>\n            <Button color='primary'>View Details</Button>\n          </Col>\n          <Col\n            sm={{ size: 6, order: 2 }}\n            xs={{ order: 1 }}\n            className='d-flex justify-content-between flex-column text-end'\n          >\n            <UncontrolledDropdown className='chart-dropdown'>\n              <DropdownToggle color='' className='bg-transparent btn-sm border-0 p-50'>\n                Last 7 days\n              </DropdownToggle>\n              <DropdownMenu end>\n                {data.last_days.map(item => (\n                  <DropdownItem className='w-100' key={item}>\n                    {item}\n                  </DropdownItem>\n                ))}\n              </DropdownMenu>\n            </UncontrolledDropdown>\n            <Chart options={options} series={series} type='bar' height={200} />\n          </Col>\n        </Row>\n        <hr />\n        <Row className='pt-50'>\n          <Col className='mb-2' md='6' sm='12'>\n            <p className='mb-50'>Goal: ${data.goal}</p>\n            <Progress className='avg-session-progress mt-25' value='50' />\n          </Col>\n          <Col className='mb-2' md='6' sm='12'>\n            <p className='mb-50'>Users: {kFormatter(data.users)}</p>\n            <Progress className='avg-session-progress progress-bar-warning mt-25' value='60' />\n          </Col>\n          <Col md='6' sm='12'>\n            <p className='mb-50'>Retention: {data.retention}%</p>\n            <Progress className='avg-session-progress progress-bar-danger mt-25' value='70' />\n          </Col>\n          <Col md='6' sm='12'>\n            <p className='mb-50'>Duration: {data.duration}yr</p>\n            <Progress className='avg-session-progress progress-bar-success mt-25' value='80' />\n          </Col>\n        </Row>\n      </CardBody>\n    </Card>\n  ) : null\n}\nexport default AvgSessions\n","// ** React Imports\nimport { useEffect, useState } from 'react'\n\n// ** Third Party Components\nimport axios from 'axios'\nimport Chart from 'react-apexcharts'\nimport { Circle } from 'react-feather'\n\n// ** Reactstrap Imports\nimport {\n  Card,\n  CardBody,\n  CardTitle,\n  CardHeader,\n  DropdownMenu,\n  DropdownItem,\n  DropdownToggle,\n  UncontrolledDropdown\n} from 'reactstrap'\n\nconst ProductOrders = props => {\n  // ** State\n  const [data, setData] = useState(null)\n\n  useEffect(() => {\n    axios.get('/card/card-analytics/product-orders').then(res => setData(res.data))\n  }, [])\n\n  const options = {\n      labels: ['Finished', 'Pending', 'Rejected'],\n      plotOptions: {\n        radialBar: {\n          size: 150,\n          hollow: {\n            size: '20%'\n          },\n          track: {\n            strokeWidth: '100%',\n            margin: 15\n          },\n          dataLabels: {\n            value: {\n              fontSize: '1rem',\n              colors: '#5e5873',\n              fontWeight: '500',\n              offsetY: 5\n            },\n            total: {\n              show: true,\n              label: 'Total',\n              fontSize: '1.286rem',\n              colors: '#5e5873',\n              fontWeight: '500',\n\n              formatter() {\n                // By default this function returns the average of all series. The below is just an example to show the use of custom formatter function\n                return 42459\n              }\n            }\n          }\n        }\n      },\n      colors: [props.primary, props.warning, props.danger],\n      stroke: {\n        lineCap: 'round'\n      },\n      chart: {\n        height: 355,\n        dropShadow: {\n          enabled: true,\n          blur: 3,\n          left: 1,\n          top: 1,\n          opacity: 0.1\n        }\n      }\n    },\n    series = [70, 52, 26]\n\n  return data !== null ? (\n    <Card>\n      <CardHeader>\n        <CardTitle tag='h4'>Product Orders</CardTitle>\n        <UncontrolledDropdown className='chart-dropdown'>\n          <DropdownToggle color='' className='bg-transparent btn-sm border-0 p-50'>\n            Last 7 days\n          </DropdownToggle>\n          <DropdownMenu end>\n            {data.last_days.map(item => (\n              <DropdownItem className='w-100' key={item}>\n                {item}\n              </DropdownItem>\n            ))}\n          </DropdownMenu>\n        </UncontrolledDropdown>\n      </CardHeader>\n      <CardBody>\n        <Chart options={options} series={series} type='radialBar' height={325} />\n        <div className='d-flex justify-content-between mb-1'>\n          <div className='d-flex align-items-center'>\n            <Circle size={15} className='text-primary' />\n            <span className='fw-bold ms-75'>Finished</span>\n          </div>\n          <span>{data.chart_info.finished}</span>\n        </div>\n        <div className='d-flex justify-content-between mb-1'>\n          <div className='d-flex align-items-center'>\n            <Circle size={15} className='text-warning' />\n            <span className='fw-bold ms-75'>Pending</span>\n          </div>\n          <span>{data.chart_info.pending}</span>\n        </div>\n        <div className='d-flex justify-content-between'>\n          <div className='d-flex align-items-center'>\n            <Circle size={15} className='text-danger' />\n            <span className='fw-bold ms-75'>Rejected</span>\n          </div>\n          <span>{data.chart_info.rejected}</span>\n        </div>\n      </CardBody>\n    </Card>\n  ) : null\n}\nexport default ProductOrders\n","// ** React Imports\nimport { useEffect, useState } from 'react'\n\n// ** Third Party Components\nimport axios from 'axios'\nimport Chart from 'react-apexcharts'\n\n// ** Reactstrap Imports\nimport {\n  Row,\n  Col,\n  Card,\n  CardBody,\n  CardText,\n  CardTitle,\n  CardHeader,\n  DropdownMenu,\n  DropdownItem,\n  DropdownToggle,\n  UncontrolledDropdown\n} from 'reactstrap'\n\nconst SupportTracker = props => {\n  // ** State\n  const [data, setData] = useState(null)\n\n  useEffect(() => {\n    axios.get('/card/card-analytics/support-tracker').then(res => setData(res.data))\n    return () => setData(null)\n  }, [])\n\n  const options = {\n      plotOptions: {\n        radialBar: {\n          size: 150,\n          offsetY: 20,\n          startAngle: -150,\n          endAngle: 150,\n          hollow: {\n            size: '65%'\n          },\n          track: {\n            background: '#fff',\n            strokeWidth: '100%'\n          },\n          dataLabels: {\n            name: {\n              offsetY: -5,\n              fontFamily: 'Montserrat',\n              fontSize: '1rem'\n            },\n            value: {\n              offsetY: 15,\n              fontFamily: 'Montserrat',\n              fontSize: '1.714rem'\n            }\n          }\n        }\n      },\n      colors: [props.danger],\n      fill: {\n        type: 'gradient',\n        gradient: {\n          shade: 'dark',\n          type: 'horizontal',\n          shadeIntensity: 0.5,\n          gradientToColors: [props.primary],\n          inverseColors: true,\n          opacityFrom: 1,\n          opacityTo: 1,\n          stops: [0, 100]\n        }\n      },\n      stroke: {\n        dashArray: 8\n      },\n      labels: ['Completed Tickets']\n    },\n    series = [83]\n\n  return data !== null ? (\n    <Card>\n      <CardHeader className='pb-0'>\n        <CardTitle tag='h4'>{data.title}</CardTitle>\n        <UncontrolledDropdown className='chart-dropdown'>\n          <DropdownToggle color='' className='bg-transparent btn-sm border-0 p-50'>\n            Last 7 days\n          </DropdownToggle>\n          <DropdownMenu end>\n            {data.last_days.map(item => (\n              <DropdownItem className='w-100' key={item}>\n                {item}\n              </DropdownItem>\n            ))}\n          </DropdownMenu>\n        </UncontrolledDropdown>\n      </CardHeader>\n      <CardBody>\n        <Row>\n          <Col sm='2' className='d-flex flex-column flex-wrap text-center'>\n            <h1 className='font-large-2 fw-bolder mt-2 mb-0'>{data.totalTicket}</h1>\n            <CardText>Tickets</CardText>\n          </Col>\n          <Col sm='10' className='d-flex justify-content-center'>\n            <Chart options={options} series={series} type='radialBar' height={270} id='support-tracker-card' />\n          </Col>\n        </Row>\n        <div className='d-flex justify-content-between mt-1'>\n          <div className='text-center'>\n            <CardText className='mb-50'>New Tickets</CardText>\n            <span className='font-large-1 fw-bold'>{data.newTicket}</span>\n          </div>\n          <div className='text-center'>\n            <CardText className='mb-50'>Open Tickets</CardText>\n            <span className='font-large-1 fw-bold'>{data.openTicket}</span>\n          </div>\n          <div className='text-center'>\n            <CardText className='mb-50'>Response Time</CardText>\n            <span className='font-large-1 fw-bold'>{data.responseTime}d</span>\n          </div>\n        </div>\n      </CardBody>\n    </Card>\n  ) : null\n}\nexport default SupportTracker\n","// ** React Imports\nimport { useEffect, useState } from 'react'\n\n// ** Third Party Components\nimport axios from 'axios'\nimport classnames from 'classnames'\nimport Chart from 'react-apexcharts'\nimport * as Icon from 'react-feather'\n\n// ** Reactstrap Imports\nimport {\n  Card,\n  CardBody,\n  CardTitle,\n  CardHeader,\n  DropdownMenu,\n  DropdownItem,\n  DropdownToggle,\n  UncontrolledDropdown\n} from 'reactstrap'\n\nconst SessionByDevice = props => {\n  // ** State\n  const [data, setData] = useState(null)\n\n  useEffect(() => {\n    axios.get('/card/card-analytics/sessions-device').then(res => setData(res.data))\n  }, [])\n\n  const options = {\n      chart: {\n        toolbar: {\n          show: false\n        }\n      },\n      labels: ['Desktop', 'Mobile', 'Tablet'],\n      dataLabels: {\n        enabled: false\n      },\n      legend: { show: false },\n      comparedResult: [2, -3, 8],\n      stroke: { width: 0 },\n      colors: [props.primary, props.warning, props.danger]\n    },\n    series = [58.6, 34.9, 6.5]\n\n  const renderChartInfo = () => {\n    return data.chart_info.map((item, index) => {\n      const IconTag = Icon[item.icon]\n      return (\n        <div\n          key={index}\n          className={classnames('d-flex justify-content-between', {\n            'mb-1': index !== data.chart_info.length - 1\n          })}\n        >\n          <div className='d-flex align-items-center'>\n            <IconTag\n              size={17}\n              className={classnames({\n                [item.iconColor]: item.iconColor\n              })}\n            />\n            <span className='fw-bold ms-75 me-25'>{item.name}</span>\n            <span>- {item.usage}%</span>\n          </div>\n          <div>\n            <span>{item.upDown}%</span>\n            {item.upDown > 0 ? (\n              <Icon.ArrowUp size={14} className='ms-25 text-success' />\n            ) : (\n              <Icon.ArrowDown size={14} className='ms-25 text-danger' />\n            )}\n          </div>\n        </div>\n      )\n    })\n  }\n\n  return data !== null ? (\n    <Card>\n      <CardHeader className='align-items-end'>\n        <CardTitle tag='h4'>Session By Device</CardTitle>\n        <UncontrolledDropdown className='chart-dropdown'>\n          <DropdownToggle color='' className='bg-transparent btn-sm border-0 p-50'>\n            Last 7 days\n          </DropdownToggle>\n          <DropdownMenu end>\n            {data.last_days.map(item => (\n              <DropdownItem className='w-100' key={item}>\n                {item}\n              </DropdownItem>\n            ))}\n          </DropdownMenu>\n        </UncontrolledDropdown>\n      </CardHeader>\n      <CardBody>\n        <Chart className='my-1' options={options} series={series} type='donut' height={300} />\n        {renderChartInfo()}\n      </CardBody>\n    </Card>\n  ) : null\n}\nexport default SessionByDevice\n","// ** React Imports\nimport { Fragment, useContext } from 'react'\n\n// ** Reactstrap Imports\nimport { Row, Col } from 'reactstrap'\n\n// ** Custom Components\nimport Breadcrumbs from '@components/breadcrumbs'\n\n// ** Demo Components\nimport Sales from './Sales'\nimport Sales2 from './Sales2'\nimport Revenue from './Revenue'\nimport Earnings from './Earnings'\nimport Customers from './Customers'\nimport AvgSession from './AvgSessions'\nimport GoalOverview from './GoalOverview'\nimport ProductOrders from './ProductOrders'\nimport RevenueReport from './RevenueReport'\nimport SupportTracker from './SupportTracker'\nimport SessionByDevice from './SessionByDevice'\n\n// ** Context\nimport { ThemeColors } from '@src/utility/context/ThemeColors'\n\n// ** Styles\nimport '@styles/react/libs/charts/apex-charts.scss'\n\nconst AnalyticsCards = () => {\n  // ** Context\n  const context = useContext(ThemeColors)\n  return (\n    <Fragment>\n      <Breadcrumbs title='Analytics Cards' data={[{ title: 'Cards' }, { title: 'Analytics Actions' }]} />\n      <Row className='match-height'>\n        <Col lg='6' sm='12'>\n          <SupportTracker primary={context.colors.primary.main} danger={context.colors.danger.main} />\n        </Col>\n        <Col lg='6' sm='12'>\n          <AvgSession primary={context.colors.primary.main} />\n        </Col>\n      </Row>\n      <Row className='match-height'>\n        <Col lg='8' sm='12'>\n          <RevenueReport primary={context.colors.primary.main} warning={context.colors.warning.main} />\n        </Col>\n        <Col lg='4' sm='12'>\n          <GoalOverview success={context.colors.success.main} />\n        </Col>\n      </Row>\n      <Row className='match-height'>\n        <Col lg='8' sm='12'>\n          <Revenue primary={context.colors.primary.main} />\n        </Col>\n        <Col lg='4' sm='12'>\n          <Sales primary={context.colors.primary.main} info={context.colors.info.main} />\n        </Col>\n      </Row>\n      <Row className='match-height'>\n        <Col lg='8' sm='12'>\n          <Row className='match-height'>\n            <Col sm='12'>\n              <Sales2 primary={context.colors.primary.main} />\n            </Col>\n            <Col md='6' sm='12'>\n              <SessionByDevice\n                primary={context.colors.primary.main}\n                warning={context.colors.warning.main}\n                danger={context.colors.danger.main}\n              />\n            </Col>\n            <Col md='6' sm='12'>\n              <Customers\n                primary={context.colors.primary.main}\n                warning={context.colors.warning.main}\n                danger={context.colors.danger.main}\n              />\n            </Col>\n          </Row>\n        </Col>\n        <Col lg='4' sm='12'>\n          <Row className='match-height'>\n            <Col sm='12'>\n              <ProductOrders\n                primary={context.colors.primary.main}\n                warning={context.colors.warning.main}\n                danger={context.colors.danger.main}\n              />\n            </Col>\n            <Col sm='12'>\n              <Earnings success={context.colors.success.main} />\n            </Col>\n          </Row>\n        </Col>\n      </Row>\n    </Fragment>\n  )\n}\n\nexport default AnalyticsCards\n","// ** React Imports\nimport { useEffect, useState } from 'react'\n// import { Card, CardHeader, CardTitle, CardBody, Row, Col, Nav, NavItem, NavLink, TabContent, TabPane } from 'reactstrap'\n// ** Third Party Components\nimport axios from 'axios'\nimport classnames from 'classnames'\nimport * as Icon from 'react-feather'\nimport Chart from 'react-apexcharts'\n\n// ** Reactstrap Imports\nimport {\n  Row, Col,\n  Card,\n  CardBody,\n  CardTitle,\n  CardHeader,\n  DropdownMenu,\n  DropdownItem,\n  DropdownToggle,\n  UncontrolledDropdown\n} from 'reactstrap'\n\nconst Customers = props => {\n\n  // console.error(props.cdata)\n  // ** State\n  // const [data, setData] = useState(null)\n\n  const colorsData = [props.primary, props.warning, props.danger, props.secondary, props.success, props.info, props.dark]\n\n  const data = props.cdata.map((item, index) => {\n    return { ...item, \n      icon: 'Circle',\n      iconColor: 'text-primary',\n      text: item?.type?.title || '',\n      result: item.count\n    }\n  })\n\n  // console.error(data)\n\n  const pluck = (arr, key) => arr.map(i => i[key])\n\n  const options = {\n      chart: {\n        toolbar: {\n          show: false\n        }\n      },\n      labels: pluck(data, 'text'),\n      dataLabels: {\n        enabled: true\n      },\n      legend: { show: false },\n      stroke: {\n        width: 2\n      },\n      colors: colorsData\n    },\n    series = pluck(data, 'result')\n\n  const renderChartInfo = () => {\n    return data.map((item, index) => {\n      const IconTag = Icon[item.icon]\n      return (\n        <div\n          key={index}\n          className={classnames('d-flex justify-content-between', {\n            'mb-1': index !== data.length - 1\n          })}\n        >\n          <div className='d-flex align-items-center'>\n            <IconTag\n              size={15}\n              className={classnames({\n                [item.iconColor]: item.iconColor\n              })}\n            />\n            <span className='fw-bold ms-75'>{item.text}</span>\n          </div>\n          <span>{item.result}</span>\n        </div>\n      )\n    })\n  }\n\n  return data !== null ? (\n    <Card>\n      <CardHeader className='align-items-end'>\n        <CardTitle tag='h4'>Project Task Status</CardTitle>\n      </CardHeader>\n      <CardBody>\n        <Row>\n          <Col lg='5' md='12' sm='12'>\n            {data && data.length ? <div className='pt-2'>{renderChartInfo()}</div> : null }\n          </Col>\n          <Col lg='7' md='12' sm='12'>\n            <div className=''>\n            <Chart options={options} series={series} type='pie' height={325} />\n            </div>\n          </Col>\n        </Row>\n      </CardBody>\n    </Card>\n  ) : null\n}\nexport default Customers\n","// ** Third Party Components\nimport Chart from 'react-apexcharts'\nimport { MoreVertical, Circle } from 'react-feather'\n\n// ** Reactstrap Imports\nimport {\n  Card,\n  CardBody,\n  CardText,\n  CardTitle,\n  CardHeader,\n  DropdownMenu,\n  DropdownItem,\n  DropdownToggle,\n  UncontrolledDropdown\n} from 'reactstrap'\n\nconst Sales = props => {\n  const options = {\n      chart: {\n        height: 300,\n        type: 'radar',\n        dropShadow: {\n          enabled: true,\n          blur: 8,\n          left: 1,\n          top: 1,\n          opacity: 0.2\n        },\n        toolbar: {\n          show: false\n        },\n        offsetY: 5\n      },\n      stroke: {\n        width: 0\n      },\n      dataLabels: {\n        background: {\n          foreColor: ['#ebe9f1']\n        }\n      },\n      legend: { show: false },\n      colors: [props.primary, props.info],\n      plotOptions: {\n        radar: {\n          polygons: {\n            strokeColors: ['#ebe9f1', 'transparent', 'transparent', 'transparent', 'transparent', 'transparent'],\n            connectorColors: 'transparent'\n          }\n        }\n      },\n      fill: {\n        type: 'gradient',\n        gradient: {\n          shade: 'dark',\n          gradientToColors: [props.primary, props.info],\n          shadeIntensity: 1,\n          type: 'horizontal',\n          opacityFrom: 1,\n          opacityTo: 1,\n          stops: [0, 100, 100, 100]\n        }\n      },\n      labels: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun'],\n      markers: {\n        size: 0\n      },\n      yaxis: {\n        show: false\n      },\n      grid: {\n        show: false,\n        padding: {\n          bottom: -27\n        }\n      }\n    },\n    series = [\n      {\n        name: 'Sales',\n        data: [90, 50, 86, 40, 100, 20]\n      },\n      {\n        name: 'Visit',\n        data: [70, 75, 70, 76, 20, 85]\n      }\n    ]\n  return (\n    <Card>\n      <CardHeader className='d-flex justify-content-between align-items-start pb-1'>\n        <div>\n          <CardTitle className='mb-25' tag='h4'>\n            Sales\n          </CardTitle>\n          <CardText>Last 6 months</CardText>\n        </div>\n\n        <UncontrolledDropdown className='chart-dropdown'>\n          <DropdownToggle color='' className='bg-transparent btn-sm border-0 p-50'>\n            <MoreVertical size={18} className='cursor-pointer' />\n          </DropdownToggle>\n          <DropdownMenu end>\n            <DropdownItem className='w-100'>Last 28 Days</DropdownItem>\n            <DropdownItem className='w-100'>Last Month</DropdownItem>\n            <DropdownItem className='w-100'>Last Year</DropdownItem>\n          </DropdownMenu>\n        </UncontrolledDropdown>\n      </CardHeader>\n\n      <CardBody>\n        <div className='d-inline-block me-1'>\n          <div className='d-flex align-items-center'>\n            <Circle size={13} className='text-primary me-50' />\n            <h6 className='mb-0'>Sales</h6>\n          </div>\n        </div>\n        <div className='d-inline-block'>\n          <div className='d-flex align-items-center'>\n            <Circle size={13} className='text-info me-50' />\n            <h6 className='mb-0'>Visits</h6>\n          </div>\n        </div>\n        <Chart options={options} series={series} type='radar' height={300} />\n      </CardBody>\n    </Card>\n  )\n}\nexport default Sales\n","// ** Third Party Components\nimport Chart from 'react-apexcharts'\n\n// ** Reactstrap Imports\nimport { Card, CardTitle, CardText, CardBody, Row, Col } from 'reactstrap'\n\nconst Earnings = ({ success }) => {\n  const options = {\n    chart: {\n      toolbar: {\n        show: false\n      }\n    },\n    dataLabels: {\n      enabled: false\n    },\n    legend: { show: false },\n    comparedResult: [2, -3, 8],\n    labels: ['App', 'Service', 'Product'],\n    stroke: { width: 0 },\n    colors: ['#28c76f66', '#28c76f33', success],\n    grid: {\n      padding: {\n        right: -20,\n        bottom: -8,\n        left: -20\n      }\n    },\n    plotOptions: {\n      pie: {\n        startAngle: -10,\n        donut: {\n          labels: {\n            show: true,\n            name: {\n              offsetY: 15\n            },\n            value: {\n              offsetY: -15,\n              formatter(val) {\n                return `${parseInt(val)} %`\n              }\n            },\n            total: {\n              show: true,\n              offsetY: 15,\n              label: 'App',\n              formatter() {\n                return '53%'\n              }\n            }\n          }\n        }\n      }\n    },\n    responsive: [\n      {\n        breakpoint: 1325,\n        options: {\n          chart: {\n            height: 100\n          }\n        }\n      },\n      {\n        breakpoint: 1200,\n        options: {\n          chart: {\n            height: 120\n          }\n        }\n      },\n      {\n        breakpoint: 1065,\n        options: {\n          chart: {\n            height: 100\n          }\n        }\n      },\n      {\n        breakpoint: 992,\n        options: {\n          chart: {\n            height: 120\n          }\n        }\n      }\n    ]\n  }\n\n  return (\n    <Card className='earnings-card'>\n      <CardBody>\n        <Row>\n          <Col xs='6'>\n            <CardTitle className='mb-1'>Earnings</CardTitle>\n            <div className='font-small-2'>This Month</div>\n            <h5 className='mb-1'>$4055.56</h5>\n            <CardText className='text-muted font-small-2'>\n              <span className='fw-bolder'>68.2%</span>\n              <span> more earnings than last month.</span>\n            </CardText>\n          </Col>\n          <Col xs='6'>\n            <Chart options={options} series={[53, 16, 31]} type='donut' height={120} />\n          </Col>\n        </Row>\n      </CardBody>\n    </Card>\n  )\n}\n\nexport default Earnings\n","// ** React Imports\nimport { useEffect, useState } from 'react'\n\n// ** Third Party Components\nimport axios from 'axios'\nimport Chart from 'react-apexcharts'\nimport { HelpCircle } from 'react-feather'\n\n// ** Reactstrap Imports\nimport { Card, CardHeader, CardTitle, CardBody, CardText, Row, Col } from 'reactstrap'\n\nconst GoalOverview = props => {\n  // ** State\n  const [data, setData] = useState(null)\n\n  useEffect(() => {\n    axios.get('/card/card-analytics/goal-overview').then(res => setData(res.data))\n    return () => setData(null)\n  }, [])\n\n  const options = {\n      chart: {\n        sparkline: {\n          enabled: true\n        },\n        dropShadow: {\n          enabled: true,\n          blur: 3,\n          left: 1,\n          top: 1,\n          opacity: 0.1\n        }\n      },\n      colors: ['#51e5a8'],\n      plotOptions: {\n        radialBar: {\n          offsetY: 10,\n          startAngle: -150,\n          endAngle: 150,\n          hollow: {\n            size: '77%'\n          },\n          track: {\n            background: '#ebe9f1',\n            strokeWidth: '50%'\n          },\n          dataLabels: {\n            name: {\n              show: false\n            },\n            value: {\n              color: '#5e5873',\n              fontFamily: 'Montserrat',\n              fontSize: '2.86rem',\n              fontWeight: '600'\n            }\n          }\n        }\n      },\n      fill: {\n        type: 'gradient',\n        gradient: {\n          shade: 'dark',\n          type: 'horizontal',\n          shadeIntensity: 0.5,\n          gradientToColors: [props.success],\n          inverseColors: true,\n          opacityFrom: 1,\n          opacityTo: 1,\n          stops: [0, 100]\n        }\n      },\n      stroke: {\n        lineCap: 'round'\n      },\n      grid: {\n        padding: {\n          bottom: 30\n        }\n      }\n    },\n    series = [83]\n\n  return data !== null ? (\n    <Card>\n      <CardHeader>\n        <CardTitle tag='h4'>Goal Overview</CardTitle>\n        <HelpCircle size={18} className='text-muted cursor-pointer' />\n      </CardHeader>\n      <CardBody className='p-0'>\n        <Chart options={options} series={series} type='radialBar' height={245} />\n      </CardBody>\n      <Row className='border-top text-center mx-0'>\n        <Col xs='6' className='border-end py-1'>\n          <CardText className='text-muted mb-0'>Completed</CardText>\n          <h3 className='fw-bolder mb-0'>{data.completed}</h3>\n        </Col>\n        <Col xs='6' className='py-1'>\n          <CardText className='text-muted mb-0'>In Progress</CardText>\n          <h3 className='fw-bolder mb-0'>{data.inProgress}</h3>\n        </Col>\n      </Row>\n    </Card>\n  ) : null\n}\nexport default GoalOverview\n","// ** React Imports\nimport { useEffect, useState } from 'react'\n\n// ** Third Party Components\nimport axios from 'axios'\nimport Chart from 'react-apexcharts'\n\n// ** Reactstrap Imports\nimport {\n  Row,\n  Col,\n  Card,\n  Button,\n  CardTitle,\n  DropdownMenu,\n  DropdownItem,\n  DropdownToggle,\n  UncontrolledButtonDropdown\n} from 'reactstrap'\n\nconst RevenueReport = props => {\n  // ** State\n  const [data, setData] = useState(null)\n\n  useEffect(() => {\n    axios.get('/card/card-analytics/revenue-report').then(res => setData(res.data))\n    return () => setData(null)\n  }, [])\n\n  const revenueOptions = {\n      chart: {\n        stacked: true,\n        type: 'bar',\n        toolbar: { show: false }\n      },\n      grid: {\n        padding: {\n          top: -20,\n          bottom: -10\n        },\n        yaxis: {\n          lines: { show: false }\n        }\n      },\n      xaxis: {\n        categories: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep'],\n        labels: {\n          style: {\n            colors: '#b9b9c3',\n            fontSize: '0.86rem'\n          }\n        },\n        axisTicks: {\n          show: false\n        },\n        axisBorder: {\n          show: false\n        }\n      },\n      legend: {\n        show: false\n      },\n      dataLabels: {\n        enabled: false\n      },\n      colors: [props.primary, props.warning],\n      plotOptions: {\n        bar: {\n          columnWidth: '17%',\n          borderRadius: [5]\n        },\n        distributed: true\n      },\n      yaxis: {\n        labels: {\n          style: {\n            colors: '#b9b9c3',\n            fontSize: '0.86rem'\n          }\n        }\n      }\n    },\n    revenueSeries = [\n      {\n        name: 'Earning',\n        data: [95, 177, 284, 256, 105, 63, 168, 218, 72]\n      },\n      {\n        name: 'Expense',\n        data: [-145, -80, -60, -180, -100, -60, -85, -75, -100]\n      }\n    ]\n\n  const budgetSeries = [\n      {\n        data: [61, 48, 69, 52, 60, 40, 79, 60, 59, 43, 62]\n      },\n      {\n        data: [20, 10, 30, 15, 23, 0, 25, 15, 20, 5, 27]\n      }\n    ],\n    budgetOptions = {\n      chart: {\n        toolbar: { show: false },\n        zoom: { enabled: false },\n        type: 'line',\n        sparkline: { enabled: true }\n      },\n      stroke: {\n        curve: 'smooth',\n        dashArray: [0, 5],\n        width: [2]\n      },\n      colors: [props.primary, '#dcdae3'],\n      tooltip: {\n        enabled: false\n      }\n    }\n\n  return data !== null ? (\n    <Card className='card-revenue-budget'>\n      <Row className='mx-0'>\n        <Col className='revenue-report-wrapper' md='8' xs='12'>\n          <div className='d-sm-flex justify-content-between align-items-center mb-3'>\n            <CardTitle className='mb-50 mb-sm-0'>Revenue Report</CardTitle>\n            <div className='d-flex align-items-center'>\n              <div className='d-flex align-items-center me-2'>\n                <span className='bullet bullet-primary me-50 cursor-pointer'></span>\n                <span>Earning</span>\n              </div>\n              <div className='d-flex align-items-center'>\n                <span className='bullet bullet-warning me-50 cursor-pointer'></span>\n                <span>Expense</span>\n              </div>\n            </div>\n          </div>\n          <Chart id='revenue-report-chart' type='bar' height='230' options={revenueOptions} series={revenueSeries} />\n        </Col>\n        <Col className='budget-wrapper' md='4' xs='12'>\n          <UncontrolledButtonDropdown>\n            <DropdownToggle className='budget-dropdown' outline color='primary' size='sm' caret>\n              2020\n            </DropdownToggle>\n            <DropdownMenu>\n              {data.years.map(item => (\n                <DropdownItem className='w-100' key={item}>\n                  {item}\n                </DropdownItem>\n              ))}\n            </DropdownMenu>\n          </UncontrolledButtonDropdown>\n          <h2 className='mb-25'>${data.price}</h2>\n          <div className='d-flex justify-content-center'>\n            <span className='fw-bolder me-25'>Budget:</span>\n            <span>{data.budget}</span>\n          </div>\n          <Chart id='budget-chart' type='line' height='80' options={budgetOptions} series={budgetSeries} />\n          <Button color='primary'>Increase Budget</Button>\n        </Col>\n      </Row>\n    </Card>\n  ) : null\n}\n\nexport default RevenueReport\n"],"sourceRoot":""}