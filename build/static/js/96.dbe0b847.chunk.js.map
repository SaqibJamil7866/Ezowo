{"version":3,"sources":["views/apps/ecommerce/wishlist/index.js"],"names":["Wishlist","dispatch","useDispatch","store","useSelector","state","ecommerce","useEffect","getWishlistItems","title","data","wishlist","length","className","map","item","CartBtnTag","isInCart","Link","to","slug","src","image","alt","name","Array","fill","listItem","index","classnames","rating","price","description","color","onClick","deleteWishlistItem","id","size","tag","addToCart","getCartItems"],"mappings":"8OAgIeA,UA3GE,WAEf,IAAMC,EAAWC,cACXC,EAAQC,aAAY,SAAAC,GAAK,OAAIA,EAAMC,aAGzCC,qBAAU,WACRN,EAASO,iBACR,IAkFH,OACE,eAAC,WAAD,WACE,cAAC,IAAD,CAAaC,MAAM,WAAWC,KAAM,CAAC,CAAED,MAAO,aAAe,CAAEA,MAAO,eACrEN,EAAMQ,SAASC,OACd,yBAASC,UAAU,2BAAnB,SAzEGV,EAAMQ,SAASG,KAAI,SAAAC,GACxB,IAAMC,EAAaD,EAAKE,SAAWC,IAAO,SAC1C,OACE,eAAC,IAAD,CAAML,UAAU,iBAAhB,UACE,qBAAKA,UAAU,+BAAf,SACE,cAAC,IAAD,CAAMM,GAAE,yCAAoCJ,EAAKK,MAAjD,SACE,qBAAKP,UAAU,YAAYQ,IAAKN,EAAKO,MAAOC,IAAKR,EAAKS,WAG1D,eAAC,IAAD,WACE,sBAAKX,UAAU,eAAf,UACE,qBAAKA,UAAU,cAAf,SACE,oBAAIA,UAAU,4BAAd,SACG,IAAIY,MAAM,GAAGC,OAAOZ,KAAI,SAACa,EAAUC,GAClC,OACE,oBAAgBf,UAAU,0BAA1B,SACE,cAAC,IAAD,CACEA,UAAWgB,IAAW,CACpB,cAAeD,EAAQ,GAAKb,EAAKe,OACjC,gBAAiBF,EAAQ,EAAIb,EAAKe,YAJ/BF,UAYjB,qBAAKf,UAAU,YAAf,SACE,qBAAIA,UAAU,aAAd,eAA8BE,EAAKgB,cAGvC,qBAAKlB,UAAU,YAAf,SACE,cAAC,IAAD,CAAMM,GAAE,yCAAoCJ,EAAKK,MAAjD,SAA0DL,EAAKS,SAEjE,cAAC,IAAD,CAAUX,UAAU,mBAApB,SAAwCE,EAAKiB,iBAE/C,sBAAKnB,UAAU,2BAAf,UACE,eAAC,IAAD,CACEA,UAAU,+BACVoB,MAAM,QACNC,QAAS,WACPjC,EAASkC,YAAmBpB,EAAKqB,MAJrC,UAOE,cAAC,IAAD,CAAGvB,UAAU,QAAQwB,KAAM,KAC3B,6CAEF,eAAC,IAAD,yBACEJ,MAAM,UACNK,IAAKtB,EACLH,UAAU,qBACVqB,QAAS,kBA7DEE,EA6DkBrB,EAAKqB,IA5DhC,IA4DoCrB,EAAKE,UA3DnDhB,EAASsC,YAAUH,IAErBnC,EAASO,oBACTP,EAASuC,eALW,IAACJ,IA+DNrB,EAAKE,SACN,CACEE,GAAI,4BAEN,IAVN,cAaE,cAAC,IAAD,CAAcN,UAAU,QAAQwB,KAAM,KACtC,+BAAOtB,EAAKE,SAAW,eAAiB,yBA1DRF,EAAKS,WAwE3C,cAAC,IAAD,CAAOS,MAAM,OAAb,SACE,sBAAKpB,UAAU,aAAf,UACE,cAAC,IAAD,CAAMwB,KAAM,KACZ,sBAAMxB,UAAU,qBAAhB,8C","file":"static/js/96.dbe0b847.chunk.js","sourcesContent":["// ** React Imports\nimport { Link } from 'react-router-dom'\nimport { Fragment, useEffect } from 'react'\n\n// ** Custom Components\nimport BreadCrumbs from '@components/breadcrumbs'\n\n// ** Third Party Components\nimport classnames from 'classnames'\nimport { Star, X, ShoppingCart, Info } from 'react-feather'\n\n// ** Reactstrap Imports\nimport { Card, CardBody, CardText, Button, Alert } from 'reactstrap'\n\n// ** Store & Actions\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getWishlistItems, deleteWishlistItem, addToCart, getCartItems } from '../store'\n\n// ** Styles\nimport '@styles/base/pages/app-ecommerce.scss'\n\nconst Wishlist = () => {\n  // ** Store Vars\n  const dispatch = useDispatch()\n  const store = useSelector(state => state.ecommerce)\n\n  //** ComponentDidMount : get wishlist items\n  useEffect(() => {\n    dispatch(getWishlistItems())\n  }, [])\n\n  // ** Handle Move/Add to cart\n  const handleCartBtn = (id, val) => {\n    if (val === false) {\n      dispatch(addToCart(id))\n    }\n    dispatch(getWishlistItems())\n    dispatch(getCartItems())\n  }\n\n  // ** Renders wishlist products\n  const renderWishlist = () => {\n    return store.wishlist.map(item => {\n      const CartBtnTag = item.isInCart ? Link : 'button'\n      return (\n        <Card className='ecommerce-card' key={item.name}>\n          <div className='item-img text-center mx-auto'>\n            <Link to={`/apps/ecommerce/product-detail/${item.slug}`}>\n              <img className='img-fluid' src={item.image} alt={item.name} />\n            </Link>\n          </div>\n          <CardBody>\n            <div className='item-wrapper'>\n              <div className='item-rating'>\n                <ul className='unstyled-list list-inline'>\n                  {new Array(5).fill().map((listItem, index) => {\n                    return (\n                      <li key={index} className='ratings-list-item me-25'>\n                        <Star\n                          className={classnames({\n                            'filled-star': index + 1 <= item.rating,\n                            'unfilled-star': index + 1 > item.rating\n                          })}\n                        />\n                      </li>\n                    )\n                  })}\n                </ul>\n              </div>\n              <div className='item-cost'>\n                <h6 className='item-price'>$ {item.price}</h6>\n              </div>\n            </div>\n            <div className='item-name'>\n              <Link to={`/apps/ecommerce/product-detail/${item.slug}`}>{item.name}</Link>\n            </div>\n            <CardText className='item-description'>{item.description}</CardText>\n          </CardBody>\n          <div className='item-options text-center'>\n            <Button\n              className='btn-wishlist remove-wishlist'\n              color='light'\n              onClick={() => {\n                dispatch(deleteWishlistItem(item.id))\n              }}\n            >\n              <X className='me-25' size={14} />\n              <span>Remove</span>\n            </Button>\n            <Button\n              color='primary'\n              tag={CartBtnTag}\n              className='btn-cart move-cart'\n              onClick={() => handleCartBtn(item.id, item.isInCart)}\n              /*eslint-disable */\n              {...(item.isInCart\n                ? {\n                    to: '/apps/ecommerce/checkout'\n                  }\n                : {})}\n              /*eslint-enable */\n            >\n              <ShoppingCart className='me-50' size={14} />\n              <span>{item.isInCart ? 'View In Cart' : 'Add To Cart'}</span>\n            </Button>\n          </div>\n        </Card>\n      )\n    })\n  }\n\n  return (\n    <Fragment>\n      <BreadCrumbs title='Wishlist' data={[{ title: 'eCommerce' }, { title: 'Wishlist' }]} />\n      {store.wishlist.length ? (\n        <section className='grid-view wishlist-items'>{renderWishlist()}</section>\n      ) : (\n        <Alert color='info'>\n          <div className='alert-body'>\n            <Info size={14} />\n            <span className='align-middle ms-50'>Your Wishlist is empty</span>\n          </div>\n        </Alert>\n      )}\n    </Fragment>\n  )\n}\n\nexport default Wishlist\n"],"sourceRoot":""}