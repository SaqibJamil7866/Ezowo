{"version":3,"sources":["../../src/types/public-types.ts","../../src/helpers/date-helper.ts","../../src/components/task-list/task-list-header.tsx","../../src/components/task-list/task-list-table.tsx","../../src/components/other/tooltip.tsx","../../src/components/other/vertical-scroll.tsx","../../src/components/task-list/task-list.tsx","../../src/components/grid/grid-body.tsx","../../src/components/grid/grid.tsx","../../src/components/calendar/top-part-of-calendar.tsx","../../src/components/calendar/calendar.tsx","../../node_modules/babel-plugin-transform-async-to-promises/helpers.mjs","../../src/components/other/arrow.tsx","../../src/helpers/bar-helper.ts","../../src/helpers/other-helper.ts","../../src/components/task-item/bar/bar-display.tsx","../../src/components/task-item/bar/bar-date-handle.tsx","../../src/components/task-item/bar/bar-progress-handle.tsx","../../src/components/task-item/bar/bar.tsx","../../src/components/task-item/bar/bar-small.tsx","../../src/components/task-item/milestone/milestone.tsx","../../src/components/task-item/project/project.tsx","../../src/components/task-item/task-item.tsx","../../src/components/gantt/task-gantt-content.tsx","../../src/components/gantt/task-gantt.tsx","../../src/components/other/horizontal-scroll.tsx","../../src/components/gantt/gantt.tsx"],"names":["ViewMode","intlDTCache","getCachedDateTimeFormat","opts","key","JSON","locString","dtf","Intl","addToDate","Date","date","scale","startOfDate","scores","shouldReset","_scale","maxScore","ganttDateRange","newStartDate","tasks","newEndDate","task","viewMode","getMonday","seedDates","currentDate","dates","getLocaleMonth","bottomValue","locale","month","getLocalDayOfWeek","weekday","format","day","diff","getWeekNumberISO8601","tmpDate","dayNumber","firstThursday","weekNumber","Math","TaskListHeaderDefault","headerHeight","fontFamily","fontSize","rowWidth","className","styles","style","height","minWidth","marginTop","localeDateStringCache","dateTimeOptions","year","TaskListTableDefault","rowHeight","onExpanderClick","toLocaleDateString","useMemo","lds","toLocaleDateStringFactory","t","expanderSymbol","maxWidth","title","name","onClick","React","Tooltip","rtl","svgContainerHeight","svgContainerWidth","scrollX","scrollY","arrowIndent","taskListWidth","TooltipContent","tooltipRef","useRef","useState","relatedY","setRelatedY","relatedX","setRelatedX","useEffect","tooltipHeight","tooltipWidth","newRelatedY","newRelatedX","ref","left","top","StandardTooltipContent","VerticalScroll","scroll","ganttHeight","ganttFullHeight","onScroll","scrollRef","marginLeft","width","TaskList","selectedTask","setSelectedTask","taskListRef","horizontalContainerClass","TaskListHeader","TaskListTable","horizontalContainerRef","headerProps","tableProps","selectedTaskId","GridBody","svgWidth","columnWidth","todayColor","y","gridRows","rowLines","x","y1","x2","y2","id","now","tickX","ticks","today","i","x1","fill","Grid","props","TopPartOfCalendar","value","x1Line","y1Line","y2Line","xText","yText","Calendar","dateSetup","topValues","bottomValues","topDefaultHeight","topValue","getCalendarValuesForYear","getCalendarValuesForMonth","weeksCount","getCalendarValuesForWeek","getDaysInMonth","getCalendarValuesForDay","hour","getCalendarValuesForPartOfDay","displayDate","topPosition","getCalendarValuesForHour","length","Symbol","iterator","asyncIterator","_catch","body","recover","result","e","then","Arrow","taskFrom","taskTo","taskHeight","drownPathAndTriangleRTL","path","trianglePoints","drownPathAndTriangle","strokeWidth","d","points","indexCompare","taskToEndPosition","taskFromEndPosition","taskFromHorizontalOffsetValue","taskToHorizontalOffsetValue","convertToBarTask","barTask","convertToMilestone","convertToBar","taskXCoordinateRTL","taskXCoordinate","typeInternal","handleWidth","progressWithByParams","progressWidth","progressX","taskYCoordinate","index","hideChildren","backgroundColor","backgroundSelectedColor","progressColor","progressSelectedColor","barProgressSelectedColor","barCornerRadius","barChildren","rotatedHeight","end","progress","xDate","taskX2","getProgressPoint","taskY","point","moveByX","additionalXValue","newX1","dateByX","newDate","taskDate","handleTaskBySVGMouseEvent","handleTaskBySVGMouseEventForMilestone","handleTaskBySVGMouseEventForBar","changedTask","isChanged","action","barWidth","progressByXRTL","svgX","progressByX","startByX","xStep","newX2","endByX","newMoveX1","newMoveX2","removeHiddenTasks","groupedTasks","groupedTask","children","getChildren","taskList","taskChildren","sortTasks","taskA","orderA","Number","orderB","taskB","BarDisplay","isSelected","onMouseDown","ry","rx","BarDateHandle","BarProgressHandle","progressPoint","Bar","isProgressChangeable","isDateChangeable","onEventStart","handleHeight","tabIndex","BarSmall","Milestone","transform","Project","barColor","processColor","projectWith","projectLeftTriangle","projectRightTriangle","TaskItem","isDelete","textRef","taskItem","setTaskItem","isTextInside","setIsTextInside","onKeyDown","onMouseEnter","onMouseLeave","onDoubleClick","onFocus","hasChild","getX","TaskGanttContent","ganttEvent","timeStep","svg","arrowColor","setGanttEvent","setFailedTask","onDateChange","onProgressChange","onDelete","setXStep","initEventX1Delta","setInitEventX1Delta","isMoving","setIsMoving","dateDelta","handleMouseMove","event","cursor","handleMouseUp","operationSuccess","originalSelectedTask","newChangedTask","isNotLikeOriginal","handleBarEventStart","isKeyboardEvent","error","console","stroke","child","isDisabled","TaskGantt","gridProps","calendarProps","barProps","ganttSVGRef","verticalGanttContainerRef","newBarProps","dir","xmlns","HorizontalScroll","margin","Gantt","listCellWidth","Day","preStepsCount","barFill","barProgressColor","barBackgroundColor","barBackgroundSelectedColor","projectProgressColor","projectProgressSelectedColor","projectBackgroundColor","projectBackgroundSelectedColor","milestoneBackgroundColor","milestoneBackgroundSelectedColor","viewDate","onSelect","wrapperRef","startDate","endDate","setDateSetup","currentViewDate","setCurrentViewDate","setTaskListWidth","setSvgContainerWidth","setSvgContainerHeight","barTasks","setBarTasks","failedTask","setScrollY","setScrollX","ignoreScrollEvent","setIgnoreScrollEvent","filteredTasks","newDates","dependencies","j","dependence","convertToBarTasks","prevStateTask","newTaskList","handleWheel","scrollMove","newScrollX","newScrollY","passive","handleSelectedTask","taskId","newSelectedTask","oldSelectedTask","isX"],"mappings":"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","file":"static/js/93.afe55d5b.chunk.js","sourcesContent":["export enum ViewMode {\n  Hour = \"Hour\",\n  QuarterDay = \"Quarter Day\",\n  HalfDay = \"Half Day\",\n  Day = \"Day\",\n  /** ISO-8601 week */\n  Week = \"Week\",\n  Month = \"Month\",\n  Year = \"Year\",\n}\nexport type TaskType = \"task\" | \"milestone\" | \"project\";\nexport interface Task {\n  id: string;\n  type: TaskType;\n  name: string;\n  start: Date;\n  end: Date;\n  /**\n   * From 0 to 100\n   */\n  progress: number;\n  styles?: {\n    backgroundColor?: string;\n    backgroundSelectedColor?: string;\n    progressColor?: string;\n    progressSelectedColor?: string;\n  };\n  isDisabled?: boolean;\n  project?: string;\n  dependencies?: string[];\n  hideChildren?: boolean;\n  displayOrder?: number;\n}\n\nexport interface EventOption {\n  /**\n   * Time step value for date changes.\n   */\n  timeStep?: number;\n  /**\n   * Invokes on bar select on unselect.\n   */\n  onSelect?: (task: Task, isSelected: boolean) => void;\n  /**\n   * Invokes on bar double click.\n   */\n  onDoubleClick?: (task: Task) => void;\n  /**\n   * Invokes on bar click.\n   */\n  onClick?: (task: Task) => void;\n  /**\n   * Invokes on end and start time change. Chart undoes operation if method return false or error.\n   */\n  onDateChange?: (\n    task: Task,\n    children: Task[]\n  ) => void | boolean | Promise<void> | Promise<boolean>;\n  /**\n   * Invokes on progress change. Chart undoes operation if method return false or error.\n   */\n  onProgressChange?: (\n    task: Task,\n    children: Task[]\n  ) => void | boolean | Promise<void> | Promise<boolean>;\n  /**\n   * Invokes on delete selected task. Chart undoes operation if method return false or error.\n   */\n  onDelete?: (task: Task) => void | boolean | Promise<void> | Promise<boolean>;\n  /**\n   * Invokes on expander on task list\n   */\n  onExpanderClick?: (task: Task) => void;\n}\n\nexport interface DisplayOption {\n  viewMode?: ViewMode;\n  viewDate?: Date;\n  preStepsCount?: number;\n  /**\n   * Specifies the month name language. Able formats: ISO 639-2, Java Locale\n   */\n  locale?: string;\n  rtl?: boolean;\n}\n\nexport interface StylingOption {\n  headerHeight?: number;\n  columnWidth?: number;\n  listCellWidth?: string;\n  rowHeight?: number;\n  ganttHeight?: number;\n  barCornerRadius?: number;\n  handleWidth?: number;\n  fontFamily?: string;\n  fontSize?: string;\n  /**\n   * How many of row width can be taken by task.\n   * From 0 to 100\n   */\n  barFill?: number;\n  barProgressColor?: string;\n  barProgressSelectedColor?: string;\n  barBackgroundColor?: string;\n  barBackgroundSelectedColor?: string;\n  projectProgressColor?: string;\n  projectProgressSelectedColor?: string;\n  projectBackgroundColor?: string;\n  projectBackgroundSelectedColor?: string;\n  milestoneBackgroundColor?: string;\n  milestoneBackgroundSelectedColor?: string;\n  arrowColor?: string;\n  arrowIndent?: number;\n  todayColor?: string;\n  TooltipContent?: React.FC<{\n    task: Task;\n    fontSize: string;\n    fontFamily: string;\n  }>;\n  TaskListHeader?: React.FC<{\n    headerHeight: number;\n    rowWidth: string;\n    fontFamily: string;\n    fontSize: string;\n  }>;\n  TaskListTable?: React.FC<{\n    rowHeight: number;\n    rowWidth: string;\n    fontFamily: string;\n    fontSize: string;\n    locale: string;\n    tasks: Task[];\n    selectedTaskId: string;\n    /**\n     * Sets selected task by id\n     */\n    setSelectedTask: (taskId: string) => void;\n    onExpanderClick: (task: Task) => void;\n  }>;\n}\n\nexport interface GanttProps extends EventOption, DisplayOption, StylingOption {\n  tasks: Task[];\n}\n","import { Task, ViewMode } from \"../types/public-types\";\nimport DateTimeFormatOptions = Intl.DateTimeFormatOptions;\nimport DateTimeFormat = Intl.DateTimeFormat;\n\ntype DateHelperScales =\n  | \"year\"\n  | \"month\"\n  | \"day\"\n  | \"hour\"\n  | \"minute\"\n  | \"second\"\n  | \"millisecond\";\n\nconst intlDTCache = {};\nexport const getCachedDateTimeFormat = (\n  locString: string | string[],\n  opts: DateTimeFormatOptions = {}\n): DateTimeFormat => {\n  const key = JSON.stringify([locString, opts]);\n  let dtf = intlDTCache[key];\n  if (!dtf) {\n    dtf = new Intl.DateTimeFormat(locString, opts);\n    intlDTCache[key] = dtf;\n  }\n  return dtf;\n};\n\nexport const addToDate = (\n  date: Date,\n  quantity: number,\n  scale: DateHelperScales\n) => {\n  const newDate = new Date(\n    date.getFullYear() + (scale === \"year\" ? quantity : 0),\n    date.getMonth() + (scale === \"month\" ? quantity : 0),\n    date.getDate() + (scale === \"day\" ? quantity : 0),\n    date.getHours() + (scale === \"hour\" ? quantity : 0),\n    date.getMinutes() + (scale === \"minute\" ? quantity : 0),\n    date.getSeconds() + (scale === \"second\" ? quantity : 0),\n    date.getMilliseconds() + (scale === \"millisecond\" ? quantity : 0)\n  );\n  return newDate;\n};\n\nexport const startOfDate = (date: Date, scale: DateHelperScales) => {\n  const scores = [\n    \"millisecond\",\n    \"second\",\n    \"minute\",\n    \"hour\",\n    \"day\",\n    \"month\",\n    \"year\",\n  ];\n\n  const shouldReset = (_scale: DateHelperScales) => {\n    const maxScore = scores.indexOf(scale);\n    return scores.indexOf(_scale) <= maxScore;\n  };\n  const newDate = new Date(\n    date.getFullYear(),\n    shouldReset(\"year\") ? 0 : date.getMonth(),\n    shouldReset(\"month\") ? 1 : date.getDate(),\n    shouldReset(\"day\") ? 0 : date.getHours(),\n    shouldReset(\"hour\") ? 0 : date.getMinutes(),\n    shouldReset(\"minute\") ? 0 : date.getSeconds(),\n    shouldReset(\"second\") ? 0 : date.getMilliseconds()\n  );\n  return newDate;\n};\n\nexport const ganttDateRange = (\n  tasks: Task[],\n  viewMode: ViewMode,\n  preStepsCount: number\n) => {\n  let newStartDate: Date = tasks[0].start;\n  let newEndDate: Date = tasks[0].start;\n  for (const task of tasks) {\n    if (task.start < newStartDate) {\n      newStartDate = task.start;\n    }\n    if (task.end > newEndDate) {\n      newEndDate = task.end;\n    }\n  }\n  switch (viewMode) {\n    case ViewMode.Year:\n      newStartDate = addToDate(newStartDate, -1, \"year\");\n      newStartDate = startOfDate(newStartDate, \"year\");\n      newEndDate = addToDate(newEndDate, 1, \"year\");\n      newEndDate = startOfDate(newEndDate, \"year\");\n      break;\n    case ViewMode.Month:\n      newStartDate = addToDate(newStartDate, -1 * preStepsCount, \"month\");\n      newStartDate = startOfDate(newStartDate, \"month\");\n      newEndDate = addToDate(newEndDate, 1, \"year\");\n      newEndDate = startOfDate(newEndDate, \"year\");\n      break;\n    case ViewMode.Week:\n      newStartDate = startOfDate(newStartDate, \"day\");\n      newStartDate = addToDate(\n        getMonday(newStartDate),\n        -7 * preStepsCount,\n        \"day\"\n      );\n      newEndDate = startOfDate(newEndDate, \"day\");\n      newEndDate = addToDate(newEndDate, 1.5, \"month\");\n      break;\n    case ViewMode.Day:\n      newStartDate = startOfDate(newStartDate, \"day\");\n      newStartDate = addToDate(newStartDate, -1 * preStepsCount, \"day\");\n      newEndDate = startOfDate(newEndDate, \"day\");\n      newEndDate = addToDate(newEndDate, 19, \"day\");\n      break;\n    case ViewMode.QuarterDay:\n      newStartDate = startOfDate(newStartDate, \"day\");\n      newStartDate = addToDate(newStartDate, -1 * preStepsCount, \"day\");\n      newEndDate = startOfDate(newEndDate, \"day\");\n      newEndDate = addToDate(newEndDate, 66, \"hour\"); // 24(1 day)*3 - 6\n      break;\n    case ViewMode.HalfDay:\n      newStartDate = startOfDate(newStartDate, \"day\");\n      newStartDate = addToDate(newStartDate, -1 * preStepsCount, \"day\");\n      newEndDate = startOfDate(newEndDate, \"day\");\n      newEndDate = addToDate(newEndDate, 108, \"hour\"); // 24(1 day)*5 - 12\n      break;\n    case ViewMode.Hour:\n      newStartDate = startOfDate(newStartDate, \"hour\");\n      newStartDate = addToDate(newStartDate, -1 * preStepsCount, \"hour\");\n      newEndDate = startOfDate(newEndDate, \"day\");\n      newEndDate = addToDate(newEndDate, 1, \"day\");\n      break;\n  }\n  return [newStartDate, newEndDate];\n};\n\nexport const seedDates = (\n  startDate: Date,\n  endDate: Date,\n  viewMode: ViewMode\n) => {\n  let currentDate: Date = new Date(startDate);\n  const dates: Date[] = [currentDate];\n  while (currentDate < endDate) {\n    switch (viewMode) {\n      case ViewMode.Year:\n        currentDate = addToDate(currentDate, 1, \"year\");\n        break;\n      case ViewMode.Month:\n        currentDate = addToDate(currentDate, 1, \"month\");\n        break;\n      case ViewMode.Week:\n        currentDate = addToDate(currentDate, 7, \"day\");\n        break;\n      case ViewMode.Day:\n        currentDate = addToDate(currentDate, 1, \"day\");\n        break;\n      case ViewMode.HalfDay:\n        currentDate = addToDate(currentDate, 12, \"hour\");\n        break;\n      case ViewMode.QuarterDay:\n        currentDate = addToDate(currentDate, 6, \"hour\");\n        break;\n      case ViewMode.Hour:\n        currentDate = addToDate(currentDate, 1, \"hour\");\n        break;\n    }\n    dates.push(currentDate);\n  }\n  return dates;\n};\n\nexport const getLocaleMonth = (date: Date, locale: string) => {\n  let bottomValue = getCachedDateTimeFormat(locale, {\n    month: \"long\",\n  }).format(date);\n  bottomValue = bottomValue.replace(\n    bottomValue[0],\n    bottomValue[0].toLocaleUpperCase()\n  );\n  return bottomValue;\n};\n\nexport const getLocalDayOfWeek = (\n  date: Date,\n  locale: string,\n  format?: \"long\" | \"short\" | \"narrow\" | undefined\n) => {\n  let bottomValue = getCachedDateTimeFormat(locale, {\n    weekday: format,\n  }).format(date);\n  bottomValue = bottomValue.replace(\n    bottomValue[0],\n    bottomValue[0].toLocaleUpperCase()\n  );\n  return bottomValue;\n};\n\n/**\n * Returns monday of current week\n * @param date date for modify\n */\nconst getMonday = (date: Date) => {\n  const day = date.getDay();\n  const diff = date.getDate() - day + (day === 0 ? -6 : 1); // adjust when day is sunday\n  return new Date(date.setDate(diff));\n};\n\nexport const getWeekNumberISO8601 = (date: Date) => {\n  const tmpDate = new Date(date.valueOf());\n  const dayNumber = (tmpDate.getDay() + 6) % 7;\n  tmpDate.setDate(tmpDate.getDate() - dayNumber + 3);\n  const firstThursday = tmpDate.valueOf();\n  tmpDate.setMonth(0, 1);\n  if (tmpDate.getDay() !== 4) {\n    tmpDate.setMonth(0, 1 + ((4 - tmpDate.getDay() + 7) % 7));\n  }\n  const weekNumber = (\n    1 + Math.ceil((firstThursday - tmpDate.valueOf()) / 604800000)\n  ).toString();\n\n  if (weekNumber.length === 1) {\n    return `0${weekNumber}`;\n  } else {\n    return weekNumber;\n  }\n};\n\nexport const getDaysInMonth = (month: number, year: number) => {\n  return new Date(year, month + 1, 0).getDate();\n};\n","import React from \"react\";\nimport styles from \"./task-list-header.module.css\";\n\nexport const TaskListHeaderDefault: React.FC<{\n  headerHeight: number;\n  rowWidth: string;\n  fontFamily: string;\n  fontSize: string;\n}> = ({ headerHeight, fontFamily, fontSize, rowWidth }) => {\n  return (\n    <div\n      className={styles.ganttTable}\n      style={{\n        fontFamily: fontFamily,\n        fontSize: fontSize,\n      }}\n    >\n      <div\n        className={styles.ganttTable_Header}\n        style={{\n          height: headerHeight - 2,\n        }}\n      >\n        <div\n          className={styles.ganttTable_HeaderItem}\n          style={{\n            minWidth: rowWidth,\n          }}\n        >\n          &nbsp;Name\n        </div>\n        <div\n          className={styles.ganttTable_HeaderSeparator}\n          style={{\n            height: headerHeight * 0.5,\n            marginTop: headerHeight * 0.2,\n          }}\n        />\n        <div\n          className={styles.ganttTable_HeaderItem}\n          style={{\n            minWidth: rowWidth,\n          }}\n        >\n          &nbsp;From\n        </div>\n        <div\n          className={styles.ganttTable_HeaderSeparator}\n          style={{\n            height: headerHeight * 0.5,\n            marginTop: headerHeight * 0.25,\n          }}\n        />\n        <div\n          className={styles.ganttTable_HeaderItem}\n          style={{\n            minWidth: rowWidth,\n          }}\n        >\n          &nbsp;To\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React, { useMemo } from \"react\";\nimport styles from \"./task-list-table.module.css\";\nimport { Task } from \"../../types/public-types\";\n\nconst localeDateStringCache = {};\nconst toLocaleDateStringFactory =\n  (locale: string) =>\n  (date: Date, dateTimeOptions: Intl.DateTimeFormatOptions) => {\n    const key = date.toString();\n    let lds = localeDateStringCache[key];\n    if (!lds) {\n      lds = date.toLocaleDateString(locale, dateTimeOptions);\n      localeDateStringCache[key] = lds;\n    }\n    return lds;\n  };\nconst dateTimeOptions: Intl.DateTimeFormatOptions = {\n  weekday: \"short\",\n  year: \"numeric\",\n  month: \"long\",\n  day: \"numeric\",\n};\n\nexport const TaskListTableDefault: React.FC<{\n  rowHeight: number;\n  rowWidth: string;\n  fontFamily: string;\n  fontSize: string;\n  locale: string;\n  tasks: Task[];\n  selectedTaskId: string;\n  setSelectedTask: (taskId: string) => void;\n  onExpanderClick: (task: Task) => void;\n}> = ({\n  rowHeight,\n  rowWidth,\n  tasks,\n  fontFamily,\n  fontSize,\n  locale,\n  onExpanderClick,\n}) => {\n  const toLocaleDateString = useMemo(\n    () => toLocaleDateStringFactory(locale),\n    [locale]\n  );\n\n  return (\n    <div\n      className={styles.taskListWrapper}\n      style={{\n        fontFamily: fontFamily,\n        fontSize: fontSize,\n      }}\n    >\n      {tasks.map(t => {\n        let expanderSymbol = \"\";\n        if (t.hideChildren === false) {\n          expanderSymbol = \"▼\";\n        } else if (t.hideChildren === true) {\n          expanderSymbol = \"▶\";\n        }\n\n        return (\n          <div\n            className={styles.taskListTableRow}\n            style={{ height: rowHeight }}\n            key={`${t.id}row`}\n          >\n            <div\n              className={styles.taskListCell}\n              style={{\n                minWidth: rowWidth,\n                maxWidth: rowWidth,\n              }}\n              title={t.name}\n            >\n              <div className={styles.taskListNameWrapper}>\n                <div\n                  className={\n                    expanderSymbol\n                      ? styles.taskListExpander\n                      : styles.taskListEmptyExpander\n                  }\n                  onClick={() => onExpanderClick(t)}\n                >\n                  {expanderSymbol}\n                </div>\n                <div>{t.name}</div>\n              </div>\n            </div>\n            <div\n              className={styles.taskListCell}\n              style={{\n                minWidth: rowWidth,\n                maxWidth: rowWidth,\n              }}\n            >\n              &nbsp;{toLocaleDateString(t.start, dateTimeOptions)}\n            </div>\n            <div\n              className={styles.taskListCell}\n              style={{\n                minWidth: rowWidth,\n                maxWidth: rowWidth,\n              }}\n            >\n              &nbsp;{toLocaleDateString(t.end, dateTimeOptions)}\n            </div>\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n","import React, { useRef, useEffect, useState } from \"react\";\nimport { Task } from \"../../types/public-types\";\nimport { BarTask } from \"../../types/bar-task\";\nimport styles from \"./tooltip.module.css\";\n\nexport type TooltipProps = {\n  task: BarTask;\n  arrowIndent: number;\n  rtl: boolean;\n  svgContainerHeight: number;\n  svgContainerWidth: number;\n  svgWidth: number;\n  headerHeight: number;\n  taskListWidth: number;\n  scrollX: number;\n  scrollY: number;\n  rowHeight: number;\n  fontSize: string;\n  fontFamily: string;\n  TooltipContent: React.FC<{\n    task: Task;\n    fontSize: string;\n    fontFamily: string;\n  }>;\n};\nexport const Tooltip: React.FC<TooltipProps> = ({\n  task,\n  rowHeight,\n  rtl,\n  svgContainerHeight,\n  svgContainerWidth,\n  scrollX,\n  scrollY,\n  arrowIndent,\n  fontSize,\n  fontFamily,\n  headerHeight,\n  taskListWidth,\n  TooltipContent,\n}) => {\n  const tooltipRef = useRef<HTMLDivElement | null>(null);\n  const [relatedY, setRelatedY] = useState(0);\n  const [relatedX, setRelatedX] = useState(0);\n  useEffect(() => {\n    if (tooltipRef.current) {\n      const tooltipHeight = tooltipRef.current.offsetHeight * 1.1;\n      const tooltipWidth = tooltipRef.current.offsetWidth * 1.1;\n\n      let newRelatedY = task.index * rowHeight - scrollY + headerHeight;\n      let newRelatedX: number;\n      if (rtl) {\n        newRelatedX = task.x1 - arrowIndent * 1.5 - tooltipWidth - scrollX;\n        if (newRelatedX < 0) {\n          newRelatedX = task.x2 + arrowIndent * 1.5 - scrollX;\n        }\n        const tooltipLeftmostPoint = tooltipWidth + newRelatedX;\n        if (tooltipLeftmostPoint > svgContainerWidth) {\n          newRelatedX = svgContainerWidth - tooltipWidth;\n          newRelatedY += rowHeight;\n        }\n      } else {\n        newRelatedX = task.x2 + arrowIndent * 1.5 + taskListWidth - scrollX;\n        const tooltipLeftmostPoint = tooltipWidth + newRelatedX;\n        const fullChartWidth = taskListWidth + svgContainerWidth;\n        if (tooltipLeftmostPoint > fullChartWidth) {\n          newRelatedX =\n            task.x1 +\n            taskListWidth -\n            arrowIndent * 1.5 -\n            scrollX -\n            tooltipWidth;\n        }\n        if (newRelatedX < taskListWidth) {\n          newRelatedX = svgContainerWidth + taskListWidth - tooltipWidth;\n          newRelatedY += rowHeight;\n        }\n      }\n\n      const tooltipLowerPoint = tooltipHeight + newRelatedY - scrollY;\n      if (tooltipLowerPoint > svgContainerHeight - scrollY) {\n        newRelatedY = svgContainerHeight - tooltipHeight;\n      }\n      setRelatedY(newRelatedY);\n      setRelatedX(newRelatedX);\n    }\n  }, [\n    tooltipRef,\n    task,\n    arrowIndent,\n    scrollX,\n    scrollY,\n    headerHeight,\n    taskListWidth,\n    rowHeight,\n    svgContainerHeight,\n    svgContainerWidth,\n    rtl,\n  ]);\n\n  return (\n    <div\n      ref={tooltipRef}\n      className={\n        relatedX\n          ? styles.tooltipDetailsContainer\n          : styles.tooltipDetailsContainerHidden\n      }\n      style={{ left: relatedX, top: relatedY }}\n    >\n      <TooltipContent task={task} fontSize={fontSize} fontFamily={fontFamily} />\n    </div>\n  );\n};\n\nexport const StandardTooltipContent: React.FC<{\n  task: Task;\n  fontSize: string;\n  fontFamily: string;\n}> = ({ task, fontSize, fontFamily }) => {\n  const style = {\n    fontSize,\n    fontFamily,\n  };\n  return (\n    <div className={styles.tooltipDefaultContainer} style={style}>\n      <b style={{ fontSize: fontSize + 6 }}>{`${\n        task.name\n      }: ${task.start.getDate()}-${\n        task.start.getMonth() + 1\n      }-${task.start.getFullYear()} - ${task.end.getDate()}-${\n        task.end.getMonth() + 1\n      }-${task.end.getFullYear()}`}</b>\n      {task.end.getTime() - task.start.getTime() !== 0 && (\n        <p className={styles.tooltipDefaultContainerParagraph}>{`Duration: ${~~(\n          (task.end.getTime() - task.start.getTime()) /\n          (1000 * 60 * 60 * 24)\n        )} day(s)`}</p>\n      )}\n\n      <p className={styles.tooltipDefaultContainerParagraph}>\n        {!!task.progress && `Progress: ${task.progress} %`}\n      </p>\n    </div>\n  );\n};\n","import React, { SyntheticEvent, useRef, useEffect } from \"react\";\nimport styles from \"./vertical-scroll.module.css\";\n\nexport const VerticalScroll: React.FC<{\n  scroll: number;\n  ganttHeight: number;\n  ganttFullHeight: number;\n  headerHeight: number;\n  rtl: boolean;\n  onScroll: (event: SyntheticEvent<HTMLDivElement>) => void;\n}> = ({\n  scroll,\n  ganttHeight,\n  ganttFullHeight,\n  headerHeight,\n  rtl,\n  onScroll,\n}) => {\n  const scrollRef = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    if (scrollRef.current) {\n      scrollRef.current.scrollTop = scroll;\n    }\n  }, [scroll]);\n\n  return (\n    <div\n      style={{\n        height: ganttHeight,\n        marginTop: headerHeight,\n        marginLeft: rtl ? \"\" : \"-1rem\",\n      }}\n      className={styles.scroll}\n      onScroll={onScroll}\n      ref={scrollRef}\n    >\n      <div style={{ height: ganttFullHeight, width: 1 }} />\n    </div>\n  );\n};\n","import React, { useEffect, useRef } from \"react\";\nimport { BarTask } from \"../../types/bar-task\";\nimport { Task } from \"../../types/public-types\";\n\nexport type TaskListProps = {\n  headerHeight: number;\n  rowWidth: string;\n  fontFamily: string;\n  fontSize: string;\n  rowHeight: number;\n  ganttHeight: number;\n  scrollY: number;\n  locale: string;\n  tasks: Task[];\n  taskListRef: React.RefObject<HTMLDivElement>;\n  horizontalContainerClass?: string;\n  selectedTask: BarTask | undefined;\n  setSelectedTask: (task: string) => void;\n  onExpanderClick: (task: Task) => void;\n  TaskListHeader: React.FC<{\n    headerHeight: number;\n    rowWidth: string;\n    fontFamily: string;\n    fontSize: string;\n  }>;\n  TaskListTable: React.FC<{\n    rowHeight: number;\n    rowWidth: string;\n    fontFamily: string;\n    fontSize: string;\n    locale: string;\n    tasks: Task[];\n    selectedTaskId: string;\n    setSelectedTask: (taskId: string) => void;\n    onExpanderClick: (task: Task) => void;\n  }>;\n};\n\nexport const TaskList: React.FC<TaskListProps> = ({\n  headerHeight,\n  fontFamily,\n  fontSize,\n  rowWidth,\n  rowHeight,\n  scrollY,\n  tasks,\n  selectedTask,\n  setSelectedTask,\n  onExpanderClick,\n  locale,\n  ganttHeight,\n  taskListRef,\n  horizontalContainerClass,\n  TaskListHeader,\n  TaskListTable,\n}) => {\n  const horizontalContainerRef = useRef<HTMLDivElement>(null);\n  useEffect(() => {\n    if (horizontalContainerRef.current) {\n      horizontalContainerRef.current.scrollTop = scrollY;\n    }\n  }, [scrollY]);\n\n  const headerProps = {\n    headerHeight,\n    fontFamily,\n    fontSize,\n    rowWidth,\n  };\n  const selectedTaskId = selectedTask ? selectedTask.id : \"\";\n  const tableProps = {\n    rowHeight,\n    rowWidth,\n    fontFamily,\n    fontSize,\n    tasks,\n    locale,\n    selectedTaskId: selectedTaskId,\n    setSelectedTask,\n    onExpanderClick,\n  };\n\n  return (\n    <div ref={taskListRef}>\n      <TaskListHeader {...headerProps} />\n      <div\n        ref={horizontalContainerRef}\n        className={horizontalContainerClass}\n        style={ganttHeight ? { height: ganttHeight } : {}}\n      >\n        <TaskListTable {...tableProps} />\n      </div>\n    </div>\n  );\n};\n","import React, { ReactChild } from \"react\";\nimport { Task } from \"../../types/public-types\";\nimport { addToDate } from \"../../helpers/date-helper\";\nimport styles from \"./grid.module.css\";\n\nexport type GridBodyProps = {\n  tasks: Task[];\n  dates: Date[];\n  svgWidth: number;\n  rowHeight: number;\n  columnWidth: number;\n  todayColor: string;\n  rtl: boolean;\n};\nexport const GridBody: React.FC<GridBodyProps> = ({\n  tasks,\n  dates,\n  rowHeight,\n  svgWidth,\n  columnWidth,\n  todayColor,\n  rtl,\n}) => {\n  let y = 0;\n  const gridRows: ReactChild[] = [];\n  const rowLines: ReactChild[] = [\n    <line\n      key=\"RowLineFirst\"\n      x=\"0\"\n      y1={0}\n      x2={svgWidth}\n      y2={0}\n      className={styles.gridRowLine}\n    />,\n  ];\n  for (const task of tasks) {\n    gridRows.push(\n      <rect\n        key={\"Row\" + task.id}\n        x=\"0\"\n        y={y}\n        width={svgWidth}\n        height={rowHeight}\n        className={styles.gridRow}\n      />\n    );\n    rowLines.push(\n      <line\n        key={\"RowLine\" + task.id}\n        x=\"0\"\n        y1={y + rowHeight}\n        x2={svgWidth}\n        y2={y + rowHeight}\n        className={styles.gridRowLine}\n      />\n    );\n    y += rowHeight;\n  }\n\n  const now = new Date();\n  let tickX = 0;\n  const ticks: ReactChild[] = [];\n  let today: ReactChild = <rect />;\n  for (let i = 0; i < dates.length; i++) {\n    const date = dates[i];\n    ticks.push(\n      <line\n        key={date.getTime()}\n        x1={tickX}\n        y1={0}\n        x2={tickX}\n        y2={y}\n        className={styles.gridTick}\n      />\n    );\n    if (\n      (i + 1 !== dates.length &&\n        date.getTime() < now.getTime() &&\n        dates[i + 1].getTime() >= now.getTime()) ||\n      // if current date is last\n      (i !== 0 &&\n        i + 1 === dates.length &&\n        date.getTime() < now.getTime() &&\n        addToDate(\n          date,\n          date.getTime() - dates[i - 1].getTime(),\n          \"millisecond\"\n        ).getTime() >= now.getTime())\n    ) {\n      today = (\n        <rect\n          x={tickX}\n          y={0}\n          width={columnWidth}\n          height={y}\n          fill={todayColor}\n        />\n      );\n    }\n    // rtl for today\n    if (\n      rtl &&\n      i + 1 !== dates.length &&\n      date.getTime() >= now.getTime() &&\n      dates[i + 1].getTime() < now.getTime()\n    ) {\n      today = (\n        <rect\n          x={tickX + columnWidth}\n          y={0}\n          width={columnWidth}\n          height={y}\n          fill={todayColor}\n        />\n      );\n    }\n    tickX += columnWidth;\n  }\n  return (\n    <g className=\"gridBody\">\n      <g className=\"rows\">{gridRows}</g>\n      <g className=\"rowLines\">{rowLines}</g>\n      <g className=\"ticks\">{ticks}</g>\n      <g className=\"today\">{today}</g>\n    </g>\n  );\n};\n","import React from \"react\";\nimport { GridBody, GridBodyProps } from \"./grid-body\";\n\nexport type GridProps = GridBodyProps;\nexport const Grid: React.FC<GridProps> = props => {\n  return (\n    <g className=\"grid\">\n      <GridBody {...props} />\n    </g>\n  );\n};\n","import React from \"react\";\nimport styles from \"./calendar.module.css\";\n\ntype TopPartOfCalendarProps = {\n  value: string;\n  x1Line: number;\n  y1Line: number;\n  y2Line: number;\n  xText: number;\n  yText: number;\n};\n\nexport const TopPartOfCalendar: React.FC<TopPartOfCalendarProps> = ({\n  value,\n  x1Line,\n  y1Line,\n  y2Line,\n  xText,\n  yText,\n}) => {\n  return (\n    <g className=\"calendarTop\">\n      <line\n        x1={x1Line}\n        y1={y1Line}\n        x2={x1Line}\n        y2={y2Line}\n        className={styles.calendarTopTick}\n        key={value + \"line\"}\n      />\n      <text\n        key={value + \"text\"}\n        y={yText}\n        x={xText}\n        className={styles.calendarTopText}\n      >\n        {value}\n      </text>\n    </g>\n  );\n};\n","import React, { ReactChild } from \"react\";\nimport { ViewMode } from \"../../types/public-types\";\nimport { TopPartOfCalendar } from \"./top-part-of-calendar\";\nimport {\n  getCachedDateTimeFormat,\n  getDaysInMonth,\n  getLocalDayOfWeek,\n  getLocaleMonth,\n  getWeekNumberISO8601,\n} from \"../../helpers/date-helper\";\nimport { DateSetup } from \"../../types/date-setup\";\nimport styles from \"./calendar.module.css\";\n\nexport type CalendarProps = {\n  dateSetup: DateSetup;\n  locale: string;\n  viewMode: ViewMode;\n  rtl: boolean;\n  headerHeight: number;\n  columnWidth: number;\n  fontFamily: string;\n  fontSize: string;\n};\n\nexport const Calendar: React.FC<CalendarProps> = ({\n  dateSetup,\n  locale,\n  viewMode,\n  rtl,\n  headerHeight,\n  columnWidth,\n  fontFamily,\n  fontSize,\n}) => {\n  const getCalendarValuesForYear = () => {\n    const topValues: ReactChild[] = [];\n    const bottomValues: ReactChild[] = [];\n    const topDefaultHeight = headerHeight * 0.5;\n    for (let i = 0; i < dateSetup.dates.length; i++) {\n      const date = dateSetup.dates[i];\n      const bottomValue = date.getFullYear();\n      bottomValues.push(\n        <text\n          key={date.getFullYear()}\n          y={headerHeight * 0.8}\n          x={columnWidth * i + columnWidth * 0.5}\n          className={styles.calendarBottomText}\n        >\n          {bottomValue}\n        </text>\n      );\n      if (\n        i === 0 ||\n        date.getFullYear() !== dateSetup.dates[i - 1].getFullYear()\n      ) {\n        const topValue = date.getFullYear().toString();\n        let xText: number;\n        if (rtl) {\n          xText = (6 + i + date.getFullYear() + 1) * columnWidth;\n        } else {\n          xText = (6 + i - date.getFullYear()) * columnWidth;\n        }\n        topValues.push(\n          <TopPartOfCalendar\n            key={topValue}\n            value={topValue}\n            x1Line={columnWidth * i}\n            y1Line={0}\n            y2Line={headerHeight}\n            xText={xText}\n            yText={topDefaultHeight * 0.9}\n          />\n        );\n      }\n    }\n    return [topValues, bottomValues];\n  };\n\n  const getCalendarValuesForMonth = () => {\n    const topValues: ReactChild[] = [];\n    const bottomValues: ReactChild[] = [];\n    const topDefaultHeight = headerHeight * 0.5;\n    for (let i = 0; i < dateSetup.dates.length; i++) {\n      const date = dateSetup.dates[i];\n      const bottomValue = getLocaleMonth(date, locale);\n      bottomValues.push(\n        <text\n          key={bottomValue + date.getFullYear()}\n          y={headerHeight * 0.8}\n          x={columnWidth * i + columnWidth * 0.5}\n          className={styles.calendarBottomText}\n        >\n          {bottomValue}\n        </text>\n      );\n      if (\n        i === 0 ||\n        date.getFullYear() !== dateSetup.dates[i - 1].getFullYear()\n      ) {\n        const topValue = date.getFullYear().toString();\n        let xText: number;\n        if (rtl) {\n          xText = (6 + i + date.getMonth() + 1) * columnWidth;\n        } else {\n          xText = (6 + i - date.getMonth()) * columnWidth;\n        }\n        topValues.push(\n          <TopPartOfCalendar\n            key={topValue}\n            value={topValue}\n            x1Line={columnWidth * i}\n            y1Line={0}\n            y2Line={topDefaultHeight}\n            xText={xText}\n            yText={topDefaultHeight * 0.9}\n          />\n        );\n      }\n    }\n    return [topValues, bottomValues];\n  };\n\n  const getCalendarValuesForWeek = () => {\n    const topValues: ReactChild[] = [];\n    const bottomValues: ReactChild[] = [];\n    let weeksCount: number = 1;\n    const topDefaultHeight = headerHeight * 0.5;\n    const dates = dateSetup.dates;\n    for (let i = dates.length - 1; i >= 0; i--) {\n      const date = dates[i];\n      let topValue = \"\";\n      if (i === 0 || date.getMonth() !== dates[i - 1].getMonth()) {\n        // top\n        topValue = `${getLocaleMonth(date, locale)}, ${date.getFullYear()}`;\n      }\n      // bottom\n      const bottomValue = `W${getWeekNumberISO8601(date)}`;\n\n      bottomValues.push(\n        <text\n          key={date.getTime()}\n          y={headerHeight * 0.8}\n          x={columnWidth * (i + +rtl)}\n          className={styles.calendarBottomText}\n        >\n          {bottomValue}\n        </text>\n      );\n\n      if (topValue) {\n        // if last day is new month\n        if (i !== dates.length - 1) {\n          topValues.push(\n            <TopPartOfCalendar\n              key={topValue}\n              value={topValue}\n              x1Line={columnWidth * i + weeksCount * columnWidth}\n              y1Line={0}\n              y2Line={topDefaultHeight}\n              xText={columnWidth * i + columnWidth * weeksCount * 0.5}\n              yText={topDefaultHeight * 0.9}\n            />\n          );\n        }\n        weeksCount = 0;\n      }\n      weeksCount++;\n    }\n    return [topValues, bottomValues];\n  };\n\n  const getCalendarValuesForDay = () => {\n    const topValues: ReactChild[] = [];\n    const bottomValues: ReactChild[] = [];\n    const topDefaultHeight = headerHeight * 0.5;\n    const dates = dateSetup.dates;\n    for (let i = 0; i < dates.length; i++) {\n      const date = dates[i];\n      const bottomValue = `${getLocalDayOfWeek(date, locale, \"short\")}, ${date\n        .getDate()\n        .toString()}`;\n\n      bottomValues.push(\n        <text\n          key={date.getTime()}\n          y={headerHeight * 0.8}\n          x={columnWidth * i + columnWidth * 0.5}\n          className={styles.calendarBottomText}\n        >\n          {bottomValue}\n        </text>\n      );\n      if (\n        i + 1 !== dates.length &&\n        date.getMonth() !== dates[i + 1].getMonth()\n      ) {\n        const topValue = getLocaleMonth(date, locale);\n\n        topValues.push(\n          <TopPartOfCalendar\n            key={topValue + date.getFullYear()}\n            value={topValue}\n            x1Line={columnWidth * (i + 1)}\n            y1Line={0}\n            y2Line={topDefaultHeight}\n            xText={\n              columnWidth * (i + 1) -\n              getDaysInMonth(date.getMonth(), date.getFullYear()) *\n                columnWidth *\n                0.5\n            }\n            yText={topDefaultHeight * 0.9}\n          />\n        );\n      }\n    }\n    return [topValues, bottomValues];\n  };\n\n  const getCalendarValuesForPartOfDay = () => {\n    const topValues: ReactChild[] = [];\n    const bottomValues: ReactChild[] = [];\n    const ticks = viewMode === ViewMode.HalfDay ? 2 : 4;\n    const topDefaultHeight = headerHeight * 0.5;\n    const dates = dateSetup.dates;\n    for (let i = 0; i < dates.length; i++) {\n      const date = dates[i];\n      const bottomValue = getCachedDateTimeFormat(locale, {\n        hour: \"numeric\",\n      }).format(date);\n\n      bottomValues.push(\n        <text\n          key={date.getTime()}\n          y={headerHeight * 0.8}\n          x={columnWidth * (i + +rtl)}\n          className={styles.calendarBottomText}\n          fontFamily={fontFamily}\n        >\n          {bottomValue}\n        </text>\n      );\n      if (i === 0 || date.getDate() !== dates[i - 1].getDate()) {\n        const topValue = `${getLocalDayOfWeek(\n          date,\n          locale,\n          \"short\"\n        )}, ${date.getDate()} ${getLocaleMonth(date, locale)}`;\n        topValues.push(\n          <TopPartOfCalendar\n            key={topValue + date.getFullYear()}\n            value={topValue}\n            x1Line={columnWidth * i + ticks * columnWidth}\n            y1Line={0}\n            y2Line={topDefaultHeight}\n            xText={columnWidth * i + ticks * columnWidth * 0.5}\n            yText={topDefaultHeight * 0.9}\n          />\n        );\n      }\n    }\n\n    return [topValues, bottomValues];\n  };\n\n  const getCalendarValuesForHour = () => {\n    const topValues: ReactChild[] = [];\n    const bottomValues: ReactChild[] = [];\n    const topDefaultHeight = headerHeight * 0.5;\n    const dates = dateSetup.dates;\n    for (let i = 0; i < dates.length; i++) {\n      const date = dates[i];\n      const bottomValue = getCachedDateTimeFormat(locale, {\n        hour: \"numeric\",\n      }).format(date);\n\n      bottomValues.push(\n        <text\n          key={date.getTime()}\n          y={headerHeight * 0.8}\n          x={columnWidth * (i + +rtl)}\n          className={styles.calendarBottomText}\n          fontFamily={fontFamily}\n        >\n          {bottomValue}\n        </text>\n      );\n      if (i !== 0 && date.getDate() !== dates[i - 1].getDate()) {\n        const displayDate = dates[i - 1];\n        const topValue = `${getLocalDayOfWeek(\n          displayDate,\n          locale,\n          \"long\"\n        )}, ${displayDate.getDate()} ${getLocaleMonth(displayDate, locale)}`;\n        const topPosition = (date.getHours() - 24) / 2;\n        topValues.push(\n          <TopPartOfCalendar\n            key={topValue + displayDate.getFullYear()}\n            value={topValue}\n            x1Line={columnWidth * i}\n            y1Line={0}\n            y2Line={topDefaultHeight}\n            xText={columnWidth * (i + topPosition)}\n            yText={topDefaultHeight * 0.9}\n          />\n        );\n      }\n    }\n\n    return [topValues, bottomValues];\n  };\n\n  let topValues: ReactChild[] = [];\n  let bottomValues: ReactChild[] = [];\n  switch (dateSetup.viewMode) {\n    case ViewMode.Year:\n      [topValues, bottomValues] = getCalendarValuesForYear();\n      break;\n    case ViewMode.Month:\n        [topValues, bottomValues] = getCalendarValuesForMonth();\n        break;\n      case ViewMode.Week:\n      [topValues, bottomValues] = getCalendarValuesForWeek();\n      break;\n    case ViewMode.Day:\n      [topValues, bottomValues] = getCalendarValuesForDay();\n      break;\n    case ViewMode.QuarterDay:\n    case ViewMode.HalfDay:\n      [topValues, bottomValues] = getCalendarValuesForPartOfDay();\n      break;\n    case ViewMode.Hour:\n      [topValues, bottomValues] = getCalendarValuesForHour();\n  }\n  return (\n    <g className=\"calendar\" fontSize={fontSize} fontFamily={fontFamily}>\n      <rect\n        x={0}\n        y={0}\n        width={columnWidth * dateSetup.dates.length}\n        height={headerHeight}\n        className={styles.calendarHeader}\n      />\n      {bottomValues} {topValues}\n    </g>\n  );\n};\n","// A type of promise-like that resolves synchronously and supports only one observer\nexport const _Pact = /*#__PURE__*/(function() {\n\tfunction _Pact() {}\n\t_Pact.prototype.then = function(onFulfilled, onRejected) {\n\t\tconst result = new _Pact();\n\t\tconst state = this.s;\n\t\tif (state) {\n\t\t\tconst callback = state & 1 ? onFulfilled : onRejected;\n\t\t\tif (callback) {\n\t\t\t\ttry {\n\t\t\t\t\t_settle(result, 1, callback(this.v));\n\t\t\t\t} catch (e) {\n\t\t\t\t\t_settle(result, 2, e);\n\t\t\t\t}\n\t\t\t\treturn result;\n\t\t\t} else {\n\t\t\t\treturn this;\n\t\t\t}\n\t\t}\n\t\tthis.o = function(_this) {\n\t\t\ttry {\n\t\t\t\tconst value = _this.v;\n\t\t\t\tif (_this.s & 1) {\n\t\t\t\t\t_settle(result, 1, onFulfilled ? onFulfilled(value) : value);\n\t\t\t\t} else if (onRejected) {\n\t\t\t\t\t_settle(result, 1, onRejected(value));\n\t\t\t\t} else {\n\t\t\t\t\t_settle(result, 2, value);\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\t_settle(result, 2, e);\n\t\t\t}\n\t\t};\n\t\treturn result;\n\t}\n\treturn _Pact;\n})();\n\n// Settles a pact synchronously\nexport function _settle(pact, state, value) {\n\tif (!pact.s) {\n\t\tif (value instanceof _Pact) {\n\t\t\tif (value.s) {\n\t\t\t\tif (state & 1) {\n\t\t\t\t\tstate = value.s;\n\t\t\t\t}\n\t\t\t\tvalue = value.v;\n\t\t\t} else {\n\t\t\t\tvalue.o = _settle.bind(null, pact, state);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tif (value && value.then) {\n\t\t\tvalue.then(_settle.bind(null, pact, state), _settle.bind(null, pact, 2));\n\t\t\treturn;\n\t\t}\n\t\tpact.s = state;\n\t\tpact.v = value;\n\t\tconst observer = pact.o;\n\t\tif (observer) {\n\t\t\tobserver(pact);\n\t\t}\n\t}\n}\n\nexport function _isSettledPact(thenable) {\n\treturn thenable instanceof _Pact && thenable.s & 1;\n}\n\n// Converts argument to a function that always returns a Promise\nexport function _async(f) {\n\treturn function() {\n\t\tfor (var args = [], i = 0; i < arguments.length; i++) {\n\t\t\targs[i] = arguments[i];\n\t\t}\n\t\ttry {\n\t\t\treturn Promise.resolve(f.apply(this, args));\n\t\t} catch(e) {\n\t\t\treturn Promise.reject(e);\n\t\t}\n\t}\n}\n\n// Awaits on a value that may or may not be a Promise (equivalent to the await keyword in ES2015, with continuations passed explicitly)\nexport function _await(value, then, direct) {\n\tif (direct) {\n\t\treturn then ? then(value) : value;\n\t}\n\tif (!value || !value.then) {\n\t\tvalue = Promise.resolve(value);\n\t}\n\treturn then ? value.then(then) : value;\n}\n\n// Awaits on a value that may or may not be a Promise, then ignores it\nexport function _awaitIgnored(value, direct) {\n\tif (!direct) {\n\t\treturn value && value.then ? value.then(_empty) : Promise.resolve();\n\t}\n}\n\n// Proceeds after a value has resolved, or proceeds immediately if the value is not thenable\nexport function _continue(value, then) {\n\treturn value && value.then ? value.then(then) : then(value);\n}\n\n// Proceeds after a value has resolved, or proceeds immediately if the value is not thenable\nexport function _continueIgnored(value) {\n\tif (value && value.then) {\n\t\treturn value.then(_empty);\n\t}\n}\n\n// Asynchronously iterate through an object that has a length property, passing the index as the first argument to the callback (even as the length property changes)\nexport function _forTo(array, body, check) {\n\tvar i = -1, pact, reject;\n\tfunction _cycle(result) {\n\t\ttry {\n\t\t\twhile (++i < array.length && (!check || !check())) {\n\t\t\t\tresult = body(i);\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\t\tresult = result.v;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresult.then(_cycle, reject || (reject = _settle.bind(null, pact = new _Pact(), 2)));\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (pact) {\n\t\t\t\t_settle(pact, 1, result);\n\t\t\t} else {\n\t\t\t\tpact = result;\n\t\t\t}\n\t\t} catch (e) {\n\t\t\t_settle(pact || (pact = new _Pact()), 2, e);\n\t\t}\n\t}\n\t_cycle();\n\treturn pact;\n}\n\n// Asynchronously iterate through an object's properties (including properties inherited from the prototype)\n// Uses a snapshot of the object's properties\nexport function _forIn(target, body, check) {\n\tvar keys = [];\n\tfor (var key in target) {\n\t\tkeys.push(key);\n\t}\n\treturn _forTo(keys, function(i) { return body(keys[i]); }, check);\n}\n\n// Asynchronously iterate through an object's own properties (excluding properties inherited from the prototype)\n// Uses a snapshot of the object's properties\nexport function _forOwn(target, body, check) {\n\tvar keys = [];\n\tfor (var key in target) {\n\t\tif (Object.prototype.hasOwnProperty.call(target, key)) {\n\t\t\tkeys.push(key);\n\t\t}\n\t}\n\treturn _forTo(keys, function(i) { return body(keys[i]); }, check);\n}\n\nexport const _iteratorSymbol = /*#__PURE__*/ typeof Symbol !== \"undefined\" ? (Symbol.iterator || (Symbol.iterator = Symbol(\"Symbol.iterator\"))) : \"@@iterator\";\n\n// Asynchronously iterate through an object's values\n// Uses for...of if the runtime supports it, otherwise iterates until length on a copy\nexport function _forOf(target, body, check) {\n\tif (typeof target[_iteratorSymbol] === \"function\") {\n\t\tvar iterator = target[_iteratorSymbol](), step, pact, reject;\n\t\tfunction _cycle(result) {\n\t\t\ttry {\n\t\t\t\twhile (!(step = iterator.next()).done && (!check || !check())) {\n\t\t\t\t\tresult = body(step.value);\n\t\t\t\t\tif (result && result.then) {\n\t\t\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\t\t\tresult = result.v;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tresult.then(_cycle, reject || (reject = _settle.bind(null, pact = new _Pact(), 2)));\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (pact) {\n\t\t\t\t\t_settle(pact, 1, result);\n\t\t\t\t} else {\n\t\t\t\t\tpact = result;\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\t_settle(pact || (pact = new _Pact()), 2, e);\n\t\t\t}\n\t\t}\n\t\t_cycle();\n\t\tif (iterator.return) {\n\t\t\tvar _fixup = function(value) {\n\t\t\t\ttry {\n\t\t\t\t\tif (!step.done) {\n\t\t\t\t\t\titerator.return();\n\t\t\t\t\t}\n\t\t\t\t} catch(e) {\n\t\t\t\t}\n\t\t\t\treturn value;\n\t\t\t}\n\t\t\tif (pact && pact.then) {\n\t\t\t\treturn pact.then(_fixup, function(e) {\n\t\t\t\t\tthrow _fixup(e);\n\t\t\t\t});\n\t\t\t}\n\t\t\t_fixup();\n\t\t}\n\t\treturn pact;\n\t}\n\t// No support for Symbol.iterator\n\tif (!(\"length\" in target)) {\n\t\tthrow new TypeError(\"Object is not iterable\");\n\t}\n\t// Handle live collections properly\n\tvar values = [];\n\tfor (var i = 0; i < target.length; i++) {\n\t\tvalues.push(target[i]);\n\t}\n\treturn _forTo(values, function(i) { return body(values[i]); }, check);\n}\n\nexport const _asyncIteratorSymbol = /*#__PURE__*/ typeof Symbol !== \"undefined\" ? (Symbol.asyncIterator || (Symbol.asyncIterator = Symbol(\"Symbol.asyncIterator\"))) : \"@@asyncIterator\";\n\n// Asynchronously iterate on a value using it's async iterator if present, or its synchronous iterator if missing\nexport function _forAwaitOf(target, body, check) {\n\tif (typeof target[_asyncIteratorSymbol] === \"function\") {\n\t\tvar pact = new _Pact();\n\t\tvar iterator = target[_asyncIteratorSymbol]();\n\t\titerator.next().then(_resumeAfterNext).then(void 0, _reject);\n\t\treturn pact;\n\t\tfunction _resumeAfterBody(result) {\n\t\t\tif (check && check()) {\n\t\t\t\treturn _settle(pact, 1, iterator.return ? iterator.return().then(function() { return result; }) : result);\n\t\t\t}\n\t\t\titerator.next().then(_resumeAfterNext).then(void 0, _reject);\n\t\t}\n\t\tfunction _resumeAfterNext(step) {\n\t\t\tif (step.done) {\n\t\t\t\t_settle(pact, 1);\n\t\t\t} else {\n\t\t\t\tPromise.resolve(body(step.value)).then(_resumeAfterBody).then(void 0, _reject);\n\t\t\t}\n\t\t}\n\t\tfunction _reject(error) {\n\t\t\t_settle(pact, 2, iterator.return ? iterator.return().then(function() { return error; }) : error);\n\t\t}\n\t}\n\treturn Promise.resolve(_forOf(target, function(value) { return Promise.resolve(value).then(body); }, check));\n}\n\n// Asynchronously implement a generic for loop\nexport function _for(test, update, body) {\n\tvar stage;\n\tfor (;;) {\n\t\tvar shouldContinue = test();\n\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\tshouldContinue = shouldContinue.v;\n\t\t}\n\t\tif (!shouldContinue) {\n\t\t\treturn result;\n\t\t}\n\t\tif (shouldContinue.then) {\n\t\t\tstage = 0;\n\t\t\tbreak;\n\t\t}\n\t\tvar result = body();\n\t\tif (result && result.then) {\n\t\t\tif (_isSettledPact(result)) {\n\t\t\t\tresult = result.s;\n\t\t\t} else {\n\t\t\t\tstage = 1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (update) {\n\t\t\tvar updateValue = update();\n\t\t\tif (updateValue && updateValue.then && !_isSettledPact(updateValue)) {\n\t\t\t\tstage = 2;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\tvar pact = new _Pact();\n\tvar reject = _settle.bind(null, pact, 2);\n\t(stage === 0 ? shouldContinue.then(_resumeAfterTest) : stage === 1 ? result.then(_resumeAfterBody) : updateValue.then(_resumeAfterUpdate)).then(void 0, reject);\n\treturn pact;\n\tfunction _resumeAfterBody(value) {\n\t\tresult = value;\n\t\tdo {\n\t\t\tif (update) {\n\t\t\t\tupdateValue = update();\n\t\t\t\tif (updateValue && updateValue.then && !_isSettledPact(updateValue)) {\n\t\t\t\t\tupdateValue.then(_resumeAfterUpdate).then(void 0, reject);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\tshouldContinue = test();\n\t\t\tif (!shouldContinue || (_isSettledPact(shouldContinue) && !shouldContinue.v)) {\n\t\t\t\t_settle(pact, 1, result);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (shouldContinue.then) {\n\t\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tresult = body();\n\t\t\tif (_isSettledPact(result)) {\n\t\t\t\tresult = result.v;\n\t\t\t}\n\t\t} while (!result || !result.then);\n\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t}\n\tfunction _resumeAfterTest(shouldContinue) {\n\t\tif (shouldContinue) {\n\t\t\tresult = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t} else {\n\t\t\t\t_resumeAfterBody(result);\n\t\t\t}\n\t\t} else {\n\t\t\t_settle(pact, 1, result);\n\t\t}\n\t}\n\tfunction _resumeAfterUpdate() {\n\t\tif (shouldContinue = test()) {\n\t\t\tif (shouldContinue.then) {\n\t\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t} else {\n\t\t\t\t_resumeAfterTest(shouldContinue);\n\t\t\t}\n\t\t} else {\n\t\t\t_settle(pact, 1, result);\n\t\t}\n\t}\n}\n\n// Asynchronously implement a do ... while loop\nexport function _do(body, test) {\n\tvar awaitBody;\n\tdo {\n\t\tvar result = body();\n\t\tif (result && result.then) {\n\t\t\tif (_isSettledPact(result)) {\n\t\t\t\tresult = result.v;\n\t\t\t} else {\n\t\t\t\tawaitBody = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tvar shouldContinue = test();\n\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\tshouldContinue = shouldContinue.v;\n\t\t}\n\t\tif (!shouldContinue) {\n\t\t\treturn result;\n\t\t}\n\t} while (!shouldContinue.then);\n\tconst pact = new _Pact();\n\tconst reject = _settle.bind(null, pact, 2);\n\t(awaitBody ? result.then(_resumeAfterBody) : shouldContinue.then(_resumeAfterTest)).then(void 0, reject);\n\treturn pact;\n\tfunction _resumeAfterBody(value) {\n\t\tresult = value;\n\t\tfor (;;) {\n\t\t\tshouldContinue = test();\n\t\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\t\tshouldContinue = shouldContinue.v;\n\t\t\t}\n\t\t\tif (!shouldContinue) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (shouldContinue.then) {\n\t\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tresult = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\tresult = result.v;\n\t\t\t\t} else {\n\t\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t_settle(pact, 1, result);\n\t}\n\tfunction _resumeAfterTest(shouldContinue) {\n\t\tif (shouldContinue) {\n\t\t\tdo {\n\t\t\t\tresult = body();\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\t\tresult = result.v;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tshouldContinue = test();\n\t\t\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\t\t\tshouldContinue = shouldContinue.v;\n\t\t\t\t}\n\t\t\t\tif (!shouldContinue) {\n\t\t\t\t\t_settle(pact, 1, result);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t} while (!shouldContinue.then);\n\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t} else {\n\t\t\t_settle(pact, 1, result);\n\t\t}\n\t}\n}\n\n// Asynchronously implement a switch statement\nexport function _switch(discriminant, cases) {\n\tvar dispatchIndex = -1;\n\tvar awaitBody;\n\touter: {\n\t\tfor (var i = 0; i < cases.length; i++) {\n\t\t\tvar test = cases[i][0];\n\t\t\tif (test) {\n\t\t\t\tvar testValue = test();\n\t\t\t\tif (testValue && testValue.then) {\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\t\t\t\tif (testValue === discriminant) {\n\t\t\t\t\tdispatchIndex = i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Found the default case, set it as the pending dispatch case\n\t\t\t\tdispatchIndex = i;\n\t\t\t}\n\t\t}\n\t\tif (dispatchIndex !== -1) {\n\t\t\tdo {\n\t\t\t\tvar body = cases[dispatchIndex][1];\n\t\t\t\twhile (!body) {\n\t\t\t\t\tdispatchIndex++;\n\t\t\t\t\tbody = cases[dispatchIndex][1];\n\t\t\t\t}\n\t\t\t\tvar result = body();\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tawaitBody = true;\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\t\t\t\tvar fallthroughCheck = cases[dispatchIndex][2];\n\t\t\t\tdispatchIndex++;\n\t\t\t} while (fallthroughCheck && !fallthroughCheck());\n\t\t\treturn result;\n\t\t}\n\t}\n\tconst pact = new _Pact();\n\tconst reject = _settle.bind(null, pact, 2);\n\t(awaitBody ? result.then(_resumeAfterBody) : testValue.then(_resumeAfterTest)).then(void 0, reject);\n\treturn pact;\n\tfunction _resumeAfterTest(value) {\n\t\tfor (;;) {\n\t\t\tif (value === discriminant) {\n\t\t\t\tdispatchIndex = i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (++i === cases.length) {\n\t\t\t\tif (dispatchIndex !== -1) {\n\t\t\t\t\tbreak;\n\t\t\t\t} else {\n\t\t\t\t\t_settle(pact, 1, result);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\ttest = cases[i][0];\n\t\t\tif (test) {\n\t\t\t\tvalue = test();\n\t\t\t\tif (value && value.then) {\n\t\t\t\t\tvalue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tdispatchIndex = i;\n\t\t\t}\n\t\t}\n\t\tdo {\n\t\t\tvar body = cases[dispatchIndex][1];\n\t\t\twhile (!body) {\n\t\t\t\tdispatchIndex++;\n\t\t\t\tbody = cases[dispatchIndex][1];\n\t\t\t}\n\t\t\tvar result = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar fallthroughCheck = cases[dispatchIndex][2];\n\t\t\tdispatchIndex++;\n\t\t} while (fallthroughCheck && !fallthroughCheck());\n\t\t_settle(pact, 1, result);\n\t}\n\tfunction _resumeAfterBody(result) {\n\t\tfor (;;) {\n\t\t\tvar fallthroughCheck = cases[dispatchIndex][2];\n\t\t\tif (!fallthroughCheck || fallthroughCheck()) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tdispatchIndex++;\n\t\t\tvar body = cases[dispatchIndex][1];\n\t\t\twhile (!body) {\n\t\t\t\tdispatchIndex++;\n\t\t\t\tbody = cases[dispatchIndex][1];\n\t\t\t}\n\t\t\tresult = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\t_settle(pact, 1, result);\n\t}\n}\n\n// Asynchronously call a function and pass the result to explicitly passed continuations\nexport function _call(body, then, direct) {\n\tif (direct) {\n\t\treturn then ? then(body()) : body();\n\t}\n\ttry {\n\t\tvar result = Promise.resolve(body());\n\t\treturn then ? result.then(then) : result;\n\t} catch (e) {\n\t\treturn Promise.reject(e);\n\t}\n}\n\n// Asynchronously call a function and swallow the result\nexport function _callIgnored(body, direct) {\n\treturn _call(body, _empty, direct);\n}\n\n// Asynchronously call a function and pass the result to explicitly passed continuations\nexport function _invoke(body, then) {\n\tvar result = body();\n\tif (result && result.then) {\n\t\treturn result.then(then);\n\t}\n\treturn then(result);\n}\n\n// Asynchronously call a function and swallow the result\nexport function _invokeIgnored(body) {\n\tvar result = body();\n\tif (result && result.then) {\n\t\treturn result.then(_empty);\n\t}\n}\n\n// Asynchronously call a function and send errors to recovery continuation\nexport function _catch(body, recover) {\n\ttry {\n\t\tvar result = body();\n\t} catch(e) {\n\t\treturn recover(e);\n\t}\n\tif (result && result.then) {\n\t\treturn result.then(void 0, recover);\n\t}\n\treturn result;\n}\n\n// Asynchronously await a promise and pass the result to a finally continuation\nexport function _finallyRethrows(body, finalizer) {\n\ttry {\n\t\tvar result = body();\n\t} catch (e) {\n\t\treturn finalizer(true, e);\n\t}\n\tif (result && result.then) {\n\t\treturn result.then(finalizer.bind(null, false), finalizer.bind(null, true));\n\t}\n\treturn finalizer(false, result);\n}\n\n// Asynchronously await a promise and invoke a finally continuation that always overrides the result\nexport function _finally(body, finalizer) {\n\ttry {\n\t\tvar result = body();\n\t} catch (e) {\n\t\treturn finalizer();\n\t}\n\tif (result && result.then) {\n\t\treturn result.then(finalizer, finalizer);\n\t}\n\treturn finalizer();\n}\n\n// Rethrow or return a value from a finally continuation\nexport function _rethrow(thrown, value) {\n\tif (thrown)\n\t\tthrow value;\n\treturn value;\n}\n\n// Empty function to implement break and other control flow that ignores asynchronous results\nexport function _empty() {\n}\n\n// Sentinel value for early returns in generators \nexport const _earlyReturn = /*#__PURE__*/ {};\n\n// Asynchronously call a function and send errors to recovery continuation, skipping early returns\nexport function _catchInGenerator(body, recover) {\n\treturn _catch(body, function(e) {\n\t\tif (e === _earlyReturn) {\n\t\t\tthrow e;\n\t\t}\n\t\treturn recover(e);\n\t});\n}\n\n// Asynchronous generator class; accepts the entrypoint of the generator, to which it passes itself when the generator should start\nexport const _AsyncGenerator = /*#__PURE__*/(function() {\n\tfunction _AsyncGenerator(entry) {\n\t\tthis._entry = entry;\n\t\tthis._pact = null;\n\t\tthis._resolve = null;\n\t\tthis._return = null;\n\t\tthis._promise = null;\n\t}\n\n\tfunction _wrapReturnedValue(value) {\n\t\treturn { value: value, done: true };\n\t}\n\tfunction _wrapYieldedValue(value) {\n\t\treturn { value: value, done: false };\n\t}\n\n\t_AsyncGenerator.prototype._yield = function(value) {\n\t\t// Yield the value to the pending next call\n\t\tthis._resolve(value && value.then ? value.then(_wrapYieldedValue) : _wrapYieldedValue(value));\n\t\t// Return a pact for an upcoming next/return/throw call\n\t\treturn this._pact = new _Pact();\n\t};\n\t_AsyncGenerator.prototype.next = function(value) {\n\t\t// Advance the generator, starting it if it has yet to be started\n\t\tconst _this = this;\n\t\treturn _this._promise = new Promise(function (resolve) {\n\t\t\tconst _pact = _this._pact;\n\t\t\tif (_pact === null) {\n\t\t\t\tconst _entry = _this._entry;\n\t\t\t\tif (_entry === null) {\n\t\t\t\t\t// Generator is started, but not awaiting a yield expression\n\t\t\t\t\t// Abandon the next call!\n\t\t\t\t\treturn resolve(_this._promise);\n\t\t\t\t}\n\t\t\t\t// Start the generator\n\t\t\t\t_this._entry = null;\n\t\t\t\t_this._resolve = resolve;\n\t\t\t\tfunction returnValue(value) {\n\t\t\t\t\t_this._resolve(value && value.then ? value.then(_wrapReturnedValue) : _wrapReturnedValue(value));\n\t\t\t\t\t_this._pact = null;\n\t\t\t\t\t_this._resolve = null;\n\t\t\t\t}\n\t\t\t\tvar result = _entry(_this);\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tresult.then(returnValue, function(error) {\n\t\t\t\t\t\tif (error === _earlyReturn) {\n\t\t\t\t\t\t\treturnValue(_this._return);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconst pact = new _Pact();\n\t\t\t\t\t\t\t_this._resolve(pact);\n\t\t\t\t\t\t\t_this._pact = null;\n\t\t\t\t\t\t\t_this._resolve = null;\n\t\t\t\t\t\t\t_resolve(pact, 2, error);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\treturnValue(result);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Generator is started and a yield expression is pending, settle it\n\t\t\t\t_this._pact = null;\n\t\t\t\t_this._resolve = resolve;\n\t\t\t\t_settle(_pact, 1, value);\n\t\t\t}\n\t\t});\n\t};\n\t_AsyncGenerator.prototype.return = function(value) {\n\t\t// Early return from the generator if started, otherwise abandons the generator\n\t\tconst _this = this;\n\t\treturn _this._promise = new Promise(function (resolve) {\n\t\t\tconst _pact = _this._pact;\n\t\t\tif (_pact === null) {\n\t\t\t\tif (_this._entry === null) {\n\t\t\t\t\t// Generator is started, but not awaiting a yield expression\n\t\t\t\t\t// Abandon the return call!\n\t\t\t\t\treturn resolve(_this._promise);\n\t\t\t\t}\n\t\t\t\t// Generator is not started, abandon it and return the specified value\n\t\t\t\t_this._entry = null;\n\t\t\t\treturn resolve(value && value.then ? value.then(_wrapReturnedValue) : _wrapReturnedValue(value));\n\t\t\t}\n\t\t\t// Settle the yield expression with a rejected \"early return\" value\n\t\t\t_this._return = value;\n\t\t\t_this._resolve = resolve;\n\t\t\t_this._pact = null;\n\t\t\t_settle(_pact, 2, _earlyReturn);\n\t\t});\n\t};\n\t_AsyncGenerator.prototype.throw = function(error) {\n\t\t// Inject an exception into the pending yield expression\n\t\tconst _this = this;\n\t\treturn _this._promise = new Promise(function (resolve, reject) {\n\t\t\tconst _pact = _this._pact;\n\t\t\tif (_pact === null) {\n\t\t\t\tif (_this._entry === null) {\n\t\t\t\t\t// Generator is started, but not awaiting a yield expression\n\t\t\t\t\t// Abandon the throw call!\n\t\t\t\t\treturn resolve(_this._promise);\n\t\t\t\t}\n\t\t\t\t// Generator is not started, abandon it and return a rejected Promise containing the error\n\t\t\t\t_this._entry = null;\n\t\t\t\treturn reject(error);\n\t\t\t}\n\t\t\t// Settle the yield expression with the value as a rejection\n\t\t\t_this._resolve = resolve;\n\t\t\t_this._pact = null;\n\t\t\t_settle(_pact, 2, error);\n\t\t});\n\t};\n\n\t_AsyncGenerator.prototype[_asyncIteratorSymbol] = function() {\n\t\treturn this;\n\t};\n\t\n\treturn _AsyncGenerator;\n})();\n","import React from \"react\";\nimport { BarTask } from \"../../types/bar-task\";\n\ntype ArrowProps = {\n  taskFrom: BarTask;\n  taskTo: BarTask;\n  rowHeight: number;\n  taskHeight: number;\n  arrowIndent: number;\n  rtl: boolean;\n};\nexport const Arrow: React.FC<ArrowProps> = ({\n  taskFrom,\n  taskTo,\n  rowHeight,\n  taskHeight,\n  arrowIndent,\n  rtl,\n}) => {\n  let path: string;\n  let trianglePoints: string;\n  if (rtl) {\n    [path, trianglePoints] = drownPathAndTriangleRTL(\n      taskFrom,\n      taskTo,\n      rowHeight,\n      taskHeight,\n      arrowIndent\n    );\n  } else {\n    [path, trianglePoints] = drownPathAndTriangle(\n      taskFrom,\n      taskTo,\n      rowHeight,\n      taskHeight,\n      arrowIndent\n    );\n  }\n\n  return (\n    <g className=\"arrow\">\n      <path strokeWidth=\"1.5\" d={path} fill=\"none\" />\n      <polygon points={trianglePoints} />\n    </g>\n  );\n};\n\nconst drownPathAndTriangle = (\n  taskFrom: BarTask,\n  taskTo: BarTask,\n  rowHeight: number,\n  taskHeight: number,\n  arrowIndent: number\n) => {\n  const indexCompare = taskFrom.index > taskTo.index ? -1 : 1;\n  const taskToEndPosition = taskTo.y + taskHeight / 2;\n  const taskFromEndPosition = taskFrom.x2 + arrowIndent * 2;\n  const taskFromHorizontalOffsetValue =\n    taskFromEndPosition < taskTo.x1 ? \"\" : `H ${taskTo.x1 - arrowIndent}`;\n  const taskToHorizontalOffsetValue =\n    taskFromEndPosition > taskTo.x1\n      ? arrowIndent\n      : taskTo.x1 - taskFrom.x2 - arrowIndent;\n\n  const path = `M ${taskFrom.x2} ${taskFrom.y + taskHeight / 2} \n  h ${arrowIndent} \n  v ${(indexCompare * rowHeight) / 2} \n  ${taskFromHorizontalOffsetValue}\n  V ${taskToEndPosition} \n  h ${taskToHorizontalOffsetValue}`;\n\n  const trianglePoints = `${taskTo.x1},${taskToEndPosition} \n  ${taskTo.x1 - 5},${taskToEndPosition - 5} \n  ${taskTo.x1 - 5},${taskToEndPosition + 5}`;\n  return [path, trianglePoints];\n};\n\nconst drownPathAndTriangleRTL = (\n  taskFrom: BarTask,\n  taskTo: BarTask,\n  rowHeight: number,\n  taskHeight: number,\n  arrowIndent: number\n) => {\n  const indexCompare = taskFrom.index > taskTo.index ? -1 : 1;\n  const taskToEndPosition = taskTo.y + taskHeight / 2;\n  const taskFromEndPosition = taskFrom.x1 - arrowIndent * 2;\n  const taskFromHorizontalOffsetValue =\n    taskFromEndPosition > taskTo.x2 ? \"\" : `H ${taskTo.x2 + arrowIndent}`;\n  const taskToHorizontalOffsetValue =\n    taskFromEndPosition < taskTo.x2\n      ? -arrowIndent\n      : taskTo.x2 - taskFrom.x1 + arrowIndent;\n\n  const path = `M ${taskFrom.x1} ${taskFrom.y + taskHeight / 2} \n  h ${-arrowIndent} \n  v ${(indexCompare * rowHeight) / 2} \n  ${taskFromHorizontalOffsetValue}\n  V ${taskToEndPosition} \n  h ${taskToHorizontalOffsetValue}`;\n\n  const trianglePoints = `${taskTo.x2},${taskToEndPosition} \n  ${taskTo.x2 + 5},${taskToEndPosition + 5} \n  ${taskTo.x2 + 5},${taskToEndPosition - 5}`;\n  return [path, trianglePoints];\n};\n","import { Task } from \"../types/public-types\";\nimport { BarTask, TaskTypeInternal } from \"../types/bar-task\";\nimport { BarMoveAction } from \"../types/gantt-task-actions\";\n\nexport const convertToBarTasks = (\n  tasks: Task[],\n  dates: Date[],\n  columnWidth: number,\n  rowHeight: number,\n  taskHeight: number,\n  barCornerRadius: number,\n  handleWidth: number,\n  rtl: boolean,\n  barProgressColor: string,\n  barProgressSelectedColor: string,\n  barBackgroundColor: string,\n  barBackgroundSelectedColor: string,\n  projectProgressColor: string,\n  projectProgressSelectedColor: string,\n  projectBackgroundColor: string,\n  projectBackgroundSelectedColor: string,\n  milestoneBackgroundColor: string,\n  milestoneBackgroundSelectedColor: string\n) => {\n  let barTasks = tasks.map((t, i) => {\n    return convertToBarTask(\n      t,\n      i,\n      dates,\n      columnWidth,\n      rowHeight,\n      taskHeight,\n      barCornerRadius,\n      handleWidth,\n      rtl,\n      barProgressColor,\n      barProgressSelectedColor,\n      barBackgroundColor,\n      barBackgroundSelectedColor,\n      projectProgressColor,\n      projectProgressSelectedColor,\n      projectBackgroundColor,\n      projectBackgroundSelectedColor,\n      milestoneBackgroundColor,\n      milestoneBackgroundSelectedColor\n    );\n  });\n\n  // set dependencies\n  barTasks = barTasks.map(task => {\n    const dependencies = task.dependencies || [];\n    for (let j = 0; j < dependencies.length; j++) {\n      const dependence = barTasks.findIndex(\n        value => value.id === dependencies[j]\n      );\n      if (dependence !== -1) barTasks[dependence].barChildren.push(task);\n    }\n    return task;\n  });\n\n  return barTasks;\n};\n\nconst convertToBarTask = (\n  task: Task,\n  index: number,\n  dates: Date[],\n  columnWidth: number,\n  rowHeight: number,\n  taskHeight: number,\n  barCornerRadius: number,\n  handleWidth: number,\n  rtl: boolean,\n  barProgressColor: string,\n  barProgressSelectedColor: string,\n  barBackgroundColor: string,\n  barBackgroundSelectedColor: string,\n  projectProgressColor: string,\n  projectProgressSelectedColor: string,\n  projectBackgroundColor: string,\n  projectBackgroundSelectedColor: string,\n  milestoneBackgroundColor: string,\n  milestoneBackgroundSelectedColor: string\n): BarTask => {\n  let barTask: BarTask;\n  switch (task.type) {\n    case \"milestone\":\n      barTask = convertToMilestone(\n        task,\n        index,\n        dates,\n        columnWidth,\n        rowHeight,\n        taskHeight,\n        barCornerRadius,\n        handleWidth,\n        milestoneBackgroundColor,\n        milestoneBackgroundSelectedColor\n      );\n      break;\n    case \"project\":\n      barTask = convertToBar(\n        task,\n        index,\n        dates,\n        columnWidth,\n        rowHeight,\n        taskHeight,\n        barCornerRadius,\n        handleWidth,\n        rtl,\n        projectProgressColor,\n        projectProgressSelectedColor,\n        projectBackgroundColor,\n        projectBackgroundSelectedColor\n      );\n      break;\n    default:\n      barTask = convertToBar(\n        task,\n        index,\n        dates,\n        columnWidth,\n        rowHeight,\n        taskHeight,\n        barCornerRadius,\n        handleWidth,\n        rtl,\n        barProgressColor,\n        barProgressSelectedColor,\n        barBackgroundColor,\n        barBackgroundSelectedColor\n      );\n      break;\n  }\n  return barTask;\n};\n\nconst convertToBar = (\n  task: Task,\n  index: number,\n  dates: Date[],\n  columnWidth: number,\n  rowHeight: number,\n  taskHeight: number,\n  barCornerRadius: number,\n  handleWidth: number,\n  rtl: boolean,\n  barProgressColor: string,\n  barProgressSelectedColor: string,\n  barBackgroundColor: string,\n  barBackgroundSelectedColor: string\n): BarTask => {\n  let x1: number;\n  let x2: number;\n  if (rtl) {\n    x2 = taskXCoordinateRTL(task.start, dates, columnWidth);\n    x1 = taskXCoordinateRTL(task.end, dates, columnWidth);\n  } else {\n    x1 = taskXCoordinate(task.start, dates, columnWidth);\n    x2 = taskXCoordinate(task.end, dates, columnWidth);\n  }\n  let typeInternal: TaskTypeInternal = task.type;\n  if (typeInternal === \"task\" && x2 - x1 < handleWidth * 2) {\n    typeInternal = \"smalltask\";\n    x2 = x1 + handleWidth * 2;\n  }\n\n  const [progressWidth, progressX] = progressWithByParams(\n    x1,\n    x2,\n    task.progress,\n    rtl\n  );\n  const y = taskYCoordinate(index, rowHeight, taskHeight);\n  const hideChildren = task.type === \"project\" ? task.hideChildren : undefined;\n\n  const styles = {\n    backgroundColor: barBackgroundColor,\n    backgroundSelectedColor: barBackgroundSelectedColor,\n    progressColor: barProgressColor,\n    progressSelectedColor: barProgressSelectedColor,\n    ...task.styles,\n  };\n  return {\n    ...task,\n    typeInternal,\n    x1,\n    x2,\n    y,\n    index,\n    progressX,\n    progressWidth,\n    barCornerRadius,\n    handleWidth,\n    hideChildren,\n    height: taskHeight,\n    barChildren: [],\n    styles,\n  };\n};\n\nconst convertToMilestone = (\n  task: Task,\n  index: number,\n  dates: Date[],\n  columnWidth: number,\n  rowHeight: number,\n  taskHeight: number,\n  barCornerRadius: number,\n  handleWidth: number,\n  milestoneBackgroundColor: string,\n  milestoneBackgroundSelectedColor: string\n): BarTask => {\n  const x = taskXCoordinate(task.start, dates, columnWidth);\n  const y = taskYCoordinate(index, rowHeight, taskHeight);\n\n  const x1 = x - taskHeight * 0.5;\n  const x2 = x + taskHeight * 0.5;\n\n  const rotatedHeight = taskHeight / 1.414;\n  const styles = {\n    backgroundColor: milestoneBackgroundColor,\n    backgroundSelectedColor: milestoneBackgroundSelectedColor,\n    progressColor: \"\",\n    progressSelectedColor: \"\",\n    ...task.styles,\n  };\n  return {\n    ...task,\n    end: task.start,\n    x1,\n    x2,\n    y,\n    index,\n    progressX: 0,\n    progressWidth: 0,\n    barCornerRadius,\n    handleWidth,\n    typeInternal: task.type,\n    progress: 0,\n    height: rotatedHeight,\n    hideChildren: undefined,\n    barChildren: [],\n    styles,\n  };\n};\n\nconst taskXCoordinate = (xDate: Date, dates: Date[], columnWidth: number) => {\n  const index = dates.findIndex(d => d.getTime() >= xDate.getTime()) - 1;\n\n  const remainderMillis = xDate.getTime() - dates[index].getTime();\n  const percentOfInterval =\n    remainderMillis / (dates[index + 1].getTime() - dates[index].getTime());\n  const x = index * columnWidth + percentOfInterval * columnWidth;\n  return x;\n};\nconst taskXCoordinateRTL = (\n  xDate: Date,\n  dates: Date[],\n  columnWidth: number\n) => {\n  let x = taskXCoordinate(xDate, dates, columnWidth);\n  x += columnWidth;\n  return x;\n};\nconst taskYCoordinate = (\n  index: number,\n  rowHeight: number,\n  taskHeight: number\n) => {\n  const y = index * rowHeight + (rowHeight - taskHeight) / 2;\n  return y;\n};\n\nexport const progressWithByParams = (\n  taskX1: number,\n  taskX2: number,\n  progress: number,\n  rtl: boolean\n) => {\n  const progressWidth = (taskX2 - taskX1) * progress * 0.01;\n  let progressX: number;\n  if (rtl) {\n    progressX = taskX2 - progressWidth;\n  } else {\n    progressX = taskX1;\n  }\n  return [progressWidth, progressX];\n};\n\nexport const progressByProgressWidth = (\n  progressWidth: number,\n  barTask: BarTask\n) => {\n  const barWidth = barTask.x2 - barTask.x1;\n  const progressPercent = Math.round((progressWidth * 100) / barWidth);\n  if (progressPercent >= 100) return 100;\n  else if (progressPercent <= 0) return 0;\n  else return progressPercent;\n};\n\nconst progressByX = (x: number, task: BarTask) => {\n  if (x >= task.x2) return 100;\n  else if (x <= task.x1) return 0;\n  else {\n    const barWidth = task.x2 - task.x1;\n    const progressPercent = Math.round(((x - task.x1) * 100) / barWidth);\n    return progressPercent;\n  }\n};\nconst progressByXRTL = (x: number, task: BarTask) => {\n  if (x >= task.x2) return 0;\n  else if (x <= task.x1) return 100;\n  else {\n    const barWidth = task.x2 - task.x1;\n    const progressPercent = Math.round(((task.x2 - x) * 100) / barWidth);\n    return progressPercent;\n  }\n};\n\nexport const getProgressPoint = (\n  progressX: number,\n  taskY: number,\n  taskHeight: number\n) => {\n  const point = [\n    progressX - 5,\n    taskY + taskHeight,\n    progressX + 5,\n    taskY + taskHeight,\n    progressX,\n    taskY + taskHeight - 8.66,\n  ];\n  return point.join(\",\");\n};\n\nconst startByX = (x: number, xStep: number, task: BarTask) => {\n  if (x >= task.x2 - task.handleWidth * 2) {\n    x = task.x2 - task.handleWidth * 2;\n  }\n  const steps = Math.round((x - task.x1) / xStep);\n  const additionalXValue = steps * xStep;\n  const newX = task.x1 + additionalXValue;\n  return newX;\n};\n\nconst endByX = (x: number, xStep: number, task: BarTask) => {\n  if (x <= task.x1 + task.handleWidth * 2) {\n    x = task.x1 + task.handleWidth * 2;\n  }\n  const steps = Math.round((x - task.x2) / xStep);\n  const additionalXValue = steps * xStep;\n  const newX = task.x2 + additionalXValue;\n  return newX;\n};\n\nconst moveByX = (x: number, xStep: number, task: BarTask) => {\n  const steps = Math.round((x - task.x1) / xStep);\n  const additionalXValue = steps * xStep;\n  const newX1 = task.x1 + additionalXValue;\n  const newX2 = newX1 + task.x2 - task.x1;\n  return [newX1, newX2];\n};\n\nconst dateByX = (\n  x: number,\n  taskX: number,\n  taskDate: Date,\n  xStep: number,\n  timeStep: number\n) => {\n  let newDate = new Date(((x - taskX) / xStep) * timeStep + taskDate.getTime());\n  newDate = new Date(\n    newDate.getTime() +\n      (newDate.getTimezoneOffset() - taskDate.getTimezoneOffset()) * 60000\n  );\n  return newDate;\n};\n\n/**\n * Method handles event in real time(mousemove) and on finish(mouseup)\n */\nexport const handleTaskBySVGMouseEvent = (\n  svgX: number,\n  action: BarMoveAction,\n  selectedTask: BarTask,\n  xStep: number,\n  timeStep: number,\n  initEventX1Delta: number,\n  rtl: boolean\n): { isChanged: boolean; changedTask: BarTask } => {\n  let result: { isChanged: boolean; changedTask: BarTask };\n  switch (selectedTask.type) {\n    case \"milestone\":\n      result = handleTaskBySVGMouseEventForMilestone(\n        svgX,\n        action,\n        selectedTask,\n        xStep,\n        timeStep,\n        initEventX1Delta\n      );\n      break;\n    default:\n      result = handleTaskBySVGMouseEventForBar(\n        svgX,\n        action,\n        selectedTask,\n        xStep,\n        timeStep,\n        initEventX1Delta,\n        rtl\n      );\n      break;\n  }\n  return result;\n};\n\nconst handleTaskBySVGMouseEventForBar = (\n  svgX: number,\n  action: BarMoveAction,\n  selectedTask: BarTask,\n  xStep: number,\n  timeStep: number,\n  initEventX1Delta: number,\n  rtl: boolean\n): { isChanged: boolean; changedTask: BarTask } => {\n  const changedTask: BarTask = { ...selectedTask };\n  let isChanged = false;\n  switch (action) {\n    case \"progress\":\n      if (rtl) {\n        changedTask.progress = progressByXRTL(svgX, selectedTask);\n      } else {\n        changedTask.progress = progressByX(svgX, selectedTask);\n      }\n      isChanged = changedTask.progress !== selectedTask.progress;\n      if (isChanged) {\n        const [progressWidth, progressX] = progressWithByParams(\n          changedTask.x1,\n          changedTask.x2,\n          changedTask.progress,\n          rtl\n        );\n        changedTask.progressWidth = progressWidth;\n        changedTask.progressX = progressX;\n      }\n      break;\n    case \"start\": {\n      const newX1 = startByX(svgX, xStep, selectedTask);\n      changedTask.x1 = newX1;\n      isChanged = changedTask.x1 !== selectedTask.x1;\n      if (isChanged) {\n        if (rtl) {\n          changedTask.end = dateByX(\n            newX1,\n            selectedTask.x1,\n            selectedTask.end,\n            xStep,\n            timeStep\n          );\n        } else {\n          changedTask.start = dateByX(\n            newX1,\n            selectedTask.x1,\n            selectedTask.start,\n            xStep,\n            timeStep\n          );\n        }\n        const [progressWidth, progressX] = progressWithByParams(\n          changedTask.x1,\n          changedTask.x2,\n          changedTask.progress,\n          rtl\n        );\n        changedTask.progressWidth = progressWidth;\n        changedTask.progressX = progressX;\n      }\n      break;\n    }\n    case \"end\": {\n      const newX2 = endByX(svgX, xStep, selectedTask);\n      changedTask.x2 = newX2;\n      isChanged = changedTask.x2 !== selectedTask.x2;\n      if (isChanged) {\n        if (rtl) {\n          changedTask.start = dateByX(\n            newX2,\n            selectedTask.x2,\n            selectedTask.start,\n            xStep,\n            timeStep\n          );\n        } else {\n          changedTask.end = dateByX(\n            newX2,\n            selectedTask.x2,\n            selectedTask.end,\n            xStep,\n            timeStep\n          );\n        }\n        const [progressWidth, progressX] = progressWithByParams(\n          changedTask.x1,\n          changedTask.x2,\n          changedTask.progress,\n          rtl\n        );\n        changedTask.progressWidth = progressWidth;\n        changedTask.progressX = progressX;\n      }\n      break;\n    }\n    case \"move\": {\n      const [newMoveX1, newMoveX2] = moveByX(\n        svgX - initEventX1Delta,\n        xStep,\n        selectedTask\n      );\n      isChanged = newMoveX1 !== selectedTask.x1;\n      if (isChanged) {\n        changedTask.start = dateByX(\n          newMoveX1,\n          selectedTask.x1,\n          selectedTask.start,\n          xStep,\n          timeStep\n        );\n        changedTask.end = dateByX(\n          newMoveX2,\n          selectedTask.x2,\n          selectedTask.end,\n          xStep,\n          timeStep\n        );\n        changedTask.x1 = newMoveX1;\n        changedTask.x2 = newMoveX2;\n        const [progressWidth, progressX] = progressWithByParams(\n          changedTask.x1,\n          changedTask.x2,\n          changedTask.progress,\n          rtl\n        );\n        changedTask.progressWidth = progressWidth;\n        changedTask.progressX = progressX;\n      }\n      break;\n    }\n  }\n  return { isChanged, changedTask };\n};\n\nconst handleTaskBySVGMouseEventForMilestone = (\n  svgX: number,\n  action: BarMoveAction,\n  selectedTask: BarTask,\n  xStep: number,\n  timeStep: number,\n  initEventX1Delta: number\n): { isChanged: boolean; changedTask: BarTask } => {\n  const changedTask: BarTask = { ...selectedTask };\n  let isChanged = false;\n  switch (action) {\n    case \"move\": {\n      const [newMoveX1, newMoveX2] = moveByX(\n        svgX - initEventX1Delta,\n        xStep,\n        selectedTask\n      );\n      isChanged = newMoveX1 !== selectedTask.x1;\n      if (isChanged) {\n        changedTask.start = dateByX(\n          newMoveX1,\n          selectedTask.x1,\n          selectedTask.start,\n          xStep,\n          timeStep\n        );\n        changedTask.end = changedTask.start;\n        changedTask.x1 = newMoveX1;\n        changedTask.x2 = newMoveX2;\n      }\n      break;\n    }\n  }\n  return { isChanged, changedTask };\n};\n","import { BarTask } from \"../types/bar-task\";\nimport { Task } from \"../types/public-types\";\n\nexport function isKeyboardEvent(\n  event: React.MouseEvent | React.KeyboardEvent | React.FocusEvent\n): event is React.KeyboardEvent {\n  return (event as React.KeyboardEvent).key !== undefined;\n}\n\nexport function isMouseEvent(\n  event: React.MouseEvent | React.KeyboardEvent | React.FocusEvent\n): event is React.MouseEvent {\n  return (event as React.MouseEvent).clientX !== undefined;\n}\n\nexport function isBarTask(task: Task | BarTask): task is BarTask {\n  return (task as BarTask).x1 !== undefined;\n}\n\nexport function removeHiddenTasks(tasks: Task[]) {\n  const groupedTasks = tasks.filter(\n    t => t.hideChildren && t.type === \"project\"\n  );\n  if (groupedTasks.length > 0) {\n    for (let i = 0; groupedTasks.length > i; i++) {\n      const groupedTask = groupedTasks[i];\n      const children = getChildren(tasks, groupedTask);\n      tasks = tasks.filter(t => children.indexOf(t) === -1);\n    }\n  }\n  return tasks;\n}\n\nfunction getChildren(taskList: Task[], task: Task) {\n  let tasks: Task[] = [];\n  if (task.type !== \"project\") {\n    tasks = taskList.filter(\n      t => t.dependencies && t.dependencies.indexOf(task.id) !== -1\n    );\n  } else {\n    tasks = taskList.filter(t => t.project && t.project === task.id);\n  }\n  var taskChildren: Task[] = [];\n  tasks.forEach(t => {\n    taskChildren.push(...getChildren(taskList, t));\n  })\n  tasks = tasks.concat(tasks, taskChildren);\n  return tasks;\n}\n\nexport const sortTasks = (taskA: Task, taskB: Task) => {\n  const orderA = taskA.displayOrder || Number.MAX_VALUE;\n  const orderB = taskB.displayOrder || Number.MAX_VALUE;\n  if (orderA > orderB) {\n    return 1;\n  } else if (orderA < orderB) {\n    return -1;\n  } else {\n    return 0;\n  }\n};\n","import React from \"react\";\nimport style from \"./bar.module.css\";\n\ntype BarDisplayProps = {\n  x: number;\n  y: number;\n  width: number;\n  height: number;\n  isSelected: boolean;\n  /* progress start point */\n  progressX: number;\n  progressWidth: number;\n  barCornerRadius: number;\n  styles: {\n    backgroundColor: string;\n    backgroundSelectedColor: string;\n    progressColor: string;\n    progressSelectedColor: string;\n  };\n  onMouseDown: (event: React.MouseEvent<SVGPolygonElement, MouseEvent>) => void;\n};\nexport const BarDisplay: React.FC<BarDisplayProps> = ({\n  x,\n  y,\n  width,\n  height,\n  isSelected,\n  progressX,\n  progressWidth,\n  barCornerRadius,\n  styles,\n  onMouseDown,\n}) => {\n  const getProcessColor = () => {\n    return isSelected ? styles.progressSelectedColor : styles.progressColor;\n  };\n\n  const getBarColor = () => {\n    return isSelected ? styles.backgroundSelectedColor : styles.backgroundColor;\n  };\n\n  return (\n    <g onMouseDown={onMouseDown}>\n      <rect\n        x={x}\n        width={width}\n        y={y}\n        height={height}\n        ry={barCornerRadius}\n        rx={barCornerRadius}\n        fill={getBarColor()}\n        className={style.barBackground}\n      />\n      <rect\n        x={progressX}\n        width={progressWidth}\n        y={y}\n        height={height}\n        ry={barCornerRadius}\n        rx={barCornerRadius}\n        fill={getProcessColor()}\n      />\n    </g>\n  );\n};\n","import React from \"react\";\nimport styles from \"./bar.module.css\";\n\ntype BarDateHandleProps = {\n  x: number;\n  y: number;\n  width: number;\n  height: number;\n  barCornerRadius: number;\n  onMouseDown: (event: React.MouseEvent<SVGRectElement, MouseEvent>) => void;\n};\nexport const BarDateHandle: React.FC<BarDateHandleProps> = ({\n  x,\n  y,\n  width,\n  height,\n  barCornerRadius,\n  onMouseDown,\n}) => {\n  return (\n    <rect\n      x={x}\n      y={y}\n      width={width}\n      height={height}\n      className={styles.barHandle}\n      ry={barCornerRadius}\n      rx={barCornerRadius}\n      onMouseDown={onMouseDown}\n    />\n  );\n};\n","import React from \"react\";\nimport styles from \"./bar.module.css\";\n\ntype BarProgressHandleProps = {\n  progressPoint: string;\n  onMouseDown: (event: React.MouseEvent<SVGPolygonElement, MouseEvent>) => void;\n};\nexport const BarProgressHandle: React.FC<BarProgressHandleProps> = ({\n  progressPoint,\n  onMouseDown,\n}) => {\n  return (\n    <polygon\n      className={styles.barHandle}\n      points={progressPoint}\n      onMouseDown={onMouseDown}\n    />\n  );\n};\n","import React from \"react\";\nimport { getProgressPoint } from \"../../../helpers/bar-helper\";\nimport { BarDisplay } from \"./bar-display\";\nimport { BarDateHandle } from \"./bar-date-handle\";\nimport { BarProgressHandle } from \"./bar-progress-handle\";\nimport { TaskItemProps } from \"../task-item\";\nimport styles from \"./bar.module.css\";\n\nexport const Bar: React.FC<TaskItemProps> = ({\n  task,\n  isProgressChangeable,\n  isDateChangeable,\n  rtl,\n  onEventStart,\n  isSelected,\n}) => {\n  const progressPoint = getProgressPoint(\n    +!rtl * task.progressWidth + task.progressX,\n    task.y,\n    task.height\n  );\n  const handleHeight = task.height - 2;\n  return (\n    <g className={styles.barWrapper} tabIndex={0}>\n      <BarDisplay\n        x={task.x1}\n        y={task.y}\n        width={task.x2 - task.x1}\n        height={task.height}\n        progressX={task.progressX}\n        progressWidth={task.progressWidth}\n        barCornerRadius={task.barCornerRadius}\n        styles={task.styles}\n        isSelected={isSelected}\n        onMouseDown={e => {\n          isDateChangeable && onEventStart(\"move\", task, e);\n        }}\n      />\n      <g className=\"handleGroup\">\n        {isDateChangeable && (\n          <g>\n            {/* left */}\n            <BarDateHandle\n              x={task.x1 + 1}\n              y={task.y + 1}\n              width={task.handleWidth}\n              height={handleHeight}\n              barCornerRadius={task.barCornerRadius}\n              onMouseDown={e => {\n                onEventStart(\"start\", task, e);\n              }}\n            />\n            {/* right */}\n            <BarDateHandle\n              x={task.x2 - task.handleWidth - 1}\n              y={task.y + 1}\n              width={task.handleWidth}\n              height={handleHeight}\n              barCornerRadius={task.barCornerRadius}\n              onMouseDown={e => {\n                onEventStart(\"end\", task, e);\n              }}\n            />\n          </g>\n        )}\n        {isProgressChangeable && (\n          <BarProgressHandle\n            progressPoint={progressPoint}\n            onMouseDown={e => {\n              onEventStart(\"progress\", task, e);\n            }}\n          />\n        )}\n      </g>\n    </g>\n  );\n};\n","import React from \"react\";\nimport { getProgressPoint } from \"../../../helpers/bar-helper\";\nimport { BarDisplay } from \"./bar-display\";\nimport { BarProgressHandle } from \"./bar-progress-handle\";\nimport { TaskItemProps } from \"../task-item\";\nimport styles from \"./bar.module.css\";\n\nexport const BarSmall: React.FC<TaskItemProps> = ({\n  task,\n  isProgressChangeable,\n  isDateChangeable,\n  onEventStart,\n  isSelected,\n}) => {\n  const progressPoint = getProgressPoint(\n    task.progressWidth + task.x1,\n    task.y,\n    task.height\n  );\n  return (\n    <g className={styles.barWrapper} tabIndex={0}>\n      <BarDisplay\n        x={task.x1}\n        y={task.y}\n        width={task.x2 - task.x1}\n        height={task.height}\n        progressX={task.progressX}\n        progressWidth={task.progressWidth}\n        barCornerRadius={task.barCornerRadius}\n        styles={task.styles}\n        isSelected={isSelected}\n        onMouseDown={e => {\n          isDateChangeable && onEventStart(\"move\", task, e);\n        }}\n      />\n      <g className=\"handleGroup\">\n        {isProgressChangeable && (\n          <BarProgressHandle\n            progressPoint={progressPoint}\n            onMouseDown={e => {\n              onEventStart(\"progress\", task, e);\n            }}\n          />\n        )}\n      </g>\n    </g>\n  );\n};\n","import React from \"react\";\nimport { TaskItemProps } from \"../task-item\";\nimport styles from \"./milestone.module.css\";\n\nexport const Milestone: React.FC<TaskItemProps> = ({\n  task,\n  isDateChangeable,\n  onEventStart,\n  isSelected,\n}) => {\n  const transform = `rotate(45 ${task.x1 + task.height * 0.356} \n    ${task.y + task.height * 0.85})`;\n  const getBarColor = () => {\n    return isSelected\n      ? task.styles.backgroundSelectedColor\n      : task.styles.backgroundColor;\n  };\n\n  return (\n    <g tabIndex={0} className={styles.milestoneWrapper}>\n      <rect\n        fill={getBarColor()}\n        x={task.x1}\n        width={task.height}\n        y={task.y}\n        height={task.height}\n        rx={task.barCornerRadius}\n        ry={task.barCornerRadius}\n        transform={transform}\n        className={styles.milestoneBackground}\n        onMouseDown={e => {\n          isDateChangeable && onEventStart(\"move\", task, e);\n        }}\n      />\n    </g>\n  );\n};\n","import React from \"react\";\nimport { TaskItemProps } from \"../task-item\";\nimport styles from \"./project.module.css\";\n\nexport const Project: React.FC<TaskItemProps> = ({ task, isSelected }) => {\n  const barColor = isSelected\n    ? task.styles.backgroundSelectedColor\n    : task.styles.backgroundColor;\n  const processColor = isSelected\n    ? task.styles.progressSelectedColor\n    : task.styles.progressColor;\n  const projectWith = task.x2 - task.x1;\n\n  const projectLeftTriangle = [\n    task.x1,\n    task.y + task.height / 2 - 1,\n    task.x1,\n    task.y + task.height,\n    task.x1 + 15,\n    task.y + task.height / 2 - 1,\n  ].join(\",\");\n  const projectRightTriangle = [\n    task.x2,\n    task.y + task.height / 2 - 1,\n    task.x2,\n    task.y + task.height,\n    task.x2 - 15,\n    task.y + task.height / 2 - 1,\n  ].join(\",\");\n\n  return (\n    <g tabIndex={0} className={styles.projectWrapper}>\n      <rect\n        fill={barColor}\n        x={task.x1}\n        width={projectWith}\n        y={task.y}\n        height={task.height}\n        rx={task.barCornerRadius}\n        ry={task.barCornerRadius}\n        className={styles.projectBackground}\n      />\n      <rect\n        x={task.progressX}\n        width={task.progressWidth}\n        y={task.y}\n        height={task.height}\n        ry={task.barCornerRadius}\n        rx={task.barCornerRadius}\n        fill={processColor}\n      />\n      <rect\n        fill={barColor}\n        x={task.x1}\n        width={projectWith}\n        y={task.y}\n        height={task.height / 2}\n        rx={task.barCornerRadius}\n        ry={task.barCornerRadius}\n        className={styles.projectTop}\n      />\n      <polygon\n        className={styles.projectTop}\n        points={projectLeftTriangle}\n        fill={barColor}\n      />\n      <polygon\n        className={styles.projectTop}\n        points={projectRightTriangle}\n        fill={barColor}\n      />\n    </g>\n  );\n};\n","import React, { useEffect, useRef, useState } from \"react\";\nimport { BarTask } from \"../../types/bar-task\";\nimport { GanttContentMoveAction } from \"../../types/gantt-task-actions\";\nimport { Bar } from \"./bar/bar\";\nimport { BarSmall } from \"./bar/bar-small\";\nimport { Milestone } from \"./milestone/milestone\";\nimport { Project } from \"./project/project\";\nimport style from \"./task-list.module.css\";\n\nexport type TaskItemProps = {\n  task: BarTask;\n  arrowIndent: number;\n  taskHeight: number;\n  isProgressChangeable: boolean;\n  isDateChangeable: boolean;\n  isDelete: boolean;\n  isSelected: boolean;\n  rtl: boolean;\n  onEventStart: (\n    action: GanttContentMoveAction,\n    selectedTask: BarTask,\n    event?: React.MouseEvent | React.KeyboardEvent\n  ) => any;\n};\n\nexport const TaskItem: React.FC<TaskItemProps> = props => {\n  const {\n    task,\n    arrowIndent,\n    isDelete,\n    taskHeight,\n    isSelected,\n    rtl,\n    onEventStart,\n  } = {\n    ...props,\n  };\n  const textRef = useRef<SVGTextElement>(null);\n  const [taskItem, setTaskItem] = useState<JSX.Element>(<div />);\n  const [isTextInside, setIsTextInside] = useState(true);\n\n  useEffect(() => {\n    switch (task.typeInternal) {\n      case \"milestone\":\n        setTaskItem(<Milestone {...props} />);\n        break;\n      case \"project\":\n        setTaskItem(<Project {...props} />);\n        break;\n      case \"smalltask\":\n        setTaskItem(<BarSmall {...props} />);\n        break;\n      default:\n        setTaskItem(<Bar {...props} />);\n        break;\n    }\n  }, [task, isSelected]);\n\n  useEffect(() => {\n    if (textRef.current) {\n      setIsTextInside(textRef.current.getBBox().width < task.x2 - task.x1);\n    }\n  }, [textRef, task]);\n\n  const getX = () => {\n    const width = task.x2 - task.x1;\n    const hasChild = task.barChildren.length > 0;\n    if (isTextInside) {\n      return task.x1 + width * 0.5;\n    }\n    if (rtl && textRef.current) {\n      return (\n        task.x1 -\n        textRef.current.getBBox().width -\n        arrowIndent * +hasChild -\n        arrowIndent * 0.2\n      );\n    } else {\n      return task.x1 + width + arrowIndent * +hasChild + arrowIndent * 0.2;\n    }\n  };\n\n  return (\n    <g\n      onKeyDown={e => {\n        switch (e.key) {\n          case \"Delete\": {\n            if (isDelete) onEventStart(\"delete\", task, e);\n            break;\n          }\n        }\n        e.stopPropagation();\n      }}\n      onMouseEnter={e => {\n        onEventStart(\"mouseenter\", task, e);\n      }}\n      onMouseLeave={e => {\n        onEventStart(\"mouseleave\", task, e);\n      }}\n      onDoubleClick={e => {\n        onEventStart(\"dblclick\", task, e);\n      }}\n      onClick={e => {\n        onEventStart(\"click\", task, e);\n      }}\n      onFocus={() => {\n        onEventStart(\"select\", task);\n      }}\n    >\n      {taskItem}\n      <text\n        x={getX()}\n        y={task.y + taskHeight * 0.5}\n        className={\n          isTextInside\n            ? style.barLabel\n            : style.barLabel && style.barLabelOutside\n        }\n        ref={textRef}\n      >\n        {task.name}\n      </text>\n    </g>\n  );\n};\n","import React, { useEffect, useState } from \"react\";\nimport { EventOption } from \"../../types/public-types\";\nimport { BarTask } from \"../../types/bar-task\";\nimport { Arrow } from \"../other/arrow\";\nimport { handleTaskBySVGMouseEvent } from \"../../helpers/bar-helper\";\nimport { isKeyboardEvent } from \"../../helpers/other-helper\";\nimport { TaskItem } from \"../task-item/task-item\";\nimport {\n  BarMoveAction,\n  GanttContentMoveAction,\n  GanttEvent,\n} from \"../../types/gantt-task-actions\";\n\nexport type TaskGanttContentProps = {\n  tasks: BarTask[];\n  dates: Date[];\n  ganttEvent: GanttEvent;\n  selectedTask: BarTask | undefined;\n  rowHeight: number;\n  columnWidth: number;\n  timeStep: number;\n  svg?: React.RefObject<SVGSVGElement>;\n  svgWidth: number;\n  taskHeight: number;\n  arrowColor: string;\n  arrowIndent: number;\n  fontSize: string;\n  fontFamily: string;\n  rtl: boolean;\n  setGanttEvent: (value: GanttEvent) => void;\n  setFailedTask: (value: BarTask | null) => void;\n  setSelectedTask: (taskId: string) => void;\n} & EventOption;\n\nexport const TaskGanttContent: React.FC<TaskGanttContentProps> = ({\n  tasks,\n  dates,\n  ganttEvent,\n  selectedTask,\n  rowHeight,\n  columnWidth,\n  timeStep,\n  svg,\n  taskHeight,\n  arrowColor,\n  arrowIndent,\n  fontFamily,\n  fontSize,\n  rtl,\n  setGanttEvent,\n  setFailedTask,\n  setSelectedTask,\n  onDateChange,\n  onProgressChange,\n  onDoubleClick,\n  onClick,\n  onDelete,\n}) => {\n  const point = svg?.current?.createSVGPoint();\n  const [xStep, setXStep] = useState(0);\n  const [initEventX1Delta, setInitEventX1Delta] = useState(0);\n  const [isMoving, setIsMoving] = useState(false);\n\n  // create xStep\n  useEffect(() => {\n    const dateDelta =\n      dates[1].getTime() -\n      dates[0].getTime() -\n      dates[1].getTimezoneOffset() * 60 * 1000 +\n      dates[0].getTimezoneOffset() * 60 * 1000;\n    const newXStep = (timeStep * columnWidth) / dateDelta;\n    setXStep(newXStep);\n  }, [columnWidth, dates, timeStep]);\n\n  useEffect(() => {\n    const handleMouseMove = async (event: MouseEvent) => {\n      if (!ganttEvent.changedTask || !point || !svg?.current) return;\n      event.preventDefault();\n\n      point.x = event.clientX;\n      const cursor = point.matrixTransform(\n        svg?.current.getScreenCTM()?.inverse()\n      );\n\n      const { isChanged, changedTask } = handleTaskBySVGMouseEvent(\n        cursor.x,\n        ganttEvent.action as BarMoveAction,\n        ganttEvent.changedTask,\n        xStep,\n        timeStep,\n        initEventX1Delta,\n        rtl\n      );\n      if (isChanged) {\n        setGanttEvent({ action: ganttEvent.action, changedTask });\n      }\n    };\n\n    const handleMouseUp = async (event: MouseEvent) => {\n      const { action, originalSelectedTask, changedTask } = ganttEvent;\n      if (!changedTask || !point || !svg?.current || !originalSelectedTask)\n        return;\n      event.preventDefault();\n\n      point.x = event.clientX;\n      const cursor = point.matrixTransform(\n        svg?.current.getScreenCTM()?.inverse()\n      );\n      const { changedTask: newChangedTask } = handleTaskBySVGMouseEvent(\n        cursor.x,\n        action as BarMoveAction,\n        changedTask,\n        xStep,\n        timeStep,\n        initEventX1Delta,\n        rtl\n      );\n\n      const isNotLikeOriginal =\n        originalSelectedTask.start !== newChangedTask.start ||\n        originalSelectedTask.end !== newChangedTask.end ||\n        originalSelectedTask.progress !== newChangedTask.progress;\n\n      // remove listeners\n      svg.current.removeEventListener(\"mousemove\", handleMouseMove);\n      svg.current.removeEventListener(\"mouseup\", handleMouseUp);\n      setGanttEvent({ action: \"\" });\n      setIsMoving(false);\n\n      // custom operation start\n      let operationSuccess = true;\n      if (\n        (action === \"move\" || action === \"end\" || action === \"start\") &&\n        onDateChange &&\n        isNotLikeOriginal\n      ) {\n        try {\n          const result = await onDateChange(\n            newChangedTask,\n            newChangedTask.barChildren\n          );\n          if (result !== undefined) {\n            operationSuccess = result;\n          }\n        } catch (error) {\n          operationSuccess = false;\n        }\n      } else if (onProgressChange && isNotLikeOriginal) {\n        try {\n          const result = await onProgressChange(\n            newChangedTask,\n            newChangedTask.barChildren\n          );\n          if (result !== undefined) {\n            operationSuccess = result;\n          }\n        } catch (error) {\n          operationSuccess = false;\n        }\n      }\n\n      // If operation is failed - return old state\n      if (!operationSuccess) {\n        setFailedTask(originalSelectedTask);\n      }\n    };\n\n    if (\n      !isMoving &&\n      (ganttEvent.action === \"move\" ||\n        ganttEvent.action === \"end\" ||\n        ganttEvent.action === \"start\" ||\n        ganttEvent.action === \"progress\") &&\n      svg?.current\n    ) {\n      svg.current.addEventListener(\"mousemove\", handleMouseMove);\n      svg.current.addEventListener(\"mouseup\", handleMouseUp);\n      setIsMoving(true);\n    }\n  }, [\n    ganttEvent,\n    xStep,\n    initEventX1Delta,\n    onProgressChange,\n    timeStep,\n    onDateChange,\n    svg,\n    isMoving,\n    point,\n    rtl,\n    setFailedTask,\n    setGanttEvent,\n  ]);\n\n  /**\n   * Method is Start point of task change\n   */\n  const handleBarEventStart = async (\n    action: GanttContentMoveAction,\n    task: BarTask,\n    event?: React.MouseEvent | React.KeyboardEvent\n  ) => {\n    if (!event) {\n      if (action === \"select\") {\n        setSelectedTask(task.id);\n      }\n    }\n    // Keyboard events\n    else if (isKeyboardEvent(event)) {\n      if (action === \"delete\") {\n        if (onDelete) {\n          try {\n            const result = await onDelete(task);\n            if (result !== undefined && result) {\n              setGanttEvent({ action, changedTask: task });\n            }\n          } catch (error) {\n            console.error(\"Error on Delete. \" + error);\n          }\n        }\n      }\n    }\n    // Mouse Events\n    else if (action === \"mouseenter\") {\n      if (!ganttEvent.action) {\n        setGanttEvent({\n          action,\n          changedTask: task,\n          originalSelectedTask: task,\n        });\n      }\n    } else if (action === \"mouseleave\") {\n      if (ganttEvent.action === \"mouseenter\") {\n        setGanttEvent({ action: \"\" });\n      }\n    } else if (action === \"dblclick\") {\n      !!onDoubleClick && onDoubleClick(task);\n    } else if (action === \"click\") {\n      !!onClick && onClick(task);\n    }\n    // Change task event start\n    else if (action === \"move\") {\n      if (!svg?.current || !point) return;\n      point.x = event.clientX;\n      const cursor = point.matrixTransform(\n        svg.current.getScreenCTM()?.inverse()\n      );\n      setInitEventX1Delta(cursor.x - task.x1);\n      setGanttEvent({\n        action,\n        changedTask: task,\n        originalSelectedTask: task,\n      });\n    } else {\n      setGanttEvent({\n        action,\n        changedTask: task,\n        originalSelectedTask: task,\n      });\n    }\n  };\n\n  return (\n    <g className=\"content\">\n      <g className=\"arrows\" fill={arrowColor} stroke={arrowColor}>\n        {tasks.map(task => {\n          return task.barChildren.map(child => {\n            return (\n              <Arrow\n                key={`Arrow from ${task.id} to ${tasks[child.index].id}`}\n                taskFrom={task}\n                taskTo={tasks[child.index]}\n                rowHeight={rowHeight}\n                taskHeight={taskHeight}\n                arrowIndent={arrowIndent}\n                rtl={rtl}\n              />\n            );\n          });\n        })}\n      </g>\n      <g className=\"bar\" fontFamily={fontFamily} fontSize={fontSize}>\n        {tasks.map(task => {\n          return (\n            <TaskItem\n              task={task}\n              arrowIndent={arrowIndent}\n              taskHeight={taskHeight}\n              isProgressChangeable={!!onProgressChange && !task.isDisabled}\n              isDateChangeable={!!onDateChange && !task.isDisabled}\n              isDelete={!task.isDisabled}\n              onEventStart={handleBarEventStart}\n              key={task.id}\n              isSelected={!!selectedTask && task.id === selectedTask.id}\n              rtl={rtl}\n            />\n          );\n        })}\n      </g>\n    </g>\n  );\n};\n","import React, { useRef, useEffect } from \"react\";\nimport { GridProps, Grid } from \"../grid/grid\";\nimport { CalendarProps, Calendar } from \"../calendar/calendar\";\nimport { TaskGanttContentProps, TaskGanttContent } from \"./task-gantt-content\";\nimport styles from \"./gantt.module.css\";\n\nexport type TaskGanttProps = {\n  gridProps: GridProps;\n  calendarProps: CalendarProps;\n  barProps: TaskGanttContentProps;\n  ganttHeight: number;\n  scrollY: number;\n  scrollX: number;\n};\nexport const TaskGantt: React.FC<TaskGanttProps> = ({\n  gridProps,\n  calendarProps,\n  barProps,\n  ganttHeight,\n  scrollY,\n  scrollX,\n}) => {\n  const ganttSVGRef = useRef<SVGSVGElement>(null);\n  const horizontalContainerRef = useRef<HTMLDivElement>(null);\n  const verticalGanttContainerRef = useRef<HTMLDivElement>(null);\n  const newBarProps = { ...barProps, svg: ganttSVGRef };\n\n  useEffect(() => {\n    if (horizontalContainerRef.current) {\n      horizontalContainerRef.current.scrollTop = scrollY;\n    }\n  }, [scrollY]);\n\n  useEffect(() => {\n    if (verticalGanttContainerRef.current) {\n      verticalGanttContainerRef.current.scrollLeft = scrollX;\n    }\n  }, [scrollX]);\n\n  return (\n    <div\n      className={styles.ganttVerticalContainer}\n      ref={verticalGanttContainerRef}\n      dir=\"ltr\"\n    >\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width={gridProps.svgWidth}\n        height={calendarProps.headerHeight}\n        fontFamily={barProps.fontFamily}\n      >\n        <Calendar {...calendarProps} />\n      </svg>\n      <div\n        ref={horizontalContainerRef}\n        className={styles.horizontalContainer}\n        style={\n          ganttHeight\n            ? { height: ganttHeight, width: gridProps.svgWidth }\n            : { width: gridProps.svgWidth }\n        }\n      >\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          width={gridProps.svgWidth}\n          height={barProps.rowHeight * barProps.tasks.length}\n          fontFamily={barProps.fontFamily}\n          ref={ganttSVGRef}\n        >\n          <Grid {...gridProps} />\n          <TaskGanttContent {...newBarProps} />\n        </svg>\n      </div>\n    </div>\n  );\n};\n","import React, { SyntheticEvent, useRef, useEffect } from \"react\";\nimport styles from \"./horizontal-scroll.module.css\";\n\nexport const HorizontalScroll: React.FC<{\n  scroll: number;\n  svgWidth: number;\n  taskListWidth: number;\n  rtl: boolean;\n  onScroll: (event: SyntheticEvent<HTMLDivElement>) => void;\n}> = ({ scroll, svgWidth, taskListWidth, rtl, onScroll }) => {\n  const scrollRef = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    if (scrollRef.current) {\n      scrollRef.current.scrollLeft = scroll;\n    }\n  }, [scroll]);\n\n  return (\n    <div\n      dir=\"ltr\"\n      style={{\n        margin: rtl\n          ? `0px ${taskListWidth}px 0px 0px`\n          : `0px 0px 0px ${taskListWidth}px`,\n      }}\n      className={styles.scrollWrapper}\n      onScroll={onScroll}\n      ref={scrollRef}\n    >\n      <div style={{ width: svgWidth }} className={styles.scroll} />\n    </div>\n  );\n};\n","import React, {\n  useState,\n  SyntheticEvent,\n  useRef,\n  useEffect,\n  useMemo,\n} from \"react\";\nimport { ViewMode, GanttProps, Task } from \"../../types/public-types\";\nimport { GridProps } from \"../grid/grid\";\nimport { ganttDateRange, seedDates } from \"../../helpers/date-helper\";\nimport { CalendarProps } from \"../calendar/calendar\";\nimport { TaskGanttContentProps } from \"./task-gantt-content\";\nimport { TaskListHeaderDefault } from \"../task-list/task-list-header\";\nimport { TaskListTableDefault } from \"../task-list/task-list-table\";\nimport { StandardTooltipContent, Tooltip } from \"../other/tooltip\";\nimport { VerticalScroll } from \"../other/vertical-scroll\";\nimport { TaskListProps, TaskList } from \"../task-list/task-list\";\nimport { TaskGantt } from \"./task-gantt\";\nimport { BarTask } from \"../../types/bar-task\";\nimport { convertToBarTasks } from \"../../helpers/bar-helper\";\nimport { GanttEvent } from \"../../types/gantt-task-actions\";\nimport { DateSetup } from \"../../types/date-setup\";\nimport { HorizontalScroll } from \"../other/horizontal-scroll\";\nimport { removeHiddenTasks, sortTasks } from \"../../helpers/other-helper\";\nimport styles from \"./gantt.module.css\";\n\nexport const Gantt: React.FunctionComponent<GanttProps> = ({\n  tasks,\n  headerHeight = 50,\n  columnWidth = 60,\n  listCellWidth = \"155px\",\n  rowHeight = 50,\n  ganttHeight = 0,\n  viewMode = ViewMode.Day,\n  preStepsCount = 1,\n  locale = \"en-GB\",\n  barFill = 60,\n  barCornerRadius = 3,\n  barProgressColor = \"#a3a3ff\",\n  barProgressSelectedColor = \"#8282f5\",\n  barBackgroundColor = \"#b8c2cc\",\n  barBackgroundSelectedColor = \"#aeb8c2\",\n  projectProgressColor = \"#7db59a\",\n  projectProgressSelectedColor = \"#59a985\",\n  projectBackgroundColor = \"#fac465\",\n  projectBackgroundSelectedColor = \"#f7bb53\",\n  milestoneBackgroundColor = \"#f1c453\",\n  milestoneBackgroundSelectedColor = \"#f29e4c\",\n  rtl = false,\n  handleWidth = 8,\n  timeStep = 300000,\n  arrowColor = \"grey\",\n  fontFamily = \"Arial, Roboto, Oxygen, Ubuntu, Cantarell, Fira Sans, Droid Sans, Helvetica Neue\",\n  fontSize = \"14px\",\n  arrowIndent = 20,\n  todayColor = \"rgba(252, 248, 227, 0.5)\",\n  viewDate,\n  TooltipContent = StandardTooltipContent,\n  TaskListHeader = TaskListHeaderDefault,\n  TaskListTable = TaskListTableDefault,\n  onDateChange,\n  onProgressChange,\n  onDoubleClick,\n  onClick,\n  onDelete,\n  onSelect,\n  onExpanderClick,\n}) => {\n  const wrapperRef = useRef<HTMLDivElement>(null);\n  const taskListRef = useRef<HTMLDivElement>(null);\n  const [dateSetup, setDateSetup] = useState<DateSetup>(() => {\n    const [startDate, endDate] = ganttDateRange(tasks, viewMode, preStepsCount);\n    return { viewMode, dates: seedDates(startDate, endDate, viewMode) };\n  });\n  const [currentViewDate, setCurrentViewDate] = useState<Date | undefined>(\n    undefined\n  );\n\n  const [taskListWidth, setTaskListWidth] = useState(0);\n  const [svgContainerWidth, setSvgContainerWidth] = useState(0);\n  const [svgContainerHeight, setSvgContainerHeight] = useState(ganttHeight);\n  const [barTasks, setBarTasks] = useState<BarTask[]>([]);\n  const [ganttEvent, setGanttEvent] = useState<GanttEvent>({\n    action: \"\",\n  });\n  const taskHeight = useMemo(\n    () => (rowHeight * barFill) / 100,\n    [rowHeight, barFill]\n  );\n\n  const [selectedTask, setSelectedTask] = useState<BarTask>();\n  const [failedTask, setFailedTask] = useState<BarTask | null>(null);\n\n  const svgWidth = dateSetup.dates.length * columnWidth;\n  const ganttFullHeight = barTasks.length * rowHeight;\n\n  const [scrollY, setScrollY] = useState(0);\n  const [scrollX, setScrollX] = useState(-1);\n  const [ignoreScrollEvent, setIgnoreScrollEvent] = useState(false);\n\n  // task change events\n  useEffect(() => {\n    let filteredTasks: Task[];\n    if (onExpanderClick) {\n      filteredTasks = removeHiddenTasks(tasks);\n    } else {\n      filteredTasks = tasks;\n    }\n    filteredTasks = filteredTasks.sort(sortTasks);\n    const [startDate, endDate] = ganttDateRange(\n      filteredTasks,\n      viewMode,\n      preStepsCount\n    );\n    let newDates = seedDates(startDate, endDate, viewMode);\n    if (rtl) {\n      newDates = newDates.reverse();\n      if (scrollX === -1) {\n        setScrollX(newDates.length * columnWidth);\n      }\n    }\n    setDateSetup({ dates: newDates, viewMode });\n    setBarTasks(\n      convertToBarTasks(\n        filteredTasks,\n        newDates,\n        columnWidth,\n        rowHeight,\n        taskHeight,\n        barCornerRadius,\n        handleWidth,\n        rtl,\n        barProgressColor,\n        barProgressSelectedColor,\n        barBackgroundColor,\n        barBackgroundSelectedColor,\n        projectProgressColor,\n        projectProgressSelectedColor,\n        projectBackgroundColor,\n        projectBackgroundSelectedColor,\n        milestoneBackgroundColor,\n        milestoneBackgroundSelectedColor\n      )\n    );\n  }, [\n    tasks,\n    viewMode,\n    preStepsCount,\n    rowHeight,\n    barCornerRadius,\n    columnWidth,\n    taskHeight,\n    handleWidth,\n    barProgressColor,\n    barProgressSelectedColor,\n    barBackgroundColor,\n    barBackgroundSelectedColor,\n    projectProgressColor,\n    projectProgressSelectedColor,\n    projectBackgroundColor,\n    projectBackgroundSelectedColor,\n    milestoneBackgroundColor,\n    milestoneBackgroundSelectedColor,\n    rtl,\n    scrollX,\n    onExpanderClick,\n  ]);\n\n  useEffect(() => {\n    if (\n      viewMode === dateSetup.viewMode &&\n      ((viewDate && !currentViewDate) ||\n        (viewDate && currentViewDate?.valueOf() !== viewDate.valueOf()))\n    ) {\n      const dates = dateSetup.dates;\n      const index = dates.findIndex(\n        (d, i) =>\n          viewDate.valueOf() >= d.valueOf() &&\n          i + 1 !== dates.length &&\n          viewDate.valueOf() < dates[i + 1].valueOf()\n      );\n      if (index === -1) {\n        return;\n      }\n      setCurrentViewDate(viewDate);\n      setScrollX(columnWidth * index);\n    }\n  }, [\n    viewDate,\n    columnWidth,\n    dateSetup.dates,\n    dateSetup.viewMode,\n    viewMode,\n    currentViewDate,\n    setCurrentViewDate,\n  ]);\n\n  useEffect(() => {\n    const { changedTask, action } = ganttEvent;\n    if (changedTask) {\n      if (action === \"delete\") {\n        setGanttEvent({ action: \"\" });\n        setBarTasks(barTasks.filter(t => t.id !== changedTask.id));\n      } else if (\n        action === \"move\" ||\n        action === \"end\" ||\n        action === \"start\" ||\n        action === \"progress\"\n      ) {\n        const prevStateTask = barTasks.find(t => t.id === changedTask.id);\n        if (\n          prevStateTask &&\n          (prevStateTask.start.getTime() !== changedTask.start.getTime() ||\n            prevStateTask.end.getTime() !== changedTask.end.getTime() ||\n            prevStateTask.progress !== changedTask.progress)\n        ) {\n          // actions for change\n          const newTaskList = barTasks.map(t =>\n            t.id === changedTask.id ? changedTask : t\n          );\n          setBarTasks(newTaskList);\n        }\n      }\n    }\n  }, [ganttEvent, barTasks]);\n\n  useEffect(() => {\n    if (failedTask) {\n      setBarTasks(barTasks.map(t => (t.id !== failedTask.id ? t : failedTask)));\n      setFailedTask(null);\n    }\n  }, [failedTask, barTasks]);\n\n  useEffect(() => {\n    if (!listCellWidth) {\n      setTaskListWidth(0);\n    }\n    if (taskListRef.current) {\n      setTaskListWidth(taskListRef.current.offsetWidth);\n    }\n  }, [taskListRef, listCellWidth]);\n\n  useEffect(() => {\n    if (wrapperRef.current) {\n      setSvgContainerWidth(wrapperRef.current.offsetWidth - taskListWidth);\n    }\n  }, [wrapperRef, taskListWidth]);\n\n  useEffect(() => {\n    if (ganttHeight) {\n      setSvgContainerHeight(ganttHeight + headerHeight);\n    } else {\n      setSvgContainerHeight(tasks.length * rowHeight + headerHeight);\n    }\n  }, [ganttHeight, tasks, headerHeight, rowHeight]);\n\n  // scroll events\n  useEffect(() => {\n    const handleWheel = (event: WheelEvent) => {\n      if (event.shiftKey || event.deltaX) {\n        const scrollMove = event.deltaX ? event.deltaX : event.deltaY;\n        let newScrollX = scrollX + scrollMove;\n        if (newScrollX < 0) {\n          newScrollX = 0;\n        } else if (newScrollX > svgWidth) {\n          newScrollX = svgWidth;\n        }\n        setScrollX(newScrollX);\n        event.preventDefault();\n      } else if (ganttHeight) {\n        let newScrollY = scrollY + event.deltaY;\n        if (newScrollY < 0) {\n          newScrollY = 0;\n        } else if (newScrollY > ganttFullHeight - ganttHeight) {\n          newScrollY = ganttFullHeight - ganttHeight;\n        }\n        if (newScrollY !== scrollY) {\n          setScrollY(newScrollY);\n          event.preventDefault();\n        }\n      }\n\n      setIgnoreScrollEvent(true);\n    };\n\n    // subscribe if scroll is necessary\n    wrapperRef.current?.addEventListener(\"wheel\", handleWheel, {\n      passive: false,\n    });\n    return () => {\n      wrapperRef.current?.removeEventListener(\"wheel\", handleWheel);\n    };\n  }, [\n    wrapperRef,\n    scrollY,\n    scrollX,\n    ganttHeight,\n    svgWidth,\n    rtl,\n    ganttFullHeight,\n  ]);\n\n  const handleScrollY = (event: SyntheticEvent<HTMLDivElement>) => {\n    if (scrollY !== event.currentTarget.scrollTop && !ignoreScrollEvent) {\n      setScrollY(event.currentTarget.scrollTop);\n      setIgnoreScrollEvent(true);\n    } else {\n      setIgnoreScrollEvent(false);\n    }\n  };\n\n  const handleScrollX = (event: SyntheticEvent<HTMLDivElement>) => {\n    if (scrollX !== event.currentTarget.scrollLeft && !ignoreScrollEvent) {\n      setScrollX(event.currentTarget.scrollLeft);\n      setIgnoreScrollEvent(true);\n    } else {\n      setIgnoreScrollEvent(false);\n    }\n  };\n\n  /**\n   * Handles arrow keys events and transform it to new scroll\n   */\n  const handleKeyDown = (event: React.KeyboardEvent<HTMLDivElement>) => {\n    event.preventDefault();\n    let newScrollY = scrollY;\n    let newScrollX = scrollX;\n    let isX = true;\n    switch (event.key) {\n      case \"Down\": // IE/Edge specific value\n      case \"ArrowDown\":\n        newScrollY += rowHeight;\n        isX = false;\n        break;\n      case \"Up\": // IE/Edge specific value\n      case \"ArrowUp\":\n        newScrollY -= rowHeight;\n        isX = false;\n        break;\n      case \"Left\":\n      case \"ArrowLeft\":\n        newScrollX -= columnWidth;\n        break;\n      case \"Right\": // IE/Edge specific value\n      case \"ArrowRight\":\n        newScrollX += columnWidth;\n        break;\n    }\n    if (isX) {\n      if (newScrollX < 0) {\n        newScrollX = 0;\n      } else if (newScrollX > svgWidth) {\n        newScrollX = svgWidth;\n      }\n      setScrollX(newScrollX);\n    } else {\n      if (newScrollY < 0) {\n        newScrollY = 0;\n      } else if (newScrollY > ganttFullHeight - ganttHeight) {\n        newScrollY = ganttFullHeight - ganttHeight;\n      }\n      setScrollY(newScrollY);\n    }\n    setIgnoreScrollEvent(true);\n  };\n\n  /**\n   * Task select event\n   */\n  const handleSelectedTask = (taskId: string) => {\n    const newSelectedTask = barTasks.find(t => t.id === taskId);\n    const oldSelectedTask = barTasks.find(\n      t => !!selectedTask && t.id === selectedTask.id\n    );\n    if (onSelect) {\n      if (oldSelectedTask) {\n        onSelect(oldSelectedTask, false);\n      }\n      if (newSelectedTask) {\n        onSelect(newSelectedTask, true);\n      }\n    }\n    setSelectedTask(newSelectedTask);\n  };\n  const handleExpanderClick = (task: Task) => {\n    if (onExpanderClick && task.hideChildren !== undefined) {\n      onExpanderClick({ ...task, hideChildren: !task.hideChildren });\n    }\n  };\n  const gridProps: GridProps = {\n    columnWidth,\n    svgWidth,\n    tasks: tasks,\n    rowHeight,\n    dates: dateSetup.dates,\n    todayColor,\n    rtl,\n  };\n  const calendarProps: CalendarProps = {\n    dateSetup,\n    locale,\n    viewMode,\n    headerHeight,\n    columnWidth,\n    fontFamily,\n    fontSize,\n    rtl,\n  };\n  const barProps: TaskGanttContentProps = {\n    tasks: barTasks,\n    dates: dateSetup.dates,\n    ganttEvent,\n    selectedTask,\n    rowHeight,\n    taskHeight,\n    columnWidth,\n    arrowColor,\n    timeStep,\n    fontFamily,\n    fontSize,\n    arrowIndent,\n    svgWidth,\n    rtl,\n    setGanttEvent,\n    setFailedTask,\n    setSelectedTask: handleSelectedTask,\n    onDateChange,\n    onProgressChange,\n    onDoubleClick,\n    onClick,\n    onDelete,\n  };\n\n  const tableProps: TaskListProps = {\n    rowHeight,\n    rowWidth: listCellWidth,\n    fontFamily,\n    fontSize,\n    tasks: barTasks,\n    locale,\n    headerHeight,\n    scrollY,\n    ganttHeight,\n    horizontalContainerClass: styles.horizontalContainer,\n    selectedTask,\n    taskListRef,\n    setSelectedTask: handleSelectedTask,\n    onExpanderClick: handleExpanderClick,\n    TaskListHeader,\n    TaskListTable,\n  };\n  return (\n    <div>\n      <div\n        className={styles.wrapper}\n        onKeyDown={handleKeyDown}\n        tabIndex={0}\n        ref={wrapperRef}\n      >\n        {listCellWidth && <TaskList {...tableProps} />}\n        <TaskGantt\n          gridProps={gridProps}\n          calendarProps={calendarProps}\n          barProps={barProps}\n          ganttHeight={ganttHeight}\n          scrollY={scrollY}\n          scrollX={scrollX}\n        />\n        {ganttEvent.changedTask && (\n          <Tooltip\n            arrowIndent={arrowIndent}\n            rowHeight={rowHeight}\n            svgContainerHeight={svgContainerHeight}\n            svgContainerWidth={svgContainerWidth}\n            fontFamily={fontFamily}\n            fontSize={fontSize}\n            scrollX={scrollX}\n            scrollY={scrollY}\n            task={ganttEvent.changedTask}\n            headerHeight={headerHeight}\n            taskListWidth={taskListWidth}\n            TooltipContent={TooltipContent}\n            rtl={rtl}\n            svgWidth={svgWidth}\n          />\n        )}\n        <VerticalScroll\n          ganttFullHeight={ganttFullHeight}\n          ganttHeight={ganttHeight}\n          headerHeight={headerHeight}\n          scroll={scrollY}\n          onScroll={handleScrollY}\n          rtl={rtl}\n        />\n      </div>\n      <HorizontalScroll\n        svgWidth={svgWidth}\n        taskListWidth={taskListWidth}\n        scroll={scrollX}\n        rtl={rtl}\n        onScroll={handleScrollX}\n      />\n    </div>\n  );\n};\n"],"sourceRoot":""}