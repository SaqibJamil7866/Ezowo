{"version":3,"sources":["views/apps/user/list/Sidebar.js","views/apps/user/list/Table.js","views/apps/user/list/index.js","@core/components/sidebar/index.js","@core/components/widgets/stats/StatsHorizontal.js"],"names":["countryOptions","label","value","SidebarNewUsers","open","fetchUsers","toggleSidebar","userItem","userOptions","rolesData","roles","filter","item","useState","reportingTo","setReportingTo","firstName","setFirstName","lastName","setLastName","email","setEmail","country","setCountry","password","setPassword","phone","setPhone","role","setRole","designation","setDesignation","heading","id","useEffect","first_name","last_name","phone1","title","slug","reporting_user","size","headerClassName","contentClassName","onClosed","onSubmit","e","preventDefault","postData","role_id","gender","reporting_to","console","error","addUser","then","res","response","code","catch","err","log","className","for","name","placeholder","onChange","target","color","isClearable","classNamePrefix","options","theme","selectThemeColors","classnames","type","outline","onClick","CustomHeader","permission","openAddBar","handlePerPage","rowsPerPage","handleFilter","searchTerm","xl","htmlFor","style","width","user","create","UsersList","getRoleBasedPermissions","users","setUsers","usersOptions","setUsersOptions","sort","setSort","setSearchTerm","currentPage","setCurrentPage","sortColumn","setSortColumn","setRowsPerPage","sidebarOpen","setSidebarOpen","number","currentStatus","setCurrentStatus","currentRole","setCurrentRole","roleOptions","setRoleOptions","selectedUser","setSelectedUser","updatedSidebarStatus","statusObj","active","inactive","renderClient","row","avatar","length","img","height","initials","avatarColor","content","params","direction","keyword","page","perPage","getAllUsers","result","data","getAllRoles","push","map","tag","md","xxl","noHeader","subHeader","sortServer","pagination","responsive","paginationServer","columns","sortable","minWidth","sortField","selector","cell","pill","edit","delete","href","setTimeout","openEditBar","deleteRow","onSort","column","sortDirection","sortIcon","paginationComponent","count","Number","Math","ceil","total","previousLabel","nextLabel","pageCount","activeClassName","forcePage","onPageChange","selected","handlePagination","pageClassName","nextLinkClassName","nextClassName","previousClassName","previousLinkClassName","pageLinkClassName","containerClassName","filters","status","isFiltered","Object","keys","some","k","slice","dataToRender","subHeaderComponent","val","parseInt","currentTarget","Sidebar","Table","props","children","closeBtn","bodyClassName","wrapperClassName","rest","renderCloseBtn","isOpen","toggle","modalClassName","undefined","String","close","wheelPropagation","StatsHorizontal","icon","stats","renderStats","statTitle","statsMargin"],"mappings":"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","file":"static/js/52.fc9e0980.chunk.js","sourcesContent":["// ** React Import\nimport { useEffect, useState } from 'react'\n\n// ** Custom Components\nimport Sidebar from '@components/sidebar'\n\n// ** Utils\nimport { selectThemeColors } from '@utils'\n\n// ** Third Party Components\nimport Select from 'react-select'\nimport classnames from 'classnames'\nimport { useForm, Controller } from 'react-hook-form'\n\n// ** Reactstrap Imports\nimport { Button, Label, FormText, Form, Input } from 'reactstrap'\n\nimport { addUser } from \"../../../../services/Apis\"\n\n// ** Store & Actions\n// import { addUser } from '../store'\nimport { useDispatch } from 'react-redux'\n// import PickerHumanFriendly from '../../../forms/form-elements/datepicker/PickerHumanFriendly'\n\n// const defaultValues = {\n//   first_name: '',\n//   last_name: '',\n//   role_id: '',\n//   phone1: '',\n//   reporting_to: '',\n//   designation: '',\n//   // username: '',\n//   country: ''\n// }\n\nconst countryOptions = [\n  { label: 'Australia', value: 'Australia' },\n  { label: 'Bangladesh', value: 'Bangladesh' },\n  { label: 'Belarus', value: 'Belarus' },\n  { label: 'Brazil', value: 'Brazil' },\n  { label: 'Canada', value: 'Canada' },\n  { label: 'China', value: 'China' },\n  { label: 'France', value: 'France' },\n  { label: 'Germany', value: 'Germany' },\n  { label: 'India', value: 'India' },\n  { label: 'Indonesia', value: 'Indonesia' },\n  { label: 'Israel', value: 'Israel' },\n  { label: 'Italy', value: 'Italy' },\n  { label: 'Japan', value: 'Japan' },\n  { label: 'Korea', value: 'Korea' },\n  { label: 'Mexico', value: 'Mexico' },\n  { label: 'Philippines', value: 'Philippines' },\n  { label: 'Russia', value: 'Russia' },\n  { label: 'South', value: 'South' },\n  { label: 'Thailand', value: 'Thailand' },\n  { label: 'Turkey', value: 'Turkey' },\n  { label: 'Ukraine', value: 'Ukraine' },\n  { label: 'United Arab Emirates', value: 'United Arab Emirates' },\n  { label: 'United Kingdom', value: 'United Kingdom' },\n  { label: 'United States', value: 'United States' }\n]\n\n// const checkIsValid = data => {\n//   return Object.values(data).every(field => (typeof field === 'object' ? field !== null : field.length > 0))\n// }\n\nconst SidebarNewUsers = ({ open, fetchUsers, toggleSidebar, userItem, userOptions, roles }) => {\n  \n  const rolesData = roles.filter(item => item.value)\n\n  const [reportingTo, setReportingTo] = useState({})\n  const [firstName, setFirstName] = useState('')\n  const [lastName, setLastName] = useState('')\n  const [email, setEmail] = useState('')\n  const [country, setCountry] = useState({})\n  const [password, setPassword] = useState('')\n  const [phone, setPhone] = useState('')\n  const [role, setRole] = useState({})\n  const [designation, setDesignation] = useState('')\n\n  const heading = userItem && userItem.id ? 'Edit People' : 'Add People'\n\n  useEffect(() => {\n    if (userItem && userItem?.first_name) {\n\n      setFirstName(userItem?.first_name)\n      setLastName(userItem?.last_name)\n      setEmail(userItem?.email)\n      setDesignation(userItem?.designation)\n      setPhone(userItem?.phone1)\n      setCountry({label: userItem?.country, value: userItem?.country})\n\n      if (userItem?.role) {\n        setRole({\n          id: userItem?.role?.id,\n          title: userItem?.role?.title,\n          slug: userItem?.role?.slug,\n          value: userItem?.role?.id,\n          label: userItem?.role?.title\n        })  \n      }\n\n      if (userItem?.reporting_user && userItem?.reporting_user?.id) {\n        setReportingTo({\n          id: userItem?.reporting_user?.id,\n          title: userItem?.reporting_user?.title,\n          value: userItem?.reporting_user?.id,\n          label: `${userItem?.reporting_user?.first_name  } ${  userItem?.reporting_user?.last_name}`\n        }) \n      } \n    }\n  }, [userItem])\n  \n  const onSubmit = (e) => {\n    e.preventDefault()\n      \n      const postData = {\n        first_name: firstName,\n        last_name: lastName,\n        email,\n        password,\n        phone1: phone,\n        role_id: role.id,\n        country: country.value,\n        gender: \"unknown\",\n        reporting_to: reportingTo.id,\n        designation\n        // departments: [1], \n      }\n      if (userItem && userItem?.id) {\n        postData['id'] = userItem?.id\n      }\n      \n      console.error(' POST ', postData)\n      // return\n      \n      addUser(postData)\n        .then(res => {\n          console.error(' RESPONSE ', res)\n          if (res.response.code === 200) {\n            toggleSidebar()\n            fetchUsers()\n          } else {\n            console.error(' ERROR: Adding User')\n          }\n        })\n        .catch(err => {\n          console.log('ERROR: ', err)\n        })\n  }\n\n  const handleSidebarClosed = () => {\n    // for (const key in defaultValues) {\n    //   setValue(key, '')\n    // }\n    // setRole('subscriber')\n    // setPlan('basic')\n\n  }\n\n  return (\n    <Sidebar\n      size='lg'\n      open={open}\n      title={heading}\n      headerClassName='mb-1'\n      contentClassName='pt-0'\n      toggleSidebar={toggleSidebar}\n      onClosed={handleSidebarClosed}\n    >\n      <Form onSubmit={onSubmit}>\n        <div className='mb-1'>\n          <Label className='form-label' for='first_name'>\n            First Name <span className='text-danger'>*</span>\n          </Label>\n            <Input name='first_name' id='first_name' placeholder='' value={firstName} onChange={(e) => setFirstName(e.target.value)} />\n        </div>\n        <div className='mb-1'>\n          <Label className='form-label' for='last_name'>\n            Last Name <span className='text-danger'>*</span>\n          </Label>\n          <Input name='last_name' id='last_name' placeholder='' value={lastName} onChange={(e) => setLastName(e.target.value)} />\n        </div>\n        <div className='mb-1'>\n          <Label className='form-label' for='password'>\n            Password <span className='text-danger'>*</span>\n          </Label>\n          <Input name='password' id='password' placeholder='' value={password} onChange={(e) => setPassword(e.target.value)} />\n        </div>\n        <div className='mb-1'>\n          <Label className='form-label' for='userEmail'>\n            Email <span className='text-danger'>*</span>\n          </Label>\n          <Input name='email' id='email' placeholder='john.doe@example.com' value={email} onChange={(e) => setEmail(e.target.value)} />\n          <FormText color='muted'>You can use letters, numbers & periods</FormText>\n        </div>\n        <div className='mb-1'>\n          <Label className='form-label' for='country_id'>\n            Country <span className='text-danger'>*</span>\n          </Label>\n          <Select\n            id='country'\n            isClearable={false}\n            className='react-select'\n            classNamePrefix='select'\n            options={countryOptions}\n            value={country}\n            onChange={(item) => {\n              setCountry(item)\n            }}\n            theme={selectThemeColors}\n            />\n        </div>\n        <div className='mb-1'>\n          <Label className='form-label' for='phone1'>\n            Phone <span className='text-danger'>*</span>\n          </Label>\n          <Input name='phone1' id='phone1' placeholder='john.doe@example.com' value={phone} onChange={(e) => setPhone(e.target.value)} />\n        </div>\n        <div className='mb-1'>\n          <Label className='form-label' for='country'>\n            Role <span className='text-danger'>*</span>\n          </Label>\n          <Select\n            isClearable={false}\n            classNamePrefix='select'\n            options={rolesData}\n            value={role}\n            onChange={(item) => setRole(item)}\n            theme={selectThemeColors}\n            className={classnames('react-select')}\n          />\n        </div>\n        <div className='mb-1'>\n          <Label className='form-label' for='reporting-to'>\n            Reporting To\n          </Label>\n          <Select\n            id='reporting-to'\n            name='reporting_to'\n            isClearable={false}\n            className='react-select'\n            classNamePrefix='select'\n            options={userOptions}\n            value={reportingTo}\n            onChange={(item) => setReportingTo(item)}\n            theme={selectThemeColors}\n          />\n        </div>\n        <div className='mb-1'>\n          <Label className='form-label' for='designation'>\n            Designation\n          </Label>\n          <Input name='designation' id='designation' placeholder='' value={designation} onChange={(e) => setDesignation(e.target.value)} />\n        </div>\n        \n        <Button type='submit' className='me-1' color='primary'>\n          Submit\n        </Button>\n        <Button type='reset' color='secondary' outline onClick={toggleSidebar}>\n          Cancel\n        </Button>\n\n      </Form>\n    </Sidebar>\n  )\n}\n\nexport default SidebarNewUsers\n","import { Link } from 'react-router-dom'\nimport Avatar from '@components/avatar'\nimport { Slack, User, Settings, Database, Edit2, MoreVertical, FileText, Trash2, Archive, ChevronDown, Share, Printer, File, Grid, Copy } from 'react-feather'\nimport { Fragment, useState, useEffect } from 'react'\nimport Sidebar from './Sidebar'\nimport Select from 'react-select'\nimport ReactPaginate from 'react-paginate'\nimport DataTable from 'react-data-table-component'\n\n// ** Utils\nimport { selectThemeColors, getRoleBasedPermissions } from '@utils'\n\n// ** Reactstrap Imports\nimport {\n  Row,\n  Col,\n  Card,\n  Input,\n  Label,\n  Button,\n  CardBody,\n  CardTitle,\n  CardHeader,\n  Badge, UncontrolledDropdown, DropdownToggle, DropdownMenu, DropdownItem\n} from 'reactstrap'\n\n// ** Styles\nimport '@styles/react/libs/react-select/_react-select.scss'\nimport '@styles/react/libs/tables/react-dataTable-component.scss'\n\nimport { getAllUsers, deleteRow, getAllRoles } from \"../../../../services/Apis\"\n\n// ** Table Header\n// const CustomHeader = ({ store, toggleSidebar, handlePerPage, rowsPerPage, handleFilter, searchTerm }) => {\nconst CustomHeader = ({ permission, openAddBar, handlePerPage, rowsPerPage, handleFilter, searchTerm }) => {\n  // ** Converts table to CSV\n  // function convertArrayOfObjectsToCSV(array) {\n  //   let result\n\n  //   const columnDelimiter = ','\n  //   const lineDelimiter = '\\n'\n  //   const keys = Object.keys(store.data[0])\n\n  //   result = ''\n  //   result += keys.join(columnDelimiter)\n  //   result += lineDelimiter\n\n  //   array.forEach(item => {\n  //     let ctr = 0\n  //     keys.forEach(key => {\n  //       if (ctr > 0) result += columnDelimiter\n\n  //       result += item[key]\n\n  //       ctr++\n  //     })\n  //     result += lineDelimiter\n  //   })\n\n  //   return result\n  // }\n\n  // ** Downloads CSV\n  // function downloadCSV(array) {\n  //   const link = document.createElement('a')\n  //   let csv = convertArrayOfObjectsToCSV(array)\n  //   if (csv === null) return\n\n  //   const filename = 'export.csv'\n\n  //   if (!csv.match(/^data:text\\/csv/i)) {\n  //     csv = `data:text/csv;charset=utf-8,${csv}`\n  //   }\n\n  //   link.setAttribute('href', encodeURI(csv))\n  //   link.setAttribute('download', filename)\n  //   link.click()\n  // }\n  return (\n    <div className='invoice-list-table-header w-100 me-1 ms-50 mt-2 mb-75'>\n      <Row>\n        <Col xl='6' className='d-flex align-items-center p-0'>\n          <div className='d-flex align-items-center w-100'>\n            <label htmlFor='rows-per-page'>Show</label>\n            <Input\n              className='mx-50'\n              type='select'\n              id='rows-per-page'\n              value={rowsPerPage}\n              onChange={handlePerPage}\n              style={{ width: '5rem' }}\n            >\n              <option value='10'>10</option>\n              <option value='25'>25</option>\n              <option value='50'>50</option>\n            </Input>\n            <label htmlFor='rows-per-page'>Entries</label>\n          </div>\n        </Col>\n        <Col\n          xl='6'\n          className='d-flex align-items-sm-center justify-content-xl-end justify-content-start flex-xl-nowrap flex-wrap flex-sm-row flex-column pe-xl-1 p-0 mt-xl-0 mt-1'\n        >\n          <div className='d-flex align-items-center mb-sm-0 mb-1 me-1'>\n            <label className='mb-0' htmlFor='search-invoice'>\n              Search:\n            </label>\n            <Input\n              id='search-invoice'\n              className='ms-50 w-00'\n              type='text'\n              value={searchTerm}\n              onChange={e => handleFilter(e.target.value)}\n            />\n          </div>\n\n          <div className='d-flex align-items-center table-header-actions'>\n            {/* <UncontrolledDropdown className='me-1'>\n              <DropdownToggle color='secondary' caret outline>\n                <Share className='font-small-4 me-50' />\n                <span className='align-middle'>Export</span>\n              </DropdownToggle>\n              <DropdownMenu>\n                <DropdownItem className='w-100'>\n                  <Printer className='font-small-4 me-50' />\n                  <span className='align-middle'>Print</span>\n                </DropdownItem>\n                <DropdownItem className='w-100' onClick={() => downloadCSV(store.data)}>\n                  <FileText className='font-small-4 me-50' />\n                  <span className='align-middle'>CSV</span>\n                </DropdownItem>\n                <DropdownItem className='w-100'>\n                  <Grid className='font-small-4 me-50' />\n                  <span className='align-middle'>Excel</span>\n                </DropdownItem>\n                <DropdownItem className='w-100'>\n                  <File className='font-small-4 me-50' />\n                  <span className='align-middle'>PDF</span>\n                </DropdownItem>\n                <DropdownItem className='w-100'>\n                  <Copy className='font-small-4 me-50' />\n                  <span className='align-middle'>Copy</span>\n                </DropdownItem>\n              </DropdownMenu>\n            </UncontrolledDropdown> */}\n\n            {permission && permission.user.create ? <Button className='add-new-user' color='primary' onClick={openAddBar}>\n              Add People\n            </Button> : null}\n          </div>\n        </Col>\n      </Row>\n    </div>\n  )\n}\n\nconst UsersList = () => {\n  const permission = getRoleBasedPermissions()\n  const [users, setUsers] = useState([])\n  const [usersOptions, setUsersOptions] = useState([])\n  const [sort, setSort] = useState('desc')\n  const [searchTerm, setSearchTerm] = useState('')\n  const [currentPage, setCurrentPage] = useState(1)\n  const [sortColumn, setSortColumn] = useState('id')\n  const [rowsPerPage, setRowsPerPage] = useState(10)\n  const [sidebarOpen, setSidebarOpen] = useState(false)\n  const [currentStatus, setCurrentStatus] = useState({ value: true, label: 'Active', number: 0 })\n  const [currentRole, setCurrentRole] = useState({ value: '', title: 'All', label: 'All' })\n  const [roleOptions, setRoleOptions] = useState([])\n\n  const [selectedUser, setSelectedUser] = useState({})\n\n  // const toggleSidebar = () => setSidebarOpen(!sidebarOpen)\n\n  const toggleSidebar = () => {\n    const updatedSidebarStatus = !sidebarOpen\n    setSidebarOpen(updatedSidebarStatus)\n    if (!updatedSidebarStatus) {\n      setSelectedUser({})\n    }\n  }\n\n  const openAddBar = () => {\n    setSelectedUser({}) \n    toggleSidebar()\n  }\n\n  const openEditBar = (row) => {\n    setSelectedUser(row)\n    setTimeout(() => {\n      toggleSidebar()\n    }, 500)\n  }\n\n  const statusObj = {\n    // pending: 'light-warning',\n    active: 'light-success',\n    inactive: 'light-secondary'\n  }\n\n  // const renderRole = row => {\n  //   const roleObj = {\n  //     subscriber: {\n  //       class: 'text-primary',\n  //       icon: User\n  //     },\n  //     maintainer: {\n  //       class: 'text-success',\n  //       icon: Database\n  //     },\n  //     editor: {\n  //       class: 'text-info',\n  //       icon: Edit2\n  //     },\n  //     author: {\n  //       class: 'text-warning',\n  //       icon: Settings\n  //     },\n  //     admin: {\n  //       class: 'text-danger',\n  //       icon: Slack\n  //     }\n  //   }\n\n  //   const Icon = roleObj[row.role] ? roleObj[row.role].icon : Edit2\n\n  //   return (\n  //     <span className='text-truncate text-capitalize align-middle'>\n  //       {/* <Icon size={18} className={`${roleObj[row.role] ? roleObj[row.role].class : ''} me-50`} /> */}\n  //       {row.role}\n  //     </span>\n  //   )\n  // }\n\n  const renderClient = row => {\n    if (row?.avatar?.length) {\n      return <Avatar className='me-1' img={row.avatar} width='32' height='32' />\n    } else {\n      return (\n        <Avatar\n          initials\n          className='me-1'\n          color={row.avatarColor || 'light-primary'}\n          content={`${row.first_name  } ${  row.last_name}` || ''}\n        />\n      )\n    }\n  }\n\n  const renderDesignation = row => {\n    const designationObj = {\n      subscriber: {\n        class: 'text-primary',\n        icon: User\n      },\n      maintainer: {\n        class: 'text-success',\n        icon: Database\n      },\n      editor: {\n        class: 'text-info',\n        icon: Edit2\n      },\n      author: {\n        class: 'text-warning',\n        icon: Settings\n      },\n      admin: {\n        class: 'text-danger',\n        icon: Slack\n      }\n    }\n  \n    const Icon = designationObj[row.role] ? designationObj[row.role].icon : Edit2\n  \n    return (\n      <span className='text-truncate text-capitalize align-middle'>\n        {/* <Icon size={18} className={`${designationObj[row.role] ? designationObj[row.role].class : ''} me-50`} /> */}\n        {row.role}\n      </span>\n    )\n  }\n\n  const fetchUsers = () => {\n    const params = {\n      direction: sort,\n      keyword: searchTerm,\n      sort: sortColumn,\n      page: currentPage,\n      perPage: rowsPerPage,\n      active: currentStatus.value ? 1 : 0\n    }\n    if (currentRole && currentRole?.value && currentRole?.id) {\n      params['role'] = currentRole?.id\n    }\n\n    getAllUsers(params).then((res) => {\n      const result = res.response\n      // console.error('ALL Users ', result)\n      if (\n        result &&\n        (result.code === 200 || result.code === 400) &&\n        result.data\n      ) {\n        setUsers(result.data)\n      }\n    })\n  }\n\n  const deleteUser = (id) => {\n    deleteRow('users/delete', {id})\n    .then(res => {\n      // console.error(' RESPONSE ', res)\n      if (res.response.code === 200) {\n        fetchUsers()\n      } else {\n        console.error(' ERROR: Delete User')\n      }\n    })\n    .catch(err => {\n      console.log('ERROR: ', err)\n    })\n  }\n\n  const fetchRoles = () => {\n    getAllRoles().then((res) => {\n      const result = res.response\n      // console.error('ALL Roles ', result)\n      if (\n        result &&\n        (result.code === 200 || result.code === 400) &&\n        result.data\n      ) {\n        // console.error('ALL ROLES ', result.data)\n        result.data.push({\n          value: '',\n          title: 'All',\n          label: 'All'\n        })\n        const data = result.data.map((item) => {\n          return { ...item, value: item.id, label: item.title }\n        })\n        setRoleOptions(data)\n      }\n    })\n  }\n\n  const getUsersOptions = () => {\n    getAllUsers({type: 'dropdown'}).then((res) => {\n      const result = res.response\n      if (\n        result &&\n        (result.code === 200 || result.code === 400) &&\n        result.data\n        ) {\n        // console.error('ALL OPTIONS ', result)\n        const data = result.data.map((item) => {\n          return { ...item, value: item.id, label: `${item.first_name  } ${  item.last_name}` }\n        })\n        setUsersOptions(data)\n      } else {\n        return []\n      }\n    })\n  }\n\n  useEffect(() => { \n    fetchUsers()\n  }, [currentStatus, rowsPerPage, searchTerm, currentRole])\n\n  useEffect(() => { \n    fetchRoles()\n    getUsersOptions()\n  }, [])\n  \n  const statusOptions = [\n    { value: true, label: 'Active', number: 0 },\n    { value: false, label: 'Inactive', number: 1 }\n  ]\n\n  // ** Function in get data on page change\n  const handlePagination = page => {\n    setCurrentPage(page.selected + 1)\n  }\n\n  // ** Function in get data on rows per page\n  const handlePerPage = e => {\n    const value = parseInt(e.currentTarget.value)\n    setRowsPerPage(value)\n  }\n\n  // ** Function in get data on search query change\n  const handleFilter = val => {\n    setSearchTerm(val)\n  }\n\n  // ** Custom Pagination\n  const CustomPagination = () => {\n    const count = Number(Math.ceil(users.total / rowsPerPage))\n\n    return (\n      <ReactPaginate\n        previousLabel={''}\n        nextLabel={''}\n        pageCount={count || 1}\n        activeClassName='active'\n        forcePage={currentPage !== 0 ? currentPage - 1 : 0}\n        onPageChange={page => handlePagination(page)}\n        pageClassName={'page-item'}\n        nextLinkClassName={'page-link'}\n        nextClassName={'page-item next'}\n        previousClassName={'page-item prev'}\n        previousLinkClassName={'page-link'}\n        pageLinkClassName={'page-link'}\n        containerClassName={'pagination react-paginate justify-content-end my-2 pe-1'}\n      />\n    )\n  }\n\n  // ** Table data to render\n  const dataToRender = () => {\n    const filters = {\n      status: currentStatus.value,\n      keyword: searchTerm\n    }\n\n    if (currentRole?.value) {\n      filters['role'] = currentRole.value\n    }\n\n    const isFiltered = Object.keys(filters).some(function (k) {\n      return filters[k].length > 0\n    })\n\n    // console.error('All Users: ', users)\n    if (users.length > 0) {\n      return users\n    } else if (users.length === 0 && isFiltered) {\n      return []\n    } else {\n      return users.slice(0, rowsPerPage)\n    }\n  }\n\n  const handleSort = (column, sortDirection) => {\n    setSort(sortDirection)\n    setSortColumn(column.sortField)\n  }\n\n  return (\n    <Fragment>\n      <Card>\n        <CardHeader>\n          <CardTitle tag='h4'>Filters</CardTitle>\n        </CardHeader>\n        <CardBody>\n          <Row>\n            <Col md='2' xxl='2'>\n              <Label for='role-select'>Role</Label>\n              <Select\n                isClearable={false}\n                value={currentRole}\n                options={roleOptions}\n                className='react-select'\n                classNamePrefix='select'\n                theme={selectThemeColors}\n                onChange={data => {\n                  setCurrentRole(data)\n                }}\n              />\n            </Col>\n            {/* <Col className='my-md-0 my-1' md='4'>\n              <Label for='plan-select'>Plan</Label>\n              <Select\n                theme={selectThemeColors}\n                isClearable={false}\n                className='react-select'\n                classNamePrefix='select'\n                options={planOptions}\n                value={currentPlan}\n                onChange={data => {\n                  setCurrentPlan(data)\n                  dispatch(\n                    getData({\n                      sort,\n                      sortColumn,\n                      q: searchTerm,\n                      page: currentPage,\n                      perPage: rowsPerPage,\n                      role: currentRole.value,\n                      currentPlan: data.value,\n                      status: currentStatus.value\n                    })\n                  )\n                }}\n              />\n            </Col> */}\n            <Col md='2' xxl='2'>\n              <Label for='status-select'>Status</Label>\n              <Select\n                theme={selectThemeColors}\n                isClearable={false}\n                className='react-select'\n                classNamePrefix='select'\n                options={statusOptions}\n                value={currentStatus}\n                onChange={data => {\n                  setCurrentStatus(data)\n                }}\n              />\n            </Col>\n          </Row>\n        </CardBody>\n      </Card>\n\n      <Card className='overflow-hidden'>\n        <div className='react-dataTable'>\n          <DataTable\n            noHeader\n            subHeader\n            sortServer\n            pagination\n            responsive\n            paginationServer\n            columns={[\n              {\n                name: 'People',\n                sortable: true,\n                minWidth: '338px',\n                sortField: 'fullName',\n                selector: row => `${row.first_name  } ${  row.last_name}`,\n                cell: row => (\n                  <div className='d-flex justify-content-left align-items-center'>\n                    {renderClient(row)}\n                    <div className='d-flex flex-column'>\n                      {/* <Link\n                        to={`/apps/user/view/${row.id}`}\n                        className='user_name text-truncate text-body'\n                        onClick={() => store.dispatch(getUser(row.id))}\n                      > */}\n                        <span className='fw-bolder'>{`${row.first_name  } ${   row.last_name}`}</span>\n                      {/* </Link> */}\n                      <small className='text-truncate text-muted mb-0'>{row.email}</small>\n                    </div>\n                  </div>\n                )\n              },\n              {\n                name: 'Role',\n                minWidth: '230px',\n                sortable: false,\n                // sortField: 'role',\n                selector: row => row?.role?.title,\n                cell: row => <span className='text-capitalize'>{row?.role?.title}</span>\n              },\n              {\n                name: 'Designation',\n                minWidth: '230px',\n                sortable: true,\n                sortField: 'designation',\n                selector: row => row.designation,\n                cell: row => <span className='text-capitalize'>{row.designation}</span>\n              },\n              // {\n              //   name: 'Department',\n              //   sortable: true,\n              //   minWidth: '172px',\n              //   sortField: 'role',\n              //   selector: row => row.role,\n              //   cell: row => renderDesignation(row)\n              // },\n              {\n                name: 'Reporting To',\n                minWidth: '230px',\n                sortable: true,\n                sortField: 'reporting_to',\n                selector: row => row.reporting_to,\n                cell: row => <span className='text-capitalize'>{row.reporting_to ? `${row?.reporting_user?.first_name  } ${  row?.reporting_user?.last_name}` : '' }</span>\n              },\n              // {\n              //   name: 'Plan',\n              //   minWidth: '138px',\n              //   sortable: true,\n              //   sortField: 'currentPlan',\n              //   selector: row => row.currentPlan,\n              //   cell: row => <span className='text-capitalize'>{row.currentPlan}</span>\n              // },\n              {\n                name: 'Status',\n                minWidth: '138px',\n                sortable: true,\n                sortField: 'active',\n                selector: row => row.active,\n                cell: row => (\n                  <Badge className='text-capitalize' color={statusObj[row.active ? 'active' : 'inactive']} pill>\n                    {row.active ? 'Active' : 'Inactive'}\n                  </Badge>\n                )\n              },\n              {\n                name: 'Actions',\n                minWidth: '100px',\n                cell: row => (\n                  permission.user.edit || permission.user.delete ? <div className='column-action'>\n                    <UncontrolledDropdown>\n                      <DropdownToggle tag='div' className='btn btn-sm'>\n                        <MoreVertical size={14} className='cursor-pointer' />\n                      </DropdownToggle>\n                      <DropdownMenu>\n                        {permission.user.edit ? <DropdownItem tag='a' href='/' className='w-100' onClick={e => {\n                          e.preventDefault() \n                          openEditBar(row)\n                          }}>\n                          <Archive size={14} className='me-50' />\n                          <span className='align-middle'>Edit</span>\n                        </DropdownItem> : null}\n                        {permission.user.delete ? <DropdownItem\n                          tag='a'\n                          href='/'\n                          className='w-100'\n                          onClick={e => {\n                            e.preventDefault()\n                            deleteUser(row.id)\n                          }}\n                        >\n                          <Trash2 size={14} className='me-50' />\n                          <span className='align-middle'>Delete</span>\n                        </DropdownItem> : null}\n                      </DropdownMenu>\n                    </UncontrolledDropdown>\n                  </div> : null\n                )\n              }\n            ]}\n            onSort={handleSort}\n            sortIcon={<ChevronDown />}\n            className='react-dataTable'\n            paginationComponent={CustomPagination}\n            data={dataToRender()}\n            subHeaderComponent={\n              <CustomHeader\n                permission={permission}\n                searchTerm={searchTerm}\n                rowsPerPage={rowsPerPage}\n                handleFilter={handleFilter}\n                handlePerPage={handlePerPage}\n                openAddBar={openAddBar}\n              />\n            }\n          />\n        </div>\n      </Card>\n\n      <Sidebar open={sidebarOpen} fetchUsers={fetchUsers} toggleSidebar={toggleSidebar} userItem={selectedUser} userOptions={usersOptions} roles={roleOptions} />\n    </Fragment>\n  )\n}\n\nexport default UsersList","// ** User List Component\nimport Table from './Table'\n\n// ** Reactstrap Imports\nimport { Row, Col } from 'reactstrap'\n\n// ** Custom Components\nimport StatsHorizontal from '@components/widgets/stats/StatsHorizontal'\n\n// ** Icons Imports\nimport { User, UserPlus, UserCheck, UserX } from 'react-feather'\n\n// ** Styles\nimport '@styles/react/apps/app-users.scss'\n\nconst UsersList = () => {\n  return (\n    <div className='app-user-list'>\n      {/* <Row>\n        <Col lg='3' sm='6'>\n          <StatsHorizontal\n            color='primary'\n            statTitle='Total Users'\n            icon={<User size={20} />}\n            renderStats={<h3 className='fw-bolder mb-75'>21,459</h3>}\n          />\n        </Col>\n        <Col lg='3' sm='6'>\n          <StatsHorizontal\n            color='danger'\n            statTitle='Paid Users'\n            icon={<UserPlus size={20} />}\n            renderStats={<h3 className='fw-bolder mb-75'>4,567</h3>}\n          />\n        </Col>\n        <Col lg='3' sm='6'>\n          <StatsHorizontal\n            color='success'\n            statTitle='Active Users'\n            icon={<UserCheck size={20} />}\n            renderStats={<h3 className='fw-bolder mb-75'>19,860</h3>}\n          />\n        </Col>\n        <Col lg='3' sm='6'>\n          <StatsHorizontal\n            color='warning'\n            statTitle='Pending Users'\n            icon={<UserX size={20} />}\n            renderStats={<h3 className='fw-bolder mb-75'>237</h3>}\n          />\n        </Col>\n      </Row> */}\n      <Table />\n    </div>\n  )\n}\n\nexport default UsersList\n","// ** Third Party Components\nimport { X } from 'react-feather'\nimport Proptypes from 'prop-types'\nimport classnames from 'classnames'\nimport PerfectScrollbar from 'react-perfect-scrollbar'\n\nimport { Modal, ModalHeader, ModalBody } from 'reactstrap'\n\nconst Sidebar = props => {\n  // ** Props\n  const {\n    open,\n    size,\n    title,\n    width,\n    children,\n    closeBtn,\n    className,\n    toggleSidebar,\n    bodyClassName,\n    contentClassName,\n    wrapperClassName,\n    headerClassName,\n    ...rest\n  } = props\n\n  // ** If user passes custom close btn render that else default close btn\n  const renderCloseBtn = closeBtn ? closeBtn : <X className='cursor-pointer' size={15} onClick={toggleSidebar} />\n\n  return (\n    <Modal\n      isOpen={open}\n      toggle={toggleSidebar}\n      contentClassName={classnames('overflow-hidden', {\n        [contentClassName]: contentClassName\n      })}\n      modalClassName={classnames('modal-slide-in', {\n        [wrapperClassName]: wrapperClassName\n      })}\n      className={classnames({\n        [className]: className,\n        'sidebar-lg': size === 'lg',\n        'sidebar-sm': size === 'sm'\n      })}\n      /*eslint-disable */\n      {...(width !== undefined\n        ? {\n            style: { width: String(width) + 'px' }\n          }\n        : {})}\n      /*eslint-enable */\n      {...rest}\n    >\n      <ModalHeader\n        className={classnames({\n          [headerClassName]: headerClassName\n        })}\n        toggle={toggleSidebar}\n        close={renderCloseBtn}\n        tag='div'\n      >\n        <h5 className='modal-title'>\n          <span className='align-middle'>{title}</span>\n        </h5>\n      </ModalHeader>\n      <PerfectScrollbar options={{ wheelPropagation: false }}>\n        <ModalBody\n          className={classnames('flex-grow-1', {\n            [bodyClassName]: bodyClassName\n          })}\n        >\n          {children}\n        </ModalBody>\n      </PerfectScrollbar>\n    </Modal>\n  )\n}\n\nexport default Sidebar\n\n// ** PropTypes\nSidebar.propTypes = {\n  className: Proptypes.string,\n  bodyClassName: Proptypes.string,\n  open: Proptypes.bool.isRequired,\n  title: Proptypes.string.isRequired,\n  contentClassName: Proptypes.string,\n  wrapperClassName: Proptypes.string,\n  children: Proptypes.any.isRequired,\n  size: Proptypes.oneOf(['sm', 'lg']),\n  toggleSidebar: Proptypes.func.isRequired,\n  width: Proptypes.oneOfType([Proptypes.number, Proptypes.string])\n}\n","// ** Third Party Components\nimport PropTypes from 'prop-types'\nimport classnames from 'classnames'\n\n// ** Reactstrap Imports\nimport { Card, CardBody } from 'reactstrap'\n\nconst StatsHorizontal = ({ icon, color, stats, renderStats, statTitle, className, statsMargin }) => {\n  return (\n    <Card>\n      <CardBody className={className}>\n        <div className='d-flex justify-content-between align-items-center'>\n          <div>\n            {renderStats ? (\n              renderStats\n            ) : (\n              <h2\n                className={classnames('fw-bolder', {\n                  'mb-0': !statsMargin,\n                  [statsMargin]: statsMargin\n                })}\n              >\n                {stats}\n              </h2>\n            )}\n\n            <p className='card-text'>{statTitle}</p>\n          </div>\n          <div className={`avatar avatar-stats p-50 m-0 ${color ? `bg-light-${color}` : 'bg-light-primary'}`}>\n            <div className='avatar-content'>{icon}</div>\n          </div>\n        </div>\n      </CardBody>\n    </Card>\n  )\n}\n\nexport default StatsHorizontal\n\n// ** PropTypes\nStatsHorizontal.propTypes = {\n  stats: PropTypes.string,\n  renderStats: PropTypes.any,\n  className: PropTypes.string,\n  icon: PropTypes.element.isRequired,\n  color: PropTypes.string.isRequired,\n  statTitle: PropTypes.string.isRequired,\n  statsMargin: PropTypes.oneOf(['mb-0', 'mb-25', 'mb-50', 'mb-75', 'mb-1', 'mb-2', 'mb-3', 'mb-4', 'mb-5'])\n}\n"],"sourceRoot":""}