{"version":3,"sources":["views/components/avatar/AvatarSizes.js","views/components/avatar/AvatarIcons.js","views/components/avatar/AvatarGroup.js","views/components/avatar/AvatarColors.js","views/components/avatar/AvatarStatus.js","views/components/avatar/AvatarInitials.js","views/components/avatar/AvatarLightColors.js","views/components/avatar/AvatarGroupTooltip.js","views/components/avatar/AvatarSourceCode.js","views/components/avatar/index.js","@core/components/card-snippet/index.js","@core/components/avatar-group/index.js","assets/images/portrait/small/avatar-s-20.jpg"],"names":["AvatarSizes","className","img","avatarImg","size","AvatarIcons","color","icon","data","require","default","AvatarGroupComponent","AvatarColors","content","AvatarStatus","status","AvatarInitials","initials","AvatarLightColors","title","avatarSizes","avatarInitials","avatarColors","avatarLightColors","avatarIcons","avatarStatus","avatarGroup","avatarGroupTooltip","Avatar","useEffect","Prism","highlightAll","xl","lg","code","sm","AvatarGroup","AvatarGroupTooltip","CardSnippet","props","children","noBody","iconCode","useState","isOpen","setIsOpen","IconCode","Wrapper","Fragment","CardBody","tag","onClick","Tag","classnames","map","item","i","ItemTag","placement","target","split","join","meta","id","undefined"],"mappings":"wLAgBeA,EAVK,WAClB,OACE,sBAAKC,UAAU,sBAAf,UACE,cAAC,IAAD,CAAQC,IAAKC,UAAWC,KAAK,OAC7B,cAAC,IAAD,CAAQF,IAAKC,YACb,cAAC,IAAD,CAAQD,IAAKC,UAAWC,KAAK,OAC7B,cAAC,IAAD,CAAQF,IAAKC,UAAWC,KAAK,W,yDCMpBC,EAZK,WAClB,OACE,sBAAKJ,UAAU,sBAAf,UACE,cAAC,IAAD,CAAQK,MAAM,UAAUC,KAAM,cAAC,IAAD,CAAUH,KAAM,OAC9C,cAAC,IAAD,CAAQE,MAAM,YAAYC,KAAM,cAAC,IAAD,CAAQH,KAAM,OAC9C,cAAC,IAAD,CAAQE,MAAM,UAAUC,KAAM,cAAC,IAAD,CAAOH,KAAM,OAC3C,cAAC,IAAD,CAAQE,MAAM,eAAeC,KAAM,cAAC,IAAD,CAAQH,KAAM,OACjD,cAAC,IAAD,CAAQE,MAAM,gBAAgBC,KAAM,cAAC,IAAD,CAAOH,KAAM,OACjD,cAAC,IAAD,CAAQE,MAAM,aAAaC,KAAM,cAAC,IAAD,CAAMH,KAAM,W,SCX7CI,EAAO,CACX,CACEN,IAAKO,EAAQ,IAAoDC,SAEnE,CACER,IAAKO,EAAQ,IAAoDC,SAEnE,CACER,IAAKO,EAAQ,KAAqDC,SAEpE,CACER,IAAKO,EAAQ,IAAqDC,SAEpE,CACER,IAAKO,EAAQ,KAAqDC,UAQvDC,EAJc,WAC3B,OAAO,cAAC,IAAD,CAAaH,KAAMA,KCPbI,EAZM,WACnB,OACE,sBAAKX,UAAU,sBAAf,UACE,cAAC,IAAD,CAAQK,MAAM,UAAUO,QAAQ,OAChC,cAAC,IAAD,CAAQP,MAAM,YAAYO,QAAQ,OAClC,cAAC,IAAD,CAAQP,MAAM,UAAUO,QAAQ,OAChC,cAAC,IAAD,CAAQP,MAAM,SAASO,QAAQ,OAC/B,cAAC,IAAD,CAAQP,MAAM,UAAUO,QAAQ,OAChC,cAAC,IAAD,CAAQP,MAAM,OAAOO,QAAQ,WCQpBC,EAVM,WACnB,OACE,sBAAKb,UAAU,sBAAf,UACE,cAAC,IAAD,CAAQC,IAAKC,UAAWY,OAAO,YAC/B,cAAC,IAAD,CAAQT,MAAM,OAAOO,QAAQ,KAAKE,OAAO,SACzC,cAAC,IAAD,CAAQT,MAAM,gBAAgBC,KAAM,cAAC,IAAD,CAAQH,KAAM,KAAQW,OAAO,SACjE,cAAC,IAAD,CAAQT,MAAM,gBAAgBO,QAAQ,KAAKE,OAAO,eCFzCC,EAVQ,WACrB,OACE,sBAAKf,UAAU,sBAAf,UACE,cAAC,IAAD,CAAQK,MAAM,gBAAgBO,QAAQ,iBAAiBT,KAAK,KAAKa,UAAQ,IACzE,cAAC,IAAD,CAAQX,MAAM,kBAAkBO,QAAQ,iBAAiBI,UAAQ,IACjE,cAAC,IAAD,CAAQX,MAAM,gBAAgBO,QAAQ,iBAAiBT,KAAK,KAAKa,UAAQ,IACzE,cAAC,IAAD,CAAQX,MAAM,eAAeO,QAAQ,iBAAiBT,KAAK,KAAKa,UAAQ,QCM/DC,EAZW,WACxB,OACE,sBAAKjB,UAAU,sBAAf,UACE,cAAC,IAAD,CAAQK,MAAM,gBAAgBO,QAAQ,OACtC,cAAC,IAAD,CAAQP,MAAM,kBAAkBO,QAAQ,OACxC,cAAC,IAAD,CAAQP,MAAM,gBAAgBO,QAAQ,OACtC,cAAC,IAAD,CAAQP,MAAM,eAAeO,QAAQ,OACrC,cAAC,IAAD,CAAQP,MAAM,gBAAgBO,QAAQ,OACtC,cAAC,IAAD,CAAQP,MAAM,aAAaO,QAAQ,WCRnCL,EAAO,CACX,CACEW,MAAO,iBACPjB,IAAKO,EAAQ,IAAoDC,SAEnE,CACES,MAAO,gBACPjB,IAAKO,EAAQ,IAAoDC,SAEnE,CACES,MAAO,kBACPjB,IAAKO,EAAQ,KAAqDC,SAEpE,CACES,MAAO,gBACPjB,IAAKO,EAAQ,IAAqDC,SAEpE,CACES,MAAO,eACPjB,IAAKO,EAAQ,KAAqDC,UAQvDC,EAJc,WAC3B,OAAO,cAAC,IAAD,CAAaH,KAAMA,KC3BfY,EACX,8BACE,sBAAMnB,UAAU,eAAhB,obAsBSoB,EACX,8BACE,sBAAMpB,UAAU,eAAhB,kfAqBSqB,EACX,8BACE,sBAAMrB,UAAU,eAAhB,6dAuBSsB,EACX,8BACE,sBAAMtB,UAAU,eAAhB,2gBAuBSuB,EACX,8BACE,sBAAMvB,UAAU,eAAhB,mpBAwBSwB,EACX,8BACE,sBAAMxB,UAAU,eAAhB,4jBAuBSyB,EACX,8BACE,sBAAMzB,UAAU,eAAhB,4mBAiCS0B,EACX,8BACE,sBAAM1B,UAAU,eAAhB,+vBC/DW2B,UAvFA,WAKb,OAJAC,qBAAU,WACRC,IAAMC,iBACL,IAGD,eAAC,WAAD,WACE,cAAC,IAAD,CAAaZ,MAAM,SAASX,KAAM,CAAC,CAAEW,MAAO,cAAgB,CAAEA,MAAO,aACrE,eAAC,KAAD,CAAKlB,UAAU,eAAf,UACE,cAAC,IAAD,CAAK+B,GAAG,IAAIC,GAAG,KAAf,SACE,eAAC,IAAD,CAAMd,MAAM,QAAQe,KAAMd,EAA1B,UACE,eAAC,IAAD,CAAUnB,UAAU,OAApB,iBACM,uDADN,mDACsF,0CADtF,KAC4G,IAC1G,yCAFF,6BAIA,cAAC,EAAD,SAGJ,cAAC,IAAD,CAAK+B,GAAG,IAAIC,GAAG,KAAf,SACE,eAAC,IAAD,CAAMd,MAAM,UAAUe,KAAMb,EAA5B,UACE,eAAC,IAAD,CAAUpB,UAAU,OAApB,sBACW,4CADX,wCAGA,cAAC,EAAD,SAGJ,cAAC,IAAD,CAAK+B,GAAG,IAAIC,GAAG,KAAf,SACE,eAAC,IAAD,CAAMd,MAAM,SAASe,KAAMZ,EAA3B,UACE,eAAC,IAAD,CAAUrB,UAAU,OAApB,sBACW,8FADX,iDAIA,cAAC,EAAD,SAGJ,cAAC,IAAD,CAAK+B,GAAG,IAAIC,GAAG,KAAf,SACE,eAAC,IAAD,CAAMd,MAAM,eAAee,KAAMX,EAAjC,UACE,eAAC,IAAD,CAAUtB,UAAU,OAApB,qBACW,IACT,kIAEQ,IAJV,gDAOA,cAAC,EAAD,SAGJ,cAAC,IAAD,CAAK+B,GAAG,IAAIC,GAAG,KAAf,SACE,eAAC,IAAD,CAAMd,MAAM,QAAQe,KAAMV,EAA1B,UACE,eAAC,IAAD,CAAUvB,UAAU,OAApB,sBACW,wCADX,kCAGA,cAAC,EAAD,SAGJ,cAAC,IAAD,CAAK+B,GAAG,IAAIG,GAAG,KAAf,SACE,eAAC,IAAD,CAAMhB,MAAM,SAASe,KAAMT,EAA3B,UACE,eAAC,IAAD,CAAUxB,UAAU,OAApB,sBACW,2EADX,oCAGA,cAAC,EAAD,SAGJ,cAAC,IAAD,CAAK+B,GAAG,IAAIG,GAAG,KAAf,SACE,eAAC,IAAD,CAAMhB,MAAM,eAAee,KAAMR,EAAjC,UACE,eAAC,IAAD,kBACM,mDADN,uBAC4D,wCAD5D,uCAIA,cAAC,IAAD,gGACA,cAACU,EAAD,SAGJ,cAAC,IAAD,CAAKJ,GAAG,IAAIG,GAAG,KAAf,SACE,eAAC,IAAD,CAAMhB,MAAM,uBAAuBe,KAAMP,EAAzC,UACE,eAAC,IAAD,uCAC2B,yCAD3B,4BACsE,mDADtE,2CAKA,cAACU,EAAD,iB,8ECzEGC,IAhCK,SAAAC,GAElB,IAAQpB,EAA4CoB,EAA5CpB,MAAOqB,EAAqCD,EAArCC,SAAUC,EAA2BF,EAA3BE,OAAQP,EAAmBK,EAAnBL,KAAMQ,EAAaH,EAAbG,SAGvC,EAA4BC,oBAAS,GAArC,mBAAOC,EAAP,KAAeC,EAAf,KAGMC,EAAWJ,GAAsB,cAAC,IAAD,CAAMtC,KAAM,KAM7C2C,EAAUN,EAASO,WAAWC,IAEpC,OACE,eAAC,IAAD,CAAMhD,UAAU,eAAhB,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAWiD,IAAI,KAAf,SAAqB/B,IACrB,qBAAKlB,UAAU,uBAAuBkD,QAT7B,kBAAMN,GAAWD,IAS1B,SACGE,OAGL,cAACC,EAAD,UAAUP,IACV,cAAC,IAAD,CAAUI,OAAQA,EAAlB,SACE,cAAC,IAAD,UAAWV,W,qGCwBJE,IA/CK,SAAAG,GAElB,IAAQ/B,EAAyB+B,EAAzB/B,KAAM0C,EAAmBX,EAAnBW,IAAKjD,EAAcsC,EAAdtC,UAGbmD,EAAMF,GAAY,MA+BxB,OACE,cAACE,EAAD,CACEnD,UAAWoD,IAAW,eAAD,eAClBpD,EAAYA,IAFjB,SA5BOO,EAAK8C,KAAI,SAACC,EAAMC,GACrB,IAAMC,EAAUF,EAAKL,IAAMK,EAAKL,IAAM,MACtC,OACE,eAAC,WAAD,WACGK,EAAKpC,MACJ,cAAC,KAAD,CAAqBuC,UAAWH,EAAKG,UAAWC,OAAQJ,EAAKpC,MAAMyC,MAAM,KAAKC,KAAK,KAAnF,SACGN,EAAKpC,QAEN,KACFoC,EAAKO,KAWH,KAVF,cAAC,IAAD,qCACEZ,IAAKO,EACLxD,UAAWoD,IAAW,UAAD,eAClBE,EAAKtD,UAAYsD,EAAKtD,aAEpBsD,EAAKpC,MAAQ,CAAE4C,GAAIR,EAAKpC,MAAMyC,MAAM,KAAKC,KAAK,MAAS,IACxDN,GANN,IAOEpC,WAAO6C,EACPF,UAAME,KAGTT,EAAKO,KAAO,cAACL,EAAD,CAASxD,UAAU,iCAAnB,SAAqDsD,EAAKO,OAAkB,OAlB5EN,U,iCCzBvB,OAAe,cAA0B","file":"static/js/91.0a2954d4.chunk.js","sourcesContent":["// ** Custom Components\nimport Avatar from '@components/avatar'\n\n// ** Avatar Image\nimport avatarImg from '@src/assets/images/portrait/small/avatar-s-20.jpg'\n\nconst AvatarSizes = () => {\n  return (\n    <div className='demo-inline-spacing'>\n      <Avatar img={avatarImg} size='sm' />\n      <Avatar img={avatarImg} />\n      <Avatar img={avatarImg} size='lg' />\n      <Avatar img={avatarImg} size='xl' />\n    </div>\n  )\n}\nexport default AvatarSizes\n","// ** Custom Components\nimport Avatar from '@components/avatar'\n\n// ** Icons Imports\nimport { GitHub, Calendar, Inbox, Camera, Award, Star } from 'react-feather'\n\nconst AvatarIcons = () => {\n  return (\n    <div className='demo-inline-spacing'>\n      <Avatar color='primary' icon={<Calendar size={14} />} />\n      <Avatar color='secondary' icon={<GitHub size={14} />} />\n      <Avatar color='success' icon={<Inbox size={14} />} />\n      <Avatar color='light-danger' icon={<Camera size={14} />} />\n      <Avatar color='light-warning' icon={<Award size={14} />} />\n      <Avatar color='light-info' icon={<Star size={14} />} />\n    </div>\n  )\n}\nexport default AvatarIcons\n","// ** Custom Components\nimport AvatarGroup from '@components/avatar-group'\n\nconst data = [\n  {\n    img: require('@src/assets/images/portrait/small/avatar-s-5.jpg').default\n  },\n  {\n    img: require('@src/assets/images/portrait/small/avatar-s-7.jpg').default\n  },\n  {\n    img: require('@src/assets/images/portrait/small/avatar-s-10.jpg').default\n  },\n  {\n    img: require('@src/assets/images/portrait/small/avatar-s-11.jpg').default\n  },\n  {\n    img: require('@src/assets/images/portrait/small/avatar-s-20.jpg').default\n  }\n]\n\nconst AvatarGroupComponent = () => {\n  return <AvatarGroup data={data} />\n}\n\nexport default AvatarGroupComponent\n","// ** Custom Components\nimport Avatar from '@components/avatar'\n\nconst AvatarColors = () => {\n  return (\n    <div className='demo-inline-spacing'>\n      <Avatar color='primary' content='PI' />\n      <Avatar color='secondary' content='PI' />\n      <Avatar color='success' content='PI' />\n      <Avatar color='danger' content='PI' />\n      <Avatar color='warning' content='PI' />\n      <Avatar color='info' content='PI' />\n    </div>\n  )\n}\nexport default AvatarColors\n","// ** Custom Components\nimport Avatar from '@components/avatar'\n\n// ** Icons Imports\nimport { GitHub } from 'react-feather'\n\n// ** Avatar Image\nimport avatarImg from '@src/assets/images/portrait/small/avatar-s-20.jpg'\n\nconst AvatarStatus = () => {\n  return (\n    <div className='demo-inline-spacing'>\n      <Avatar img={avatarImg} status='offline' />\n      <Avatar color='info' content='LD' status='busy' />\n      <Avatar color='light-primary' icon={<GitHub size={14} />} status='away' />\n      <Avatar color='light-success' content='AB' status='online' />\n    </div>\n  )\n}\nexport default AvatarStatus\n","// ** Custom Components\nimport Avatar from '@components/avatar'\n\nconst AvatarInitials = () => {\n  return (\n    <div className='demo-inline-spacing'>\n      <Avatar color='light-primary' content='Peter Ingraham' size='sm' initials />\n      <Avatar color='light-secondary' content='Peter Ingraham' initials />\n      <Avatar color='light-success' content='Peter Ingraham' size='lg' initials />\n      <Avatar color='light-danger' content='Peter Ingraham' size='xl' initials />\n    </div>\n  )\n}\nexport default AvatarInitials\n","// ** Custom Components\nimport Avatar from '@components/avatar'\n\nconst AvatarLightColors = () => {\n  return (\n    <div className='demo-inline-spacing'>\n      <Avatar color='light-primary' content='PI' />\n      <Avatar color='light-secondary' content='PI' />\n      <Avatar color='light-success' content='PI' />\n      <Avatar color='light-danger' content='PI' />\n      <Avatar color='light-warning' content='PI' />\n      <Avatar color='light-info' content='PI' />\n    </div>\n  )\n}\nexport default AvatarLightColors\n","// ** Custom Components\nimport AvatarGroup from '@components/avatar-group'\n\nconst data = [\n  {\n    title: 'Vinnie Mostowy',\n    img: require('@src/assets/images/portrait/small/avatar-s-5.jpg').default\n  },\n  {\n    title: 'Elicia Rieske',\n    img: require('@src/assets/images/portrait/small/avatar-s-7.jpg').default\n  },\n  {\n    title: 'Julee Rossignol',\n    img: require('@src/assets/images/portrait/small/avatar-s-10.jpg').default\n  },\n  {\n    title: 'Darcey Nooner',\n    img: require('@src/assets/images/portrait/small/avatar-s-11.jpg').default\n  },\n  {\n    title: 'Jenny Looper',\n    img: require('@src/assets/images/portrait/small/avatar-s-20.jpg').default\n  }\n]\n\nconst AvatarGroupComponent = () => {\n  return <AvatarGroup data={data} />\n}\n\nexport default AvatarGroupComponent\n","export const avatarSizes = (\n  <pre>\n    <code className='language-jsx'>\n      {`\n\nimport Avatar from '@components/avatar'\nimport avatarImg from '@src/assets/images/portrait/small/avatar-s-20.jpg'\n\nconst AvatarSizes = () => {\n  return (\n    <div className='demo-inline-spacing'>\n      <Avatar img={avatarImg} size='sm' />\n      <Avatar img={avatarImg} />\n      <Avatar img={avatarImg} size='lg' />\n      <Avatar img={avatarImg} size='xl' />\n    </div>\n  )\n}\nexport default AvatarSizes\n`}\n    </code>\n  </pre>\n)\n\nexport const avatarInitials = (\n  <pre>\n    <code className='language-jsx'>\n      {`\n\nimport Avatar from '@components/avatar'\n\nconst AvatarInitials = () => {\n  return (\n    <div className='demo-inline-spacing'>\n      <Avatar color='light-primary' content='Peter Ingraham' initials />\n      <Avatar color='light-secondary' content='Peter Ingraham' initials />\n      <Avatar color='light-success' content='Peter Ingraham' initials />\n      <Avatar color='light-danger' content='Peter Ingraham' initials />\n    </div>\n  )\n}\nexport default AvatarInitials\n`}\n    </code>\n  </pre>\n)\n\nexport const avatarColors = (\n  <pre>\n    <code className='language-jsx'>\n      {`\n\nimport Avatar from '@components/avatar'\n\nconst AvatarColors = () => {\n  return (\n    <div className='demo-inline-spacing'>\n      <Avatar color='primary' content='PI' />\n      <Avatar color='secondary' content='PI' />\n      <Avatar color='success' content='PI' />\n      <Avatar color='danger' content='PI' />\n      <Avatar color='warning' content='PI' />\n      <Avatar color='info' content='PI' />\n    </div>\n  )\n}\nexport default AvatarColors\n`}\n    </code>\n  </pre>\n)\n\nexport const avatarLightColors = (\n  <pre>\n    <code className='language-jsx'>\n      {`\n\nimport Avatar from '@components/avatar'\n\nconst AvatarLightColors = () => {\n  return (\n    <div className='demo-inline-spacing'>\n      <Avatar color='light-primary' content='PI' />\n      <Avatar color='light-secondary' content='PI' />\n      <Avatar color='light-success' content='PI' />\n      <Avatar color='light-danger' content='PI' />\n      <Avatar color='light-warning' content='PI' />\n      <Avatar color='light-info' content='PI' />\n    </div>\n  )\n}\nexport default AvatarLightColors\n`}\n    </code>\n  </pre>\n)\n\nexport const avatarIcons = (\n  <pre>\n    <code className='language-jsx'>\n      {`\n\nimport Avatar from '@components/avatar'\nimport { GitHub, Calendar, Inbox, Camera, Award, Star } from 'react-feather'\n\nconst AvatarIcons = () => {\n  return (\n    <div className='demo-inline-spacing'>\n      <Avatar color='primary' icon={<Calendar size={14} />} />\n      <Avatar color='secondary' icon={<GitHub size={14} />} />\n      <Avatar color='success' icon={<Inbox size={14} />} />\n      <Avatar color='light-danger' icon={<Camera size={14} />} />\n      <Avatar color='light-warning' icon={<Award size={14} />} />\n      <Avatar color='light-info' icon={<Star size={14} />} />\n    </div>\n  )\n}\nexport default AvatarIcons\n`}\n    </code>\n  </pre>\n)\n\nexport const avatarStatus = (\n  <pre>\n    <code className='language-jsx'>\n      {`\n\nimport Avatar from '@components/avatar'\nimport { GitHub } from 'react-feather'\nimport avatarImg from '@src/assets/images/portrait/small/avatar-s-20.jpg'\n\nconst AvatarStatus = () => {\n  return (\n    <div className='demo-inline-spacing'>\n      <Avatar img={avatarImg} status='offline' />\n      <Avatar color='info' content='LD' status='busy' />\n      <Avatar color='light-primary' icon={<GitHub size={14} />} status='away' />\n      <Avatar color='light-success' content='AB' status='online' />\n    </div>\n  )\n}\nexport default AvatarStatus\n`}\n    </code>\n  </pre>\n)\n\nexport const avatarGroup = (\n  <pre>\n    <code className='language-jsx'>\n      {`\n\nimport AvatarGroup from '@components/avatar-group'\n\nconst data = [\n  {\n    img: require('@src/assets/images/portrait/small/avatar-s-5.jpg')\n  },\n  {\n    img: require('@src/assets/images/portrait/small/avatar-s-7.jpg')\n  },\n  {\n    img: require('@src/assets/images/portrait/small/avatar-s-10.jpg')\n  },\n  {\n    img: require('@src/assets/images/portrait/small/avatar-s-11.jpg')\n  },\n  {\n    img: require('@src/assets/images/portrait/small/avatar-s-20.jpg')\n  }\n]\n\nconst AvatarGroupComponent = () => {\n  return <AvatarGroup data={data} />\n}\n\nexport default AvatarGroupComponent\n`}\n    </code>\n  </pre>\n)\n\nexport const avatarGroupTooltip = (\n  <pre>\n    <code className='language-jsx'>\n      {`\n\nimport AvatarGroup from '@components/avatar-group'\n\nconst data = [\n  {\n    title: 'Vinnie Mostowy',\n    img: require('@src/assets/images/portrait/small/avatar-s-5.jpg')\n  },\n  {\n    title: 'Elicia Rieske',\n    img: require('@src/assets/images/portrait/small/avatar-s-7.jpg')\n  },\n  {\n    title: 'Julee Rossignol',\n    img: require('@src/assets/images/portrait/small/avatar-s-10.jpg')\n  },\n  {\n    title: 'Darcey Nooner',\n    img: require('@src/assets/images/portrait/small/avatar-s-11.jpg')\n  },\n  {\n    title: 'Jenny Looper',\n    img: require('@src/assets/images/portrait/small/avatar-s-20.jpg')\n  }\n]\n\nconst AvatarGroupComponent = () => {\n  return <AvatarGroup data={data} />\n}\n\nexport default AvatarGroupComponent\n`}\n    </code>\n  </pre>\n)\n","// ** React Imports\nimport { Fragment, useEffect } from 'react'\n\n// ** Third Party Components\nimport Prism from 'prismjs'\n\n// ** Reactstrap Imports\nimport { Row, Col, CardText } from 'reactstrap'\n\n// ** Third Party Components\nimport Card from '@components/card-snippet'\nimport BreadCrumbs from '@components/breadcrumbs'\n\n// ** Demo Components\nimport AvatarSizes from './AvatarSizes'\nimport AvatarIcons from './AvatarIcons'\nimport AvatarGroup from './AvatarGroup'\nimport AvatarColors from './AvatarColors'\nimport AvatarStatus from './AvatarStatus'\nimport AvatarInitials from './AvatarInitials'\nimport AvatarLightColors from './AvatarLightColors'\nimport AvatarGroupTooltip from './AvatarGroupTooltip'\n\n// ** Source Code\nimport {\n  avatarIcons,\n  avatarSizes,\n  avatarGroup,\n  avatarColors,\n  avatarStatus,\n  avatarInitials,\n  avatarLightColors,\n  avatarGroupTooltip\n} from './AvatarSourceCode'\n\nconst Avatar = () => {\n  useEffect(() => {\n    Prism.highlightAll()\n  }, [])\n\n  return (\n    <Fragment>\n      <BreadCrumbs title='Avatar' data={[{ title: 'Components' }, { title: 'Avatar' }]} />\n      <Row className='match-height'>\n        <Col xl='6' lg='12'>\n          <Card title='Sizes' code={avatarSizes}>\n            <CardText className='mb-0'>\n              Use <code>size=[sm | lg | xl]</code> prop to change avatar's size. You can also use <code>height</code> &{' '}\n              <code>width</code> prop for a custom size\n            </CardText>\n            <AvatarSizes />\n          </Card>\n        </Col>\n        <Col xl='6' lg='12'>\n          <Card title='Intials' code={avatarInitials}>\n            <CardText className='mb-0'>\n              Use prop <code>initials</code> to show only Initials of content.\n            </CardText>\n            <AvatarInitials />\n          </Card>\n        </Col>\n        <Col xl='6' lg='12'>\n          <Card title='Colors' code={avatarColors}>\n            <CardText className='mb-0'>\n              Use prop <code>color=[primary | success | danger | info | warning | dark]</code> to change background\n              color of your avatar.\n            </CardText>\n            <AvatarColors />\n          </Card>\n        </Col>\n        <Col xl='6' lg='12'>\n          <Card title='Light Colors' code={avatarLightColors}>\n            <CardText className='mb-0'>\n              Use prop{' '}\n              <code>\n                color=[light-primary | light-success | light-danger | light-info | light-warning | light-dark]\n              </code>{' '}\n              to change background color of your avatar.\n            </CardText>\n            <AvatarLightColors />\n          </Card>\n        </Col>\n        <Col xl='6' lg='12'>\n          <Card title='Icons' code={avatarIcons}>\n            <CardText className='mb-0'>\n              Use prop <code>icon</code> to create avatar with icon.\n            </CardText>\n            <AvatarIcons />\n          </Card>\n        </Col>\n        <Col xl='6' sm='12'>\n          <Card title='Status' code={avatarStatus}>\n            <CardText className='mb-0'>\n              Use prop <code>status=[online | offline | away | busy]</code> to create avatar with status.\n            </CardText>\n            <AvatarStatus />\n          </Card>\n        </Col>\n        <Col xl='6' sm='12'>\n          <Card title='Avatar Group' code={avatarGroup}>\n            <CardText>\n              Use <code>&lt;AvatarGroup /&gt;</code> component and pass <code>data</code> prop to create a grouped\n              avatar.\n            </CardText>\n            <CardText>Data prop must be an array of object which contains props to be passed on avatar.</CardText>\n            <AvatarGroup />\n          </Card>\n        </Col>\n        <Col xl='6' sm='12'>\n          <Card title='Avatar Group Tooltip' code={avatarGroupTooltip}>\n            <CardText>\n              Add an extra property of <code>title</code> in the data you pass in <code>&lt;AvatarGroup /&gt;</code> to\n              create avatar group with tooltip.\n            </CardText>\n\n            <AvatarGroupTooltip />\n          </Card>\n        </Col>\n      </Row>\n    </Fragment>\n  )\n}\nexport default Avatar\n","// ** React Imports\nimport { Fragment, useState } from 'react'\n\n// ** Third Party Components\nimport PropTypes from 'prop-types'\nimport { Code } from 'react-feather'\n\n// ** Reactstrap Imports\nimport { Card, CardHeader, CardBody, CardTitle, Collapse } from 'reactstrap'\n\nconst CardSnippet = props => {\n  // ** Props\n  const { title, children, noBody, code, iconCode } = props\n\n  // ** State\n  const [isOpen, setIsOpen] = useState(false)\n\n  // ** If user passes custom icon then render that else render default icon\n  const IconCode = iconCode ? iconCode : <Code size={15} />\n\n  // ** To toggle collapse\n  const toggle = () => setIsOpen(!isOpen)\n\n  // ** If user passes noBody then return <Fragment> else return <CardBody>\n  const Wrapper = noBody ? Fragment : CardBody\n\n  return (\n    <Card className='card-snippet'>\n      <CardHeader>\n        <CardTitle tag='h4'>{title}</CardTitle>\n        <div className='views cursor-pointer' onClick={toggle}>\n          {IconCode}\n        </div>\n      </CardHeader>\n      <Wrapper>{children}</Wrapper>\n      <Collapse isOpen={isOpen}>\n        <CardBody>{code}</CardBody>\n      </Collapse>\n    </Card>\n  )\n}\n\nexport default CardSnippet\n\n// ** PropTypes\nCardSnippet.propTypes = {\n  code: PropTypes.node,\n  noBody: PropTypes.bool,\n  children: PropTypes.any,\n  iconCode: PropTypes.node,\n  className: PropTypes.string,\n  title: PropTypes.string.isRequired\n}\n","// ** React Imports\nimport { Fragment } from 'react'\n\n// ** Third Party Components\nimport Proptypes from 'prop-types'\nimport classnames from 'classnames'\n\n// ** Reactstrap Imports\nimport { UncontrolledTooltip } from 'reactstrap'\n\n// ** Custom Components Imports\nimport Avatar from '@components/avatar'\n\nconst AvatarGroup = props => {\n  // ** Props\n  const { data, tag, className } = props\n\n  // ** Conditional Tag\n  const Tag = tag ? tag : 'div'\n\n  // ** Render Data\n  const renderData = () => {\n    return data.map((item, i) => {\n      const ItemTag = item.tag ? item.tag : 'div'\n      return (\n        <Fragment key={i}>\n          {item.title ? (\n            <UncontrolledTooltip placement={item.placement} target={item.title.split(' ').join('-')}>\n              {item.title}\n            </UncontrolledTooltip>\n          ) : null}\n          {!item.meta ? (\n            <Avatar\n              tag={ItemTag}\n              className={classnames('pull-up', {\n                [item.className]: item.className\n              })}\n              {...(item.title ? { id: item.title.split(' ').join('-') } : {})}\n              {...item}\n              title={undefined}\n              meta={undefined}\n            />\n          ) : null}\n          {item.meta ? <ItemTag className='d-flex align-items-center ps-1'>{item.meta}</ItemTag> : null}\n        </Fragment>\n      )\n    })\n  }\n\n  return (\n    <Tag\n      className={classnames('avatar-group', {\n        [className]: className\n      })}\n    >\n      {renderData()}\n    </Tag>\n  )\n}\n\nexport default AvatarGroup\n\n// ** PropTypes\nAvatarGroup.propTypes = {\n  data: Proptypes.array.isRequired,\n  tag: Proptypes.oneOfType([Proptypes.func, Proptypes.string])\n}\n","export default __webpack_public_path__ + \"static/media/avatar-s-20.40d668f5.jpg\";"],"sourceRoot":""}