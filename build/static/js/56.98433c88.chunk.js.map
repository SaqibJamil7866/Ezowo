{"version":3,"sources":["@core/components/widgets/stats/StatsWithLineChart.js","@core/components/widgets/stats/ChartOptions.js","views/ui-elements/cards/statistics/Newsletter.js","views/ui-elements/cards/statistics/SiteTraffic.js","views/ui-elements/cards/statistics/ActiveUsers.js","@core/components/widgets/stats/StatsWithAreaChart.js","views/ui-elements/cards/statistics/QuaterlySales.js","views/ui-elements/cards/statistics/OrdersReceived.js","views/ui-elements/cards/statistics/RevenueGenerated.js","views/ui-elements/cards/statistics/SubscribersGained.js","@core/components/widgets/stats/StatsVertical.js","views/ui-elements/cards/statistics/index.js","@core/components/widgets/stats/TinyChartStats.js","@core/components/widgets/stats/StatsHorizontal.js","views/ui-elements/cards/statistics/StatsCard.js","views/ui-elements/cards/statistics/OrdersBarChart.js","views/ui-elements/cards/statistics/ProfitLineChart.js"],"names":["StatsWithLineChart","icon","color","stats","statTitle","series","options","type","height","rest","className","defaultProps","chart","toolbar","show","sparkline","enabled","dropShadow","top","left","blur","opacity","grid","colors","dataLabels","stroke","curve","width","fill","gradient","shadeIntensity","gradientToColors","opacityFrom","opacityTo","stops","xaxis","labels","axisBorder","yaxis","tooltip","x","Newsletter","warning","useState","data","setData","useEffect","axios","get","then","res","id","size","SiteTraffic","ActiveUsers","success","StatsWithAreaChart","props","classnames","QuarterlySales","danger","analyticsData","sales","OrdersReceived","kFormatter","orders","RevenueGenerated","revenue","SubscribersGained","subscribers","StatsVertical","StatisticsCards","context","useContext","ThemeColors","title","lg","xs","OrdersBarChart","main","ProfitLineChart","info","sm","StatsCard","cols","md","xl","StatsHorizontal","QuaterlySales","TinyChartStats","renderStats","statsMargin","subtitle","tag","map","item","index","colMargin","Object","keys","margin","length","stacked","padding","right","bottom","plotOptions","bar","horizontal","columnWidth","borderRadius","backgroundBarColors","backgroundBarRadius","legend","axisTicks","statistics","zoom","borderColor","strokeDashArray","lines","markers","strokeColors","strokeWidth","strokeOpacity","fillOpacity","discrete","seriesIndex","dataPointIndex","fillColor","strokeColor","shape","radius","hover","style","fontSize"],"mappings":"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","file":"static/js/56.98433c88.chunk.js","sourcesContent":["// ** Custom Components\nimport Avatar from '@components/avatar'\n\n// ** Third Party Components\nimport PropTypes from 'prop-types'\nimport Chart from 'react-apexcharts'\n\n// ** Reactstrap Imports\nimport { Card, CardHeader, CardText } from 'reactstrap'\n\n// ** Default Options\nimport { lineChartOptions } from './ChartOptions'\n\nconst StatsWithLineChart = ({ icon, color, stats, statTitle, series, options, type, height, ...rest }) => {\n  return (\n    <Card {...rest}>\n      <CardHeader className='align-items-start pb-0'>\n        <div>\n          <h2 className='fw-bolder'>{stats}</h2>\n          <CardText>{statTitle}</CardText>\n        </div>\n        <Avatar className='avatar-stats p-50 m-0' color={`light-${color}`} icon={icon} />\n      </CardHeader>\n      <Chart options={options} series={series} type={type} height={height ? height : 100} />\n    </Card>\n  )\n}\n\nexport default StatsWithLineChart\n\n// ** PropTypes\nStatsWithLineChart.propTypes = {\n  type: PropTypes.string,\n  height: PropTypes.string,\n  options: PropTypes.object,\n  icon: PropTypes.element.isRequired,\n  color: PropTypes.string.isRequired,\n  stats: PropTypes.string.isRequired,\n  series: PropTypes.array.isRequired,\n  statTitle: PropTypes.string.isRequired\n}\n\n// ** Default Props\nStatsWithLineChart.defaultProps = {\n  options: lineChartOptions,\n  color: 'primary'\n}\n","// ** Area Chart Common Options\nexport const areaChartOptions = {\n  chart: {\n    toolbar: {\n      show: false\n    },\n    sparkline: {\n      enabled: true\n    }\n  },\n  grid: {\n    show: false\n  },\n  colors: ['#7367F0'],\n  dataLabels: {\n    enabled: false\n  },\n  stroke: {\n    curve: 'smooth',\n    width: 2.5\n  },\n  fill: {\n    type: 'gradient',\n    gradient: {\n      shadeIntensity: 0.9,\n      opacityFrom: 0.7,\n      opacityTo: 0.5,\n      stops: [0, 80, 100]\n    }\n  },\n  xaxis: {\n    labels: {\n      show: false\n    },\n    axisBorder: {\n      show: false\n    }\n  },\n  yaxis: {\n    labels: {\n      show: false\n    }\n  },\n  tooltip: {\n    x: { show: false }\n  }\n}\n\n// ** Line Chart Common Options\nexport const lineChartOptions = {\n  chart: {\n    toolbar: {\n      show: false\n    },\n    sparkline: {\n      enabled: true\n    },\n    dropShadow: {\n      enabled: true,\n      top: 5,\n      left: 0,\n      blur: 4,\n      opacity: 0.1\n    }\n  },\n  grid: {\n    show: false\n  },\n  colors: ['#7367F0'],\n  dataLabels: {\n    enabled: false\n  },\n  stroke: {\n    curve: 'smooth',\n    width: 5\n  },\n  fill: {\n    type: 'gradient',\n    gradient: {\n      shadeIntensity: 1,\n      gradientToColors: ['#A9A2F6'],\n      opacityFrom: 1,\n      opacityTo: 1,\n      stops: [0, 100, 100, 100]\n    }\n  },\n\n  xaxis: {\n    labels: {\n      show: false\n    },\n    axisBorder: {\n      show: false\n    }\n  },\n  yaxis: {\n    labels: {\n      show: false\n    }\n  },\n  tooltip: {\n    x: { show: false }\n  }\n}\n","// ** React Imports\nimport { useEffect, useState } from 'react'\n\n// ** Third Party Components\nimport axios from 'axios'\nimport { Mail } from 'react-feather'\n\n// ** Custom Components\nimport StatsWithLineChart from '@components/widgets/stats/StatsWithLineChart'\n\nconst Newsletter = ({ warning }) => {\n  // ** State\n  const [data, setData] = useState(null)\n\n  useEffect(() => {\n    axios.get('/card/card-statistics/newsletter').then(res => setData(res.data))\n  }, [])\n\n  const options = {\n    chart: {\n      id: 'newsletter',\n      toolbar: {\n        show: false\n      },\n      sparkline: {\n        enabled: true\n      },\n      dropShadow: {\n        enabled: true,\n        top: 5,\n        left: 0,\n        blur: 4,\n        opacity: 0.1\n      }\n    },\n    grid: {\n      show: false\n    },\n    colors: [warning],\n    dataLabels: {\n      enabled: false\n    },\n    stroke: {\n      curve: 'smooth',\n      width: 5\n    },\n    fill: {\n      type: 'gradient',\n      gradient: {\n        shadeIntensity: 1,\n        gradientToColors: ['#ffc085'],\n        opacityFrom: 1,\n        opacityTo: 1,\n        stops: [0, 100, 100, 100]\n      }\n    },\n\n    xaxis: {\n      labels: {\n        show: false\n      },\n      axisBorder: {\n        show: false\n      }\n    },\n    yaxis: {\n      labels: {\n        show: false\n      }\n    },\n    tooltip: {\n      x: { show: false }\n    }\n  }\n\n  return data !== null ? (\n    <StatsWithLineChart\n      icon={<Mail size={21} />}\n      color='warning'\n      stats='28.7k'\n      statTitle='Newsletter'\n      series={data.series}\n      type='line'\n      options={options}\n    />\n  ) : null\n}\n\nexport default Newsletter\n","// ** React Imports\nimport { useEffect, useState } from 'react'\n\n// ** Third Party Components\nimport axios from 'axios'\nimport { Monitor } from 'react-feather'\n\n// ** Custom Components\nimport StatsWithLineChart from '@components/widgets/stats/StatsWithLineChart'\n\nconst SiteTraffic = () => {\n  // ** State\n  const [data, setData] = useState(null)\n\n  useEffect(() => {\n    axios.get('/card/card-statistics/site-traffic').then(res => setData(res.data))\n  }, [])\n\n  return data !== null ? (\n    <StatsWithLineChart\n      icon={<Monitor size={21} />}\n      color='primary'\n      stats='78.9k'\n      statTitle='Site Traffic'\n      series={data.series}\n      type='line'\n    />\n  ) : null\n}\n\nexport default SiteTraffic\n","// ** React Imports\nimport { useEffect, useState } from 'react'\n\n// ** Third Party Components\nimport axios from 'axios'\nimport { UserCheck } from 'react-feather'\n\n// ** Custom Components\nimport StatsWithLineChart from '@components/widgets/stats/StatsWithLineChart'\n\nconst ActiveUsers = ({ success }) => {\n  // ** State\n  const [data, setData] = useState(null)\n\n  useEffect(() => {\n    axios.get('/card/card-statistics/active-users').then(res => setData(res.data))\n  }, [])\n\n  const options = {\n    chart: {\n      id: 'activeUsers',\n      toolbar: {\n        show: false\n      },\n      sparkline: {\n        enabled: true\n      },\n      dropShadow: {\n        enabled: true,\n        top: 5,\n        left: 0,\n        blur: 4,\n        opacity: 0.1\n      }\n    },\n    grid: {\n      show: false\n    },\n    colors: [success],\n    dataLabels: {\n      enabled: false\n    },\n    stroke: {\n      curve: 'smooth',\n      width: 5\n    },\n    fill: {\n      type: 'gradient',\n      gradient: {\n        shadeIntensity: 1,\n        gradientToColors: ['#55DD92'],\n        opacityFrom: 1,\n        opacityTo: 1,\n        stops: [0, 100, 100, 100]\n      }\n    },\n\n    xaxis: {\n      labels: {\n        show: false\n      },\n      axisBorder: {\n        show: false\n      }\n    },\n    yaxis: {\n      labels: {\n        show: false\n      }\n    },\n    tooltip: {\n      x: { show: false }\n    }\n  }\n\n  return data !== null ? (\n    <StatsWithLineChart\n      icon={<UserCheck size={21} />}\n      color='success'\n      stats='659.8k'\n      statTitle='Active Users'\n      series={data.series}\n      options={options}\n      type='line'\n    />\n  ) : null\n}\n\nexport default ActiveUsers\n","// ** Custom Components\nimport Avatar from '@components/avatar'\n\n// ** Third Party Components\nimport PropTypes from 'prop-types'\nimport classnames from 'classnames'\nimport Chart from 'react-apexcharts'\n\n// ** Reactstrap Imports\nimport { Card, CardBody } from 'reactstrap'\n\n// ** Default Options\nimport { areaChartOptions } from './ChartOptions'\n\nconst StatsWithAreaChart = props => {\n  // ** Props\n  const { icon, color, stats, statTitle, series, options, type, height, className, ...rest } = props\n  return (\n    <Card {...rest}>\n      <CardBody\n        className={classnames('pb-0', {\n          [className]: className\n        })}\n      >\n        <Avatar className='avatar-stats p-50 m-0' color={`light-${color}`} icon={icon} />\n        <h2 className='fw-bolder mt-1'>{stats}</h2>\n        <p className='card-text'>{statTitle}</p>\n      </CardBody>\n      <Chart options={options} series={series} type={type} height={height ? height : 100} />\n    </Card>\n  )\n}\n\nexport default StatsWithAreaChart\n\n// ** PropTypes\nStatsWithAreaChart.propTypes = {\n  type: PropTypes.string,\n  height: PropTypes.string,\n  options: PropTypes.object,\n  className: PropTypes.string,\n  icon: PropTypes.element.isRequired,\n  color: PropTypes.string.isRequired,\n  stats: PropTypes.string.isRequired,\n  series: PropTypes.array.isRequired,\n  statTitle: PropTypes.string.isRequired\n}\n\n// ** Default Props\nStatsWithAreaChart.defaultProps = {\n  color: 'primary',\n  options: areaChartOptions\n}\n","// ** React Imports\nimport { useEffect, useState } from 'react'\n\n// ** Third Party Components\nimport axios from 'axios'\nimport { ShoppingCart } from 'react-feather'\n\n// ** Custom Components\nimport StatsWithAreaChart from '@components/widgets/stats/StatsWithAreaChart'\n\nconst QuarterlySales = ({ danger }) => {\n  // ** State\n  const [data, setData] = useState(null)\n\n  const options = {\n    chart: {\n      id: 'revenue',\n      toolbar: {\n        show: false\n      },\n      sparkline: {\n        enabled: true\n      }\n    },\n    grid: {\n      show: false\n    },\n    colors: [danger],\n    dataLabels: {\n      enabled: false\n    },\n    stroke: {\n      curve: 'smooth',\n      width: 2.5\n    },\n    fill: {\n      type: 'gradient',\n      gradient: {\n        shadeIntensity: 0.9,\n        opacityFrom: 0.7,\n        opacityTo: 0.5,\n        stops: [0, 80, 100]\n      }\n    },\n\n    xaxis: {\n      labels: {\n        show: false\n      },\n      axisBorder: {\n        show: false\n      }\n    },\n    yaxis: {\n      labels: {\n        show: false\n      }\n    },\n    tooltip: {\n      x: { show: false }\n    }\n  }\n\n  useEffect(() => {\n    axios.get('/card/card-statistics/sales').then(res => setData(res.data))\n  }, [])\n\n  return data !== null ? (\n    <StatsWithAreaChart\n      icon={<ShoppingCart size={21} />}\n      color='danger'\n      stats={data.analyticsData.sales}\n      statTitle='Quarterly Sales'\n      options={options}\n      series={data.series}\n      type='area'\n    />\n  ) : null\n}\nexport default QuarterlySales\n","// ** React Imports\nimport { useEffect, useState } from 'react'\n\n// ** Third Party Components\nimport axios from 'axios'\nimport { Package } from 'react-feather'\n\n// ** Custom Components\nimport StatsWithAreaChart from '@components/widgets/stats/StatsWithAreaChart'\n\nconst OrdersReceived = ({ kFormatter, warning }) => {\n  // ** State\n  const [data, setData] = useState(null)\n\n  const options = {\n    chart: {\n      id: 'revenue',\n      toolbar: {\n        show: false\n      },\n      sparkline: {\n        enabled: true\n      }\n    },\n    grid: {\n      show: false\n    },\n    colors: [warning],\n    dataLabels: {\n      enabled: false\n    },\n    stroke: {\n      curve: 'smooth',\n      width: 2.5\n    },\n    fill: {\n      type: 'gradient',\n      gradient: {\n        shadeIntensity: 0.9,\n        opacityFrom: 0.7,\n        opacityTo: 0.5,\n        stops: [0, 80, 100]\n      }\n    },\n\n    xaxis: {\n      labels: {\n        show: false\n      },\n      axisBorder: {\n        show: false\n      }\n    },\n    yaxis: {\n      labels: {\n        show: false\n      }\n    },\n    tooltip: {\n      x: { show: false }\n    }\n  }\n\n  useEffect(() => {\n    axios.get('/card/card-statistics/orders').then(res => setData(res.data))\n    return () => setData(null)\n  }, [])\n\n  return data !== null ? (\n    <StatsWithAreaChart\n      icon={<Package size={21} />}\n      color='warning'\n      stats={kFormatter(data.analyticsData.orders)}\n      statTitle='Orders Received'\n      options={options}\n      series={data.series}\n      type='area'\n    />\n  ) : null\n}\nexport default OrdersReceived\n","// ** React Imports\nimport { useEffect, useState } from 'react'\n\n// ** Third Party Components\nimport axios from 'axios'\nimport { CreditCard } from 'react-feather'\n\n// ** Custom Components\nimport StatsWithAreaChart from '@components/widgets/stats/StatsWithAreaChart'\n\nconst RevenueGenerated = ({ kFormatter, success }) => {\n  // ** State\n  const [data, setData] = useState(null)\n\n  const options = {\n    chart: {\n      id: 'revenue',\n      toolbar: {\n        show: false\n      },\n      sparkline: {\n        enabled: true\n      }\n    },\n    grid: {\n      show: false\n    },\n    colors: [success],\n    dataLabels: {\n      enabled: false\n    },\n    stroke: {\n      curve: 'smooth',\n      width: 2.5\n    },\n    fill: {\n      type: 'gradient',\n      gradient: {\n        shadeIntensity: 0.9,\n        opacityFrom: 0.7,\n        opacityTo: 0.5,\n        stops: [0, 80, 100]\n      }\n    },\n\n    xaxis: {\n      labels: {\n        show: false\n      },\n      axisBorder: {\n        show: false\n      }\n    },\n    yaxis: {\n      labels: {\n        show: false\n      }\n    },\n    tooltip: {\n      x: { show: false }\n    }\n  }\n\n  useEffect(() => {\n    axios.get('/card/card-statistics/revenue').then(res => setData(res.data))\n  }, [])\n\n  return data !== null ? (\n    <StatsWithAreaChart\n      icon={<CreditCard size={21} />}\n      color='success'\n      stats={kFormatter(data.analyticsData.revenue)}\n      statTitle='Revenue Generated'\n      options={options}\n      series={data.series}\n      type='area'\n    />\n  ) : null\n}\nexport default RevenueGenerated\n","// ** React Imports\nimport { useEffect, useState } from 'react'\n\n// ** Third Party Components\nimport axios from 'axios'\nimport { Users } from 'react-feather'\n\n// ** Custom Components\nimport StatsWithAreaChart from '@components/widgets/stats/StatsWithAreaChart'\n\nconst SubscribersGained = ({ kFormatter }) => {\n  // ** State\n  const [data, setData] = useState(null)\n\n  useEffect(() => {\n    axios.get('/card/card-statistics/subscribers').then(res => setData(res.data))\n    return () => setData(null)\n  }, [])\n\n  return data !== null ? (\n    <StatsWithAreaChart\n      icon={<Users size={21} />}\n      color='primary'\n      stats={kFormatter(data.analyticsData.subscribers)}\n      statTitle='Subscribers Gained'\n      series={data.series}\n      type='area'\n    />\n  ) : null\n}\n\nexport default SubscribersGained\n","// ** Third Party Components\nimport PropTypes from 'prop-types'\n\n// ** Reactstrap Imports\nimport { Card, CardBody } from 'reactstrap'\n\nconst StatsVertical = ({ icon, color, stats, statTitle, className }) => {\n  return (\n    <Card className='text-center'>\n      <CardBody className={className}>\n        <div className={`avatar p-50 m-0 mb-1 ${color ? `bg-light-${color}` : 'bg-light-primary'}`}>\n          <div className='avatar-content'>{icon}</div>\n        </div>\n        <h2 className='fw-bolder'>{stats}</h2>\n        <p className='card-text line-ellipsis'>{statTitle}</p>\n      </CardBody>\n    </Card>\n  )\n}\n\nexport default StatsVertical\n\n// ** PropTypes\nStatsVertical.propTypes = {\n  className: PropTypes.string,\n  icon: PropTypes.element.isRequired,\n  color: PropTypes.string.isRequired,\n  stats: PropTypes.string.isRequired,\n  statTitle: PropTypes.string.isRequired\n}\n","// ** React Imports\nimport { Fragment, useContext } from 'react'\n\n// ** Reactstrap Imports\nimport { Row, Col } from 'reactstrap'\n\n// ** Utils\nimport { kFormatter } from '@utils'\n\n// ** Context\nimport { ThemeColors } from '@src/utility/context/ThemeColors'\n\n// ** Custom Components\nimport StatsCard from './StatsCard'\nimport Newsletter from './Newsletter'\nimport SiteTraffic from './SiteTraffic'\nimport ActiveUsers from './ActiveUsers'\nimport QuaterlySales from './QuaterlySales'\nimport OrdersReceived from './OrdersReceived'\nimport OrdersBarChart from './OrdersBarChart'\nimport ProfitLineChart from './ProfitLineChart'\nimport RevenueGenerated from './RevenueGenerated'\nimport Breadcrumbs from '@components/breadcrumbs'\nimport SubscribersGained from './SubscribersGained'\nimport StatsVertical from '@components/widgets/stats/StatsVertical'\nimport StatsHorizontal from '@components/widgets/stats/StatsHorizontal'\n\n// ** Icons Imports\nimport {\n  Eye,\n  Cpu,\n  Heart,\n  Award,\n  Truck,\n  Server,\n  Activity,\n  ShoppingBag,\n  AlertOctagon,\n  MessageSquare\n} from 'react-feather'\n\nconst StatisticsCards = () => {\n  // ** Context\n  const context = useContext(ThemeColors)\n\n  return (\n    <Fragment>\n      <Breadcrumbs title='Statistics Cards' data={[{ title: 'Cards' }, { title: 'Statistics Cards' }]} />\n\n      <Row>\n        {/* Orders Bar Chart */}\n        <Col lg='2' xs='6'>\n          <OrdersBarChart warning={context.colors.warning.main} />\n        </Col>\n        {/* Orders Bar Chart */}\n\n        {/* Profit Line Chart */}\n        <Col lg='2' xs='6'>\n          <ProfitLineChart info={context.colors.info.main} />\n        </Col>\n        {/* Profit Line Chart */}\n\n        {/* Stats Card */}\n        <Col lg='8' sm='12'>\n          <StatsCard cols={{ md: '3', sm: '6', xs: '12' }} />\n        </Col>\n        {/* Stats Card */}\n      </Row>\n\n      <Row>\n        {/* Stats With Icons */}\n        <Col xl='2' md='4' sm='6'>\n          <StatsVertical icon={<Eye size={21} />} color='info' stats='36.9k' statTitle='Views' />\n        </Col>\n        <Col xl='2' md='4' sm='6'>\n          <StatsVertical icon={<MessageSquare size={21} />} color='warning' stats='12k' statTitle='Comments' />\n        </Col>\n        <Col xl='2' md='4' sm='6'>\n          <StatsVertical icon={<ShoppingBag size={21} />} color='danger' stats='97.8k' statTitle='Orders' />\n        </Col>\n        <Col xl='2' md='4' sm='6'>\n          <StatsVertical icon={<Heart size={21} />} color='primary' stats='26.8' statTitle='Bookmarks' />\n        </Col>\n        <Col xl='2' md='4' sm='6'>\n          <StatsVertical icon={<Award size={21} />} color='success' stats='689' statTitle='Reviews' />\n        </Col>\n        <Col xl='2' md='4' sm='6'>\n          <StatsVertical icon={<Truck size={21} />} color='danger' stats='2.1k' statTitle='Returns' />\n        </Col>\n        {/* Stats With Icons */}\n      </Row>\n\n      <Row>\n        {/* Stats With Icons Horizontal */}\n        <Col lg='3' sm='6'>\n          <StatsHorizontal icon={<Cpu size={21} />} color='primary' stats='86%' statTitle='CPU Usage' />\n        </Col>\n        <Col lg='3' sm='6'>\n          <StatsHorizontal icon={<Server size={21} />} color='success' stats='1.2gb' statTitle='Memory Usage' />\n        </Col>\n        <Col lg='3' sm='6'>\n          <StatsHorizontal icon={<Activity size={21} />} color='danger' stats='0.1%' statTitle='Downtime Ratio' />\n        </Col>\n        <Col lg='3' sm='6'>\n          <StatsHorizontal icon={<AlertOctagon size={21} />} color='warning' stats='13' statTitle='Issues Found' />\n        </Col>\n        {/* Stats With Icons Horizontal */}\n      </Row>\n\n      <Row>\n        {/* Stats Area Charts */}\n        <Col lg='3' sm='6'>\n          <SubscribersGained kFormatter={kFormatter} />\n        </Col>\n        <Col lg='3' sm='6'>\n          <RevenueGenerated kFormatter={kFormatter} success={context.colors.success.main} />\n        </Col>\n        <Col lg='3' sm='6'>\n          <QuaterlySales danger={context.colors.danger.main} />\n        </Col>\n        <Col lg='3' sm='6'>\n          <OrdersReceived kFormatter={kFormatter} warning={context.colors.warning.main} />\n        </Col>\n        {/* Stats Area Charts */}\n      </Row>\n\n      <Row>\n        {/* Stats Line Charts */}\n        <Col lg='4' sm='6'>\n          <SiteTraffic />\n        </Col>\n        <Col lg='4' sm='6'>\n          <ActiveUsers success={context.colors.success.main} />\n        </Col>\n        <Col lg='4' sm='6'>\n          <Newsletter warning={context.colors.warning.main} />\n        </Col>\n        {/* Stats Line Charts */}\n      </Row>\n    </Fragment>\n  )\n}\n\nexport default StatisticsCards\n","// ** Third Party Components\nimport PropTypes from 'prop-types'\nimport Chart from 'react-apexcharts'\n\n// ** Reactstrap Imports\nimport { Card, CardBody } from 'reactstrap'\n\nconst TinyChartStats = props => {\n  // ** Props\n  const { title, stats, options, series, type, height } = props\n\n  return (\n    <Card className='card-tiny-line-stats'>\n      <CardBody className='pb-50'>\n        <h6>{title}</h6>\n        <h2 className='fw-bolder mb-1'>{stats}</h2>\n        <Chart options={options} series={series} type={type} height={height} />\n      </CardBody>\n    </Card>\n  )\n}\n\nexport default TinyChartStats\n\n// ** PropTypes\nTinyChartStats.propTypes = {\n  type: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  stats: PropTypes.string.isRequired,\n  series: PropTypes.array.isRequired,\n  options: PropTypes.object.isRequired\n}\n\n// ** Default Props\nTinyChartStats.defaultProps = {\n  height: 100\n}\n","// ** Third Party Components\nimport PropTypes from 'prop-types'\nimport classnames from 'classnames'\n\n// ** Reactstrap Imports\nimport { Card, CardBody } from 'reactstrap'\n\nconst StatsHorizontal = ({ icon, color, stats, renderStats, statTitle, className, statsMargin }) => {\n  return (\n    <Card>\n      <CardBody className={className}>\n        <div className='d-flex justify-content-between align-items-center'>\n          <div>\n            {renderStats ? (\n              renderStats\n            ) : (\n              <h2\n                className={classnames('fw-bolder', {\n                  'mb-0': !statsMargin,\n                  [statsMargin]: statsMargin\n                })}\n              >\n                {stats}\n              </h2>\n            )}\n\n            <p className='card-text'>{statTitle}</p>\n          </div>\n          <div className={`avatar avatar-stats p-50 m-0 ${color ? `bg-light-${color}` : 'bg-light-primary'}`}>\n            <div className='avatar-content'>{icon}</div>\n          </div>\n        </div>\n      </CardBody>\n    </Card>\n  )\n}\n\nexport default StatsHorizontal\n\n// ** PropTypes\nStatsHorizontal.propTypes = {\n  stats: PropTypes.string,\n  renderStats: PropTypes.any,\n  className: PropTypes.string,\n  icon: PropTypes.element.isRequired,\n  color: PropTypes.string.isRequired,\n  statTitle: PropTypes.string.isRequired,\n  statsMargin: PropTypes.oneOf(['mb-0', 'mb-25', 'mb-50', 'mb-75', 'mb-1', 'mb-2', 'mb-3', 'mb-4', 'mb-5'])\n}\n","// ** Third Party Components\nimport classnames from 'classnames'\nimport { TrendingUp, User, Box, DollarSign } from 'react-feather'\n\n// ** Custom Components\nimport Avatar from '@components/avatar'\n\n// ** Reactstrap Imports\nimport { Card, CardHeader, CardTitle, CardBody, CardText, Row, Col } from 'reactstrap'\n\nconst StatsCard = ({ cols }) => {\n  const data = [\n    {\n      title: '230k',\n      subtitle: 'Sales',\n      color: 'light-primary',\n      icon: <TrendingUp size={24} />\n    },\n    {\n      title: '8.549k',\n      subtitle: 'Customers',\n      color: 'light-info',\n      icon: <User size={24} />\n    },\n    {\n      title: '1.423k',\n      subtitle: 'Products',\n      color: 'light-danger',\n      icon: <Box size={24} />\n    },\n    {\n      title: '$9745',\n      subtitle: 'Revenue',\n      color: 'light-success',\n      icon: <DollarSign size={24} />\n    }\n  ]\n\n  const renderData = () => {\n    return data.map((item, index) => {\n      const colMargin = Object.keys(cols)\n      const margin = index === 2 ? 'sm' : colMargin[0]\n      return (\n        <Col\n          key={index}\n          {...cols}\n          className={classnames({\n            [`mb-2 mb-${margin}-0`]: index !== data.length - 1\n          })}\n        >\n          <div className='d-flex align-items-center'>\n            <Avatar color={item.color} icon={item.icon} className='me-2' />\n            <div className='my-auto'>\n              <h4 className='fw-bolder mb-0'>{item.title}</h4>\n              <CardText className='font-small-3 mb-0'>{item.subtitle}</CardText>\n            </div>\n          </div>\n        </Col>\n      )\n    })\n  }\n\n  return (\n    <Card className='card-statistics'>\n      <CardHeader>\n        <CardTitle tag='h4'>Statistics</CardTitle>\n        <CardText className='card-text font-small-2 me-25 mb-0'>Updated 1 month ago</CardText>\n      </CardHeader>\n      <CardBody className='statistics-body'>\n        <Row>{renderData()}</Row>\n      </CardBody>\n    </Card>\n  )\n}\n\nexport default StatsCard\n","// ** React Imports\nimport { useEffect, useState } from 'react'\n\n// ** Third Party Components\nimport axios from 'axios'\n\n// ** Custom Components\nimport TinyChartStats from '@components/widgets/stats/TinyChartStats'\n\nconst OrdersBarChart = ({ warning }) => {\n  // ** State\n  const [data, setData] = useState(null)\n\n  useEffect(() => {\n    axios.get('/card/card-statistics/orders-bar-chart').then(res => setData(res.data))\n    return () => setData(null)\n  }, [])\n\n  const options = {\n    chart: {\n      stacked: true,\n      toolbar: {\n        show: false\n      }\n    },\n    grid: {\n      show: false,\n      padding: {\n        left: 0,\n        right: 0,\n        top: -15,\n        bottom: -15\n      }\n    },\n    plotOptions: {\n      bar: {\n        horizontal: false,\n        columnWidth: '20%',\n        borderRadius: [0, 5],\n        colors: {\n          backgroundBarColors: ['#f3f3f3', '#f3f3f3', '#f3f3f3', '#f3f3f3', '#f3f3f3'],\n          backgroundBarRadius: 5\n        }\n      }\n    },\n    legend: {\n      show: false\n    },\n    dataLabels: {\n      enabled: false\n    },\n    colors: [warning],\n    xaxis: {\n      labels: {\n        show: false\n      },\n      axisBorder: {\n        show: false\n      },\n      axisTicks: {\n        show: false\n      }\n    },\n    yaxis: {\n      show: false\n    },\n    tooltip: {\n      x: {\n        show: false\n      }\n    }\n  }\n\n  return data !== null ? (\n    <TinyChartStats\n      height={70}\n      type='bar'\n      options={options}\n      title={data.title}\n      stats={data.statistics}\n      series={data.series}\n    />\n  ) : null\n}\n\nexport default OrdersBarChart\n","// ** React Imports\nimport { useEffect, useState } from 'react'\n\n// ** Third Party Components\nimport axios from 'axios'\n\n// ** Custom Components\nimport TinyChartStats from '@components/widgets/stats/TinyChartStats'\n\nconst ProfitLineChart = ({ info }) => {\n  // ** State\n  const [data, setData] = useState(null)\n\n  useEffect(() => {\n    axios.get('/card/card-statistics/profit-line-chart').then(res => setData(res.data))\n    return () => setData(null)\n  }, [])\n\n  const options = {\n    chart: {\n      toolbar: {\n        show: false\n      },\n      zoom: {\n        enabled: false\n      }\n    },\n    grid: {\n      borderColor: '#EBEBEB',\n      strokeDashArray: 5,\n      xaxis: {\n        lines: {\n          show: true\n        }\n      },\n      yaxis: {\n        lines: {\n          show: false\n        }\n      },\n      padding: {\n        top: -30,\n        bottom: -10\n      }\n    },\n    stroke: {\n      width: 3\n    },\n    colors: [info],\n    series: [\n      {\n        data: [0, 20, 5, 30, 15, 45]\n      }\n    ],\n    markers: {\n      size: 2,\n      colors: info,\n      strokeColors: info,\n      strokeWidth: 2,\n      strokeOpacity: 1,\n      strokeDashArray: 0,\n      fillOpacity: 1,\n      discrete: [\n        {\n          seriesIndex: 0,\n          dataPointIndex: 5,\n          fillColor: '#ffffff',\n          strokeColor: info,\n          size: 5\n        }\n      ],\n      shape: 'circle',\n      radius: 2,\n      hover: {\n        size: 3\n      }\n    },\n    xaxis: {\n      labels: {\n        show: true,\n        style: {\n          fontSize: '0px'\n        }\n      },\n      axisBorder: {\n        show: false\n      },\n      axisTicks: {\n        show: false\n      }\n    },\n    yaxis: {\n      show: false\n    },\n    tooltip: {\n      x: {\n        show: false\n      }\n    }\n  }\n\n  return data !== null ? (\n    <TinyChartStats\n      height={70}\n      type='line'\n      options={options}\n      title={data.title}\n      stats={data.statistics}\n      series={data.series}\n    />\n  ) : null\n}\n\nexport default ProfitLineChart\n"],"sourceRoot":""}